diff --git a/node_modules/react-native-svg/android/.project b/node_modules/react-native-svg/android/.project
new file mode 100644
index 0000000..8ed1097
--- /dev/null
+++ b/node_modules/react-native-svg/android/.project
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>react-native-svg</name>
+	<comment>Project react-native-svg created by Buildship.</comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.buildship.core.gradleprojectbuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.buildship.core.gradleprojectnature</nature>
+	</natures>
+	<filteredResources>
+		<filter>
+			<id>1759667972416</id>
+			<name></name>
+			<type>30</type>
+			<matcher>
+				<id>org.eclipse.core.resources.regexFilterMatcher</id>
+				<arguments>node_modules|\.git|__CREATED_BY_JAVA_LANGUAGE_SERVER__</arguments>
+			</matcher>
+		</filter>
+	</filteredResources>
+</projectDescription>
diff --git a/node_modules/react-native-svg/android/bin/.gradle/7.5.1/checksums/checksums.lock b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/checksums/checksums.lock
new file mode 100644
index 0000000..6126d4a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/checksums/checksums.lock differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/7.5.1/checksums/md5-checksums.bin b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/checksums/md5-checksums.bin
new file mode 100644
index 0000000..63faf73
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/checksums/md5-checksums.bin differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/7.5.1/checksums/sha1-checksums.bin b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/checksums/sha1-checksums.bin
new file mode 100644
index 0000000..acff85a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/checksums/sha1-checksums.bin differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/7.5.1/dependencies-accessors/dependencies-accessors.lock b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/dependencies-accessors/dependencies-accessors.lock
new file mode 100644
index 0000000..4e659f8
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/dependencies-accessors/dependencies-accessors.lock differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/7.5.1/dependencies-accessors/gc.properties b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/dependencies-accessors/gc.properties
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-svg/android/bin/.gradle/7.5.1/executionHistory/executionHistory.bin b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/executionHistory/executionHistory.bin
new file mode 100644
index 0000000..8cdd30a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/executionHistory/executionHistory.bin differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/7.5.1/executionHistory/executionHistory.lock b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/executionHistory/executionHistory.lock
new file mode 100644
index 0000000..9e14eb6
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/executionHistory/executionHistory.lock differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/7.5.1/fileChanges/last-build.bin b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/fileChanges/last-build.bin
new file mode 100644
index 0000000..f76dd23
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/fileChanges/last-build.bin differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/7.5.1/fileHashes/fileHashes.bin b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/fileHashes/fileHashes.bin
new file mode 100644
index 0000000..8defdf6
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/fileHashes/fileHashes.bin differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/7.5.1/fileHashes/fileHashes.lock b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/fileHashes/fileHashes.lock
new file mode 100644
index 0000000..0fc4c2c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/fileHashes/fileHashes.lock differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/7.5.1/fileHashes/resourceHashesCache.bin b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/fileHashes/resourceHashesCache.bin
new file mode 100644
index 0000000..02486a2
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/fileHashes/resourceHashesCache.bin differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/7.5.1/gc.properties b/node_modules/react-native-svg/android/bin/.gradle/7.5.1/gc.properties
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-svg/android/bin/.gradle/buildOutputCleanup/buildOutputCleanup.lock b/node_modules/react-native-svg/android/bin/.gradle/buildOutputCleanup/buildOutputCleanup.lock
new file mode 100644
index 0000000..c2b40eb
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/buildOutputCleanup/buildOutputCleanup.lock differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/buildOutputCleanup/cache.properties b/node_modules/react-native-svg/android/bin/.gradle/buildOutputCleanup/cache.properties
new file mode 100644
index 0000000..fcf3223
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/.gradle/buildOutputCleanup/cache.properties
@@ -0,0 +1,2 @@
+#Fri Aug 12 18:23:47 CEST 2022
+gradle.version=7.5.1
diff --git a/node_modules/react-native-svg/android/bin/.gradle/buildOutputCleanup/outputFiles.bin b/node_modules/react-native-svg/android/bin/.gradle/buildOutputCleanup/outputFiles.bin
new file mode 100644
index 0000000..97be519
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/buildOutputCleanup/outputFiles.bin differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/file-system.probe b/node_modules/react-native-svg/android/bin/.gradle/file-system.probe
new file mode 100644
index 0000000..a3c9ab1
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/.gradle/file-system.probe differ
diff --git a/node_modules/react-native-svg/android/bin/.gradle/vcs-1/gc.properties b/node_modules/react-native-svg/android/bin/.gradle/vcs-1/gc.properties
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-svg/android/bin/.project b/node_modules/react-native-svg/android/bin/.project
new file mode 100644
index 0000000..8ed1097
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/.project
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>react-native-svg</name>
+	<comment>Project react-native-svg created by Buildship.</comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.buildship.core.gradleprojectbuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.buildship.core.gradleprojectnature</nature>
+	</natures>
+	<filteredResources>
+		<filter>
+			<id>1759667972416</id>
+			<name></name>
+			<type>30</type>
+			<matcher>
+				<id>org.eclipse.core.resources.regexFilterMatcher</id>
+				<arguments>node_modules|\.git|__CREATED_BY_JAVA_LANGUAGE_SERVER__</arguments>
+			</matcher>
+		</filter>
+	</filteredResources>
+</projectDescription>
diff --git a/node_modules/react-native-svg/android/bin/build.gradle b/node_modules/react-native-svg/android/bin/build.gradle
new file mode 100644
index 0000000..4fe912c
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build.gradle
@@ -0,0 +1,147 @@
+buildscript {
+    // The Android Gradle plugin is only required when opening the android folder stand-alone.
+    // This avoids unnecessary downloads and potential conflicts when the library is included as a
+    // module dependency in an application project.
+    if (project == rootProject) {
+        repositories {
+            mavenCentral()
+            google()
+        }
+
+        dependencies {
+            classpath("com.android.tools.build:gradle:7.4.2")
+            classpath "com.diffplug.spotless:spotless-plugin-gradle:6.17.0"
+        }
+    }
+}
+
+def isNewArchitectureEnabled() {
+    // To opt-in for the New Architecture, you can either:
+    // - Set `newArchEnabled` to true inside the `gradle.properties` file
+    // - Invoke gradle with `-newArchEnabled=true`
+    // - Set an environment variable `ORG_GRADLE_PROJECT_newArchEnabled=true`
+    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
+}
+
+if (isNewArchitectureEnabled()) {
+    apply plugin: "com.facebook.react"
+}
+
+if (project == rootProject) {
+    apply from: 'spotless.gradle'
+}
+
+apply plugin: 'com.android.library'
+
+def safeExtGet(prop, fallback) {
+    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
+}
+
+def resolveReactNativeDirectory() {
+  def reactNativeLocation = safeExtGet("REACT_NATIVE_NODE_MODULES_DIR", null)
+  if (reactNativeLocation != null) {
+    return file(reactNativeLocation)
+  }
+
+  // Fallback to node resolver for custom directory structures like monorepos.
+  def reactNativePackage = file(
+      providers.exec {
+          workingDir(rootDir)
+          commandLine("node", "--print", "require.resolve('react-native/package.json')")
+      }.standardOutput.asText.get().trim()
+  )
+  if (reactNativePackage.exists()) {
+    return reactNativePackage.parentFile
+  }
+
+  throw new GradleException("[react-native-svg] Unable to resolve react-native location in node_modules. Your app should define `REACT_NATIVE_NODE_MODULES_DIR` extension property in `app/build.gradle` with a path to react-native in node_modules.")
+}
+
+def reactNativeRootDir = resolveReactNativeDirectory()
+def reactNativeProperties = new Properties()
+file("$reactNativeRootDir/ReactAndroid/gradle.properties").withInputStream { reactNativeProperties.load(it) }
+
+def REACT_NATIVE_VERSION = reactNativeProperties.getProperty("VERSION_NAME")
+def REACT_NATIVE_MINOR_VERSION = REACT_NATIVE_VERSION.startsWith("0.0.0-") ? 1000 : REACT_NATIVE_VERSION.split("\\.")[1].toInteger()
+
+def getFrescoVersion() {
+    def reactNativeRootDir = resolveReactNativeDirectory()
+    def frescoVersion = null
+    file("$reactNativeRootDir/gradle/libs.versions.toml").withInputStream { stream ->
+        stream.eachLine { line ->
+            if (line.contains("fresco") && !line.contains("ref")) {
+                def keyValue = line.split("=")
+                if (keyValue.size() == 2) {
+                    frescoVersion = keyValue[1].trim().replaceAll(/["']/, "")
+                }
+            }
+        }
+    }
+    if (!frescoVersion) {
+        return "3.2.0"
+    }
+    return frescoVersion
+}
+def FRESCO_VERSION = getFrescoVersion()
+
+android {
+    compileSdkVersion safeExtGet('compileSdkVersion', 28)
+    namespace "com.horcrux.svg"
+    def agpVersion = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION
+    if (agpVersion.tokenize('.')[0].toInteger() >= 8) {
+        buildFeatures {
+            buildConfig = true
+        }
+    }
+    // Used to override the NDK path/version on internal CI or by allowing
+    // users to customize the NDK path/version from their root project (e.g. for M1 support)
+    if (rootProject.hasProperty("ndkPath")) {
+        ndkPath rootProject.ext.ndkPath
+    }
+    if (rootProject.hasProperty("ndkVersion")) {
+        ndkVersion rootProject.ext.ndkVersion
+    }
+
+    defaultConfig {
+        minSdkVersion safeExtGet('minSdkVersion', 16)
+        //noinspection OldTargetApi
+        targetSdkVersion safeExtGet('targetSdkVersion', 28)
+        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
+
+        consumerProguardFiles 'proguard-rules.pro'
+    }
+    lintOptions {
+        abortOnError false
+    }
+
+    sourceSets.main {
+        java {
+            if (!isNewArchitectureEnabled()) {
+                srcDirs += [
+                    "src/paper/java",
+                ]
+            }
+        }
+    }
+}
+
+repositories {
+    mavenCentral()
+    mavenLocal()
+    google()
+    maven {
+        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
+        url "$rootDir/../node_modules/react-native/android"
+    }
+}
+
+dependencies {
+    implementation 'com.facebook.react:react-native:+'
+    implementation("com.facebook.fresco:fresco:${FRESCO_VERSION}") {
+        exclude group: 'com.facebook.soloader'
+    }
+    implementation("com.facebook.fresco:imagepipeline-okhttp3:${FRESCO_VERSION}") {
+        exclude group: 'com.facebook.soloader'
+    }
+    implementation("com.facebook.fresco:middleware:${FRESCO_VERSION}")
+}
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/buildConfig/release/com/horcrux/svg/BuildConfig.class b/node_modules/react-native-svg/android/bin/build/generated/source/buildConfig/release/com/horcrux/svg/BuildConfig.class
new file mode 100644
index 0000000..373930f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/buildConfig/release/com/horcrux/svg/BuildConfig.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.class
new file mode 100644
index 0000000..90867b4
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.class
new file mode 100644
index 0000000..7350c13
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.class
new file mode 100644
index 0000000..a7545b6
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.class
new file mode 100644
index 0000000..3d69233
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.class
new file mode 100644
index 0000000..ef9930c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.class
new file mode 100644
index 0000000..7c24cf4
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.class
new file mode 100644
index 0000000..558baaa
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.class
new file mode 100644
index 0000000..37992bb
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerDelegate.class
new file mode 100644
index 0000000..82cb53e
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerInterface.class
new file mode 100644
index 0000000..f7ddab2
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerDelegate.class
new file mode 100644
index 0000000..e2f0298
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerInterface.class
new file mode 100644
index 0000000..12d5e53
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerDelegate.class
new file mode 100644
index 0000000..178d58b
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerInterface.class
new file mode 100644
index 0000000..c4d6b13
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerDelegate.class
new file mode 100644
index 0000000..bcaf3d4
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerInterface.class
new file mode 100644
index 0000000..ef0101f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerDelegate.class
new file mode 100644
index 0000000..621d732
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerInterface.class
new file mode 100644
index 0000000..b4edb2c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerDelegate.class
new file mode 100644
index 0000000..3981e97
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerInterface.class
new file mode 100644
index 0000000..54af98b
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerDelegate.class
new file mode 100644
index 0000000..c23c2b7
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerInterface.class
new file mode 100644
index 0000000..f9ace62
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFilterManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFilterManagerDelegate.class
new file mode 100644
index 0000000..ab26988
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFilterManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFilterManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFilterManagerInterface.class
new file mode 100644
index 0000000..2f79c93
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFilterManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.class
new file mode 100644
index 0000000..88df1ea
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.class
new file mode 100644
index 0000000..dfabae6
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.class
new file mode 100644
index 0000000..01eeaa7
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.class
new file mode 100644
index 0000000..bbcff5c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.class
new file mode 100644
index 0000000..84c7f98
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.class
new file mode 100644
index 0000000..99da799
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.class
new file mode 100644
index 0000000..9d7faea
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.class
new file mode 100644
index 0000000..9a60f17
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.class
new file mode 100644
index 0000000..758c639
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.class
new file mode 100644
index 0000000..c882733
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.class
new file mode 100644
index 0000000..f3ce046
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.class
new file mode 100644
index 0000000..c4e3980
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.class
new file mode 100644
index 0000000..8ddf264
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.class
new file mode 100644
index 0000000..a6c4760
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.class
new file mode 100644
index 0000000..74fa351
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.class
new file mode 100644
index 0000000..d0b8c04
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.class
new file mode 100644
index 0000000..438d542
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.class
new file mode 100644
index 0000000..37da19f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.class
new file mode 100644
index 0000000..9f49f88
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.class
new file mode 100644
index 0000000..c8f090c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.class
new file mode 100644
index 0000000..230ba82
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.class
new file mode 100644
index 0000000..005a768
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.class
new file mode 100644
index 0000000..604e3e9
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.class
new file mode 100644
index 0000000..2a0d240
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.class
new file mode 100644
index 0000000..a7b20da
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.class
new file mode 100644
index 0000000..c62581a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.class
new file mode 100644
index 0000000..58e189c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.class
new file mode 100644
index 0000000..de290ef
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.class
new file mode 100644
index 0000000..475eb45
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.class
new file mode 100644
index 0000000..c4d8b52
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.class
new file mode 100644
index 0000000..a3b4050
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.class
new file mode 100644
index 0000000..d8ac5ad
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.class
new file mode 100644
index 0000000..98a1a79
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.class
new file mode 100644
index 0000000..f3674a2
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/horcrux/svg/NativeSvgRenderableModuleSpec.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/horcrux/svg/NativeSvgRenderableModuleSpec.class
new file mode 100644
index 0000000..c61b94b
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/horcrux/svg/NativeSvgRenderableModuleSpec.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/horcrux/svg/NativeSvgViewModuleSpec.class b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/horcrux/svg/NativeSvgViewModuleSpec.class
new file mode 100644
index 0000000..71fcb29
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/java/com/horcrux/svg/NativeSvgViewModuleSpec.class differ
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/CMakeLists.txt b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/CMakeLists.txt
new file mode 100644
index 0000000..0e77cf9
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/CMakeLists.txt
@@ -0,0 +1,36 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+cmake_minimum_required(VERSION 3.13)
+set(CMAKE_VERBOSE_MAKEFILE on)
+
+file(GLOB react_codegen_SRCS CONFIGURE_DEPENDS *.cpp react/renderer/components/rnsvg/*.cpp)
+
+add_library(
+  react_codegen_rnsvg
+  OBJECT
+  ${react_codegen_SRCS}
+)
+
+target_include_directories(react_codegen_rnsvg PUBLIC . react/renderer/components/rnsvg)
+
+target_link_libraries(
+  react_codegen_rnsvg
+  fbjni
+  jsi
+  # We need to link different libraries based on whether we are building rncore or not, that's necessary
+  # because we want to break a circular dependency between react_codegen_rncore and reactnative
+  reactnative
+)
+
+target_compile_options(
+  react_codegen_rnsvg
+  PRIVATE
+  -DLOG_TAG=\"ReactNative\"
+  -fexceptions
+  -frtti
+  -std=c++20
+  -Wall
+)
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ComponentDescriptors.cpp b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ComponentDescriptors.cpp
new file mode 100644
index 0000000..23bde21
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ComponentDescriptors.cpp
@@ -0,0 +1,23 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorCpp.js
+ */
+
+#include <react/renderer/components/rnsvg/ComponentDescriptors.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+void rnsvg_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry) {
+registry->add(concreteComponentDescriptorProvider<RNSVGSvgViewAndroidComponentDescriptor>());
+registry->add(concreteComponentDescriptorProvider<RNSVGSvgViewComponentDescriptor>());
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ComponentDescriptors.h b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ComponentDescriptors.h
new file mode 100644
index 0000000..6859613
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ComponentDescriptors.h
@@ -0,0 +1,25 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rnsvg/ShadowNodes.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+using RNSVGSvgViewAndroidComponentDescriptor = ConcreteComponentDescriptor<RNSVGSvgViewAndroidShadowNode>;
+using RNSVGSvgViewComponentDescriptor = ConcreteComponentDescriptor<RNSVGSvgViewShadowNode>;
+
+void rnsvg_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry);
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/EventEmitters.cpp b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/EventEmitters.cpp
new file mode 100644
index 0000000..2092c7f
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/EventEmitters.cpp
@@ -0,0 +1,270 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterCpp.js
+ */
+
+#include <react/renderer/components/rnsvg/EventEmitters.h>
+
+
+namespace facebook::react {
+
+
+void RNSVGCircleEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGClipPathEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+
+void RNSVGEllipseEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+
+
+
+
+
+
+
+
+void RNSVGForeignObjectEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGGroupEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGImageEventEmitter::onLoad(OnLoad $event) const {
+  dispatchEvent("load", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto source = jsi::Object(runtime);
+  source.setProperty(runtime, "width", $event.source.width);
+  source.setProperty(runtime, "height", $event.source.height);
+  source.setProperty(runtime, "uri", $event.source.uri);
+  $payload.setProperty(runtime, "source", source);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGImageEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+
+
+void RNSVGLineEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+
+void RNSVGMaskEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGPathEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+
+
+void RNSVGRectEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+
+void RNSVGTextEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGTextPathEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGTSpanEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGUseEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/EventEmitters.h b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/EventEmitters.h
new file mode 100644
index 0000000..cfc9a00
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/EventEmitters.h
@@ -0,0 +1,364 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewEventEmitter.h>
+
+
+namespace facebook::react {
+class RNSVGSvgViewAndroidEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGCircleEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGClipPathEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGDefsEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGEllipseEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGFeBlendEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFeColorMatrixEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFeCompositeEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFeFloodEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFeGaussianBlurEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFeMergeEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFeOffsetEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFilterEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGForeignObjectEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGGroupEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGImageEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnLoadSource {
+      Float width;
+    Float height;
+    std::string uri;
+    };
+
+  struct OnLoad {
+      OnLoadSource source;
+    };
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onLoad(OnLoad value) const;
+
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGSvgViewEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGLinearGradientEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGLineEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGMarkerEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGMaskEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGPathEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGPatternEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGRadialGradientEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGRectEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGSymbolEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGTextEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGTextPathEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGTSpanEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGUseEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/Props.cpp b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/Props.cpp
new file mode 100644
index 0000000..836ef81
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/Props.cpp
@@ -0,0 +1,977 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsCpp.js
+ */
+
+#include <react/renderer/components/rnsvg/Props.h>
+#include <folly/dynamic.h>
+#include <react/renderer/components/image/conversions.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+
+namespace facebook::react {
+
+RNSVGSvgViewAndroidProps::RNSVGSvgViewAndroidProps(
+    const PropsParserContext &context,
+    const RNSVGSvgViewAndroidProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    bbWidth(convertRawProp(context, rawProps, "bbWidth", sourceProps.bbWidth, {})),
+    bbHeight(convertRawProp(context, rawProps, "bbHeight", sourceProps.bbHeight, {})),
+    minX(convertRawProp(context, rawProps, "minX", sourceProps.minX, {0.0})),
+    minY(convertRawProp(context, rawProps, "minY", sourceProps.minY, {0.0})),
+    vbWidth(convertRawProp(context, rawProps, "vbWidth", sourceProps.vbWidth, {0.0})),
+    vbHeight(convertRawProp(context, rawProps, "vbHeight", sourceProps.vbHeight, {0.0})),
+    align(convertRawProp(context, rawProps, "align", sourceProps.align, {})),
+    meetOrSlice(convertRawProp(context, rawProps, "meetOrSlice", sourceProps.meetOrSlice, {0})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    hasTVPreferredFocus(convertRawProp(context, rawProps, "hasTVPreferredFocus", sourceProps.hasTVPreferredFocus, {false})),
+    borderBottomColor(convertRawProp(context, rawProps, "borderBottomColor", sourceProps.borderBottomColor, {})),
+    nextFocusDown(convertRawProp(context, rawProps, "nextFocusDown", sourceProps.nextFocusDown, {0})),
+    borderRightColor(convertRawProp(context, rawProps, "borderRightColor", sourceProps.borderRightColor, {})),
+    nextFocusRight(convertRawProp(context, rawProps, "nextFocusRight", sourceProps.nextFocusRight, {0})),
+    borderLeftColor(convertRawProp(context, rawProps, "borderLeftColor", sourceProps.borderLeftColor, {})),
+    borderColor(convertRawProp(context, rawProps, "borderColor", sourceProps.borderColor, {})),
+    removeClippedSubviews(convertRawProp(context, rawProps, "removeClippedSubviews", sourceProps.removeClippedSubviews, {false})),
+    nextFocusForward(convertRawProp(context, rawProps, "nextFocusForward", sourceProps.nextFocusForward, {0})),
+    nextFocusUp(convertRawProp(context, rawProps, "nextFocusUp", sourceProps.nextFocusUp, {0})),
+    accessible(convertRawProp(context, rawProps, "accessible", sourceProps.accessible, {false})),
+    borderStartColor(convertRawProp(context, rawProps, "borderStartColor", sourceProps.borderStartColor, {})),
+    borderEndColor(convertRawProp(context, rawProps, "borderEndColor", sourceProps.borderEndColor, {})),
+    focusable(convertRawProp(context, rawProps, "focusable", sourceProps.focusable, {false})),
+    nativeBackgroundAndroid(convertRawProp(context, rawProps, "nativeBackgroundAndroid", sourceProps.nativeBackgroundAndroid, {})),
+    nativeForegroundAndroid(convertRawProp(context, rawProps, "nativeForegroundAndroid", sourceProps.nativeForegroundAndroid, {})),
+    backfaceVisibility(convertRawProp(context, rawProps, "backfaceVisibility", sourceProps.backfaceVisibility, {})),
+    borderStyle(convertRawProp(context, rawProps, "borderStyle", sourceProps.borderStyle, {})),
+    needsOffscreenAlphaCompositing(convertRawProp(context, rawProps, "needsOffscreenAlphaCompositing", sourceProps.needsOffscreenAlphaCompositing, {false})),
+    hitSlop(convertRawProp(context, rawProps, "hitSlop", sourceProps.hitSlop, {})),
+    borderTopColor(convertRawProp(context, rawProps, "borderTopColor", sourceProps.borderTopColor, {})),
+    nextFocusLeft(convertRawProp(context, rawProps, "nextFocusLeft", sourceProps.nextFocusLeft, {0})),
+    borderBlockColor(convertRawProp(context, rawProps, "borderBlockColor", sourceProps.borderBlockColor, {})),
+    borderBlockEndColor(convertRawProp(context, rawProps, "borderBlockEndColor", sourceProps.borderBlockEndColor, {})),
+    borderBlockStartColor(convertRawProp(context, rawProps, "borderBlockStartColor", sourceProps.borderBlockStartColor, {})),
+    borderRadius(convertRawProp(context, rawProps, "borderRadius", sourceProps.borderRadius, {})),
+    borderTopLeftRadius(convertRawProp(context, rawProps, "borderTopLeftRadius", sourceProps.borderTopLeftRadius, {})),
+    borderTopRightRadius(convertRawProp(context, rawProps, "borderTopRightRadius", sourceProps.borderTopRightRadius, {})),
+    borderBottomRightRadius(convertRawProp(context, rawProps, "borderBottomRightRadius", sourceProps.borderBottomRightRadius, {})),
+    borderBottomLeftRadius(convertRawProp(context, rawProps, "borderBottomLeftRadius", sourceProps.borderBottomLeftRadius, {})),
+    borderTopStartRadius(convertRawProp(context, rawProps, "borderTopStartRadius", sourceProps.borderTopStartRadius, {})),
+    borderTopEndRadius(convertRawProp(context, rawProps, "borderTopEndRadius", sourceProps.borderTopEndRadius, {})),
+    borderBottomStartRadius(convertRawProp(context, rawProps, "borderBottomStartRadius", sourceProps.borderBottomStartRadius, {})),
+    borderBottomEndRadius(convertRawProp(context, rawProps, "borderBottomEndRadius", sourceProps.borderBottomEndRadius, {})),
+    borderEndEndRadius(convertRawProp(context, rawProps, "borderEndEndRadius", sourceProps.borderEndEndRadius, {})),
+    borderEndStartRadius(convertRawProp(context, rawProps, "borderEndStartRadius", sourceProps.borderEndStartRadius, {})),
+    borderStartEndRadius(convertRawProp(context, rawProps, "borderStartEndRadius", sourceProps.borderStartEndRadius, {})),
+    borderStartStartRadius(convertRawProp(context, rawProps, "borderStartStartRadius", sourceProps.borderStartStartRadius, {}))
+      {}
+RNSVGCircleProps::RNSVGCircleProps(
+    const PropsParserContext &context,
+    const RNSVGCircleProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    cx(convertRawProp(context, rawProps, "cx", sourceProps.cx, {})),
+    cy(convertRawProp(context, rawProps, "cy", sourceProps.cy, {})),
+    r(convertRawProp(context, rawProps, "r", sourceProps.r, {}))
+      {}
+RNSVGClipPathProps::RNSVGClipPathProps(
+    const PropsParserContext &context,
+    const RNSVGClipPathProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {}))
+      {}
+RNSVGDefsProps::RNSVGDefsProps(
+    const PropsParserContext &context,
+    const RNSVGDefsProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {}))
+      {}
+RNSVGEllipseProps::RNSVGEllipseProps(
+    const PropsParserContext &context,
+    const RNSVGEllipseProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    cx(convertRawProp(context, rawProps, "cx", sourceProps.cx, {})),
+    cy(convertRawProp(context, rawProps, "cy", sourceProps.cy, {})),
+    rx(convertRawProp(context, rawProps, "rx", sourceProps.rx, {})),
+    ry(convertRawProp(context, rawProps, "ry", sourceProps.ry, {}))
+      {}
+RNSVGFeBlendProps::RNSVGFeBlendProps(
+    const PropsParserContext &context,
+    const RNSVGFeBlendProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    in1(convertRawProp(context, rawProps, "in1", sourceProps.in1, {})),
+    in2(convertRawProp(context, rawProps, "in2", sourceProps.in2, {})),
+    mode(convertRawProp(context, rawProps, "mode", sourceProps.mode, {RNSVGFeBlendMode::Normal}))
+      {}
+RNSVGFeColorMatrixProps::RNSVGFeColorMatrixProps(
+    const PropsParserContext &context,
+    const RNSVGFeColorMatrixProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    in1(convertRawProp(context, rawProps, "in1", sourceProps.in1, {})),
+    type(convertRawProp(context, rawProps, "type", sourceProps.type, {RNSVGFeColorMatrixType::Matrix})),
+    values(convertRawProp(context, rawProps, "values", sourceProps.values, {}))
+      {}
+RNSVGFeCompositeProps::RNSVGFeCompositeProps(
+    const PropsParserContext &context,
+    const RNSVGFeCompositeProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    in1(convertRawProp(context, rawProps, "in1", sourceProps.in1, {})),
+    in2(convertRawProp(context, rawProps, "in2", sourceProps.in2, {})),
+    operator1(convertRawProp(context, rawProps, "operator1", sourceProps.operator1, {RNSVGFeCompositeOperator1::Over})),
+    k1(convertRawProp(context, rawProps, "k1", sourceProps.k1, {0.0})),
+    k2(convertRawProp(context, rawProps, "k2", sourceProps.k2, {0.0})),
+    k3(convertRawProp(context, rawProps, "k3", sourceProps.k3, {0.0})),
+    k4(convertRawProp(context, rawProps, "k4", sourceProps.k4, {0.0}))
+      {}
+RNSVGFeFloodProps::RNSVGFeFloodProps(
+    const PropsParserContext &context,
+    const RNSVGFeFloodProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    floodColor(convertRawProp(context, rawProps, "floodColor", sourceProps.floodColor, {})),
+    floodOpacity(convertRawProp(context, rawProps, "floodOpacity", sourceProps.floodOpacity, {1.0}))
+      {}
+RNSVGFeGaussianBlurProps::RNSVGFeGaussianBlurProps(
+    const PropsParserContext &context,
+    const RNSVGFeGaussianBlurProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    in1(convertRawProp(context, rawProps, "in1", sourceProps.in1, {})),
+    stdDeviationX(convertRawProp(context, rawProps, "stdDeviationX", sourceProps.stdDeviationX, {0.0})),
+    stdDeviationY(convertRawProp(context, rawProps, "stdDeviationY", sourceProps.stdDeviationY, {0.0})),
+    edgeMode(convertRawProp(context, rawProps, "edgeMode", sourceProps.edgeMode, {RNSVGFeGaussianBlurEdgeMode::None}))
+      {}
+RNSVGFeMergeProps::RNSVGFeMergeProps(
+    const PropsParserContext &context,
+    const RNSVGFeMergeProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    nodes(convertRawProp(context, rawProps, "nodes", sourceProps.nodes, {}))
+      {}
+RNSVGFeOffsetProps::RNSVGFeOffsetProps(
+    const PropsParserContext &context,
+    const RNSVGFeOffsetProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    in1(convertRawProp(context, rawProps, "in1", sourceProps.in1, {})),
+    dx(convertRawProp(context, rawProps, "dx", sourceProps.dx, {})),
+    dy(convertRawProp(context, rawProps, "dy", sourceProps.dy, {}))
+      {}
+RNSVGFilterProps::RNSVGFilterProps(
+    const PropsParserContext &context,
+    const RNSVGFilterProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    filterUnits(convertRawProp(context, rawProps, "filterUnits", sourceProps.filterUnits, {RNSVGFilterFilterUnits::ObjectBoundingBox})),
+    primitiveUnits(convertRawProp(context, rawProps, "primitiveUnits", sourceProps.primitiveUnits, {RNSVGFilterPrimitiveUnits::UserSpaceOnUse}))
+      {}
+RNSVGForeignObjectProps::RNSVGForeignObjectProps(
+    const PropsParserContext &context,
+    const RNSVGForeignObjectProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {}))
+      {}
+RNSVGGroupProps::RNSVGGroupProps(
+    const PropsParserContext &context,
+    const RNSVGGroupProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {}))
+      {}
+RNSVGImageProps::RNSVGImageProps(
+    const PropsParserContext &context,
+    const RNSVGImageProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    src(convertRawProp(context, rawProps, "src", sourceProps.src, {})),
+    align(convertRawProp(context, rawProps, "align", sourceProps.align, {})),
+    meetOrSlice(convertRawProp(context, rawProps, "meetOrSlice", sourceProps.meetOrSlice, {0}))
+      {}
+RNSVGSvgViewProps::RNSVGSvgViewProps(
+    const PropsParserContext &context,
+    const RNSVGSvgViewProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    bbWidth(convertRawProp(context, rawProps, "bbWidth", sourceProps.bbWidth, {})),
+    bbHeight(convertRawProp(context, rawProps, "bbHeight", sourceProps.bbHeight, {})),
+    minX(convertRawProp(context, rawProps, "minX", sourceProps.minX, {0.0})),
+    minY(convertRawProp(context, rawProps, "minY", sourceProps.minY, {0.0})),
+    vbWidth(convertRawProp(context, rawProps, "vbWidth", sourceProps.vbWidth, {0.0})),
+    vbHeight(convertRawProp(context, rawProps, "vbHeight", sourceProps.vbHeight, {0.0})),
+    align(convertRawProp(context, rawProps, "align", sourceProps.align, {})),
+    meetOrSlice(convertRawProp(context, rawProps, "meetOrSlice", sourceProps.meetOrSlice, {0})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    hitSlop(convertRawProp(context, rawProps, "hitSlop", sourceProps.hitSlop, {}))
+      {}
+RNSVGLinearGradientProps::RNSVGLinearGradientProps(
+    const PropsParserContext &context,
+    const RNSVGLinearGradientProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    x1(convertRawProp(context, rawProps, "x1", sourceProps.x1, {})),
+    y1(convertRawProp(context, rawProps, "y1", sourceProps.y1, {})),
+    x2(convertRawProp(context, rawProps, "x2", sourceProps.x2, {})),
+    y2(convertRawProp(context, rawProps, "y2", sourceProps.y2, {})),
+    gradient(convertRawProp(context, rawProps, "gradient", sourceProps.gradient, {})),
+    gradientUnits(convertRawProp(context, rawProps, "gradientUnits", sourceProps.gradientUnits, {0})),
+    gradientTransform(convertRawProp(context, rawProps, "gradientTransform", sourceProps.gradientTransform, {}))
+      {}
+RNSVGLineProps::RNSVGLineProps(
+    const PropsParserContext &context,
+    const RNSVGLineProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    x1(convertRawProp(context, rawProps, "x1", sourceProps.x1, {})),
+    y1(convertRawProp(context, rawProps, "y1", sourceProps.y1, {})),
+    x2(convertRawProp(context, rawProps, "x2", sourceProps.x2, {})),
+    y2(convertRawProp(context, rawProps, "y2", sourceProps.y2, {}))
+      {}
+RNSVGMarkerProps::RNSVGMarkerProps(
+    const PropsParserContext &context,
+    const RNSVGMarkerProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    refX(convertRawProp(context, rawProps, "refX", sourceProps.refX, {})),
+    refY(convertRawProp(context, rawProps, "refY", sourceProps.refY, {})),
+    markerHeight(convertRawProp(context, rawProps, "markerHeight", sourceProps.markerHeight, {})),
+    markerWidth(convertRawProp(context, rawProps, "markerWidth", sourceProps.markerWidth, {})),
+    markerUnits(convertRawProp(context, rawProps, "markerUnits", sourceProps.markerUnits, {})),
+    orient(convertRawProp(context, rawProps, "orient", sourceProps.orient, {})),
+    minX(convertRawProp(context, rawProps, "minX", sourceProps.minX, {0.0})),
+    minY(convertRawProp(context, rawProps, "minY", sourceProps.minY, {0.0})),
+    vbWidth(convertRawProp(context, rawProps, "vbWidth", sourceProps.vbWidth, {0.0})),
+    vbHeight(convertRawProp(context, rawProps, "vbHeight", sourceProps.vbHeight, {0.0})),
+    align(convertRawProp(context, rawProps, "align", sourceProps.align, {})),
+    meetOrSlice(convertRawProp(context, rawProps, "meetOrSlice", sourceProps.meetOrSlice, {0}))
+      {}
+RNSVGMaskProps::RNSVGMaskProps(
+    const PropsParserContext &context,
+    const RNSVGMaskProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    maskUnits(convertRawProp(context, rawProps, "maskUnits", sourceProps.maskUnits, {0})),
+    maskContentUnits(convertRawProp(context, rawProps, "maskContentUnits", sourceProps.maskContentUnits, {0})),
+    maskType(convertRawProp(context, rawProps, "maskType", sourceProps.maskType, {0}))
+      {}
+RNSVGPathProps::RNSVGPathProps(
+    const PropsParserContext &context,
+    const RNSVGPathProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    d(convertRawProp(context, rawProps, "d", sourceProps.d, {}))
+      {}
+RNSVGPatternProps::RNSVGPatternProps(
+    const PropsParserContext &context,
+    const RNSVGPatternProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    patternUnits(convertRawProp(context, rawProps, "patternUnits", sourceProps.patternUnits, {0})),
+    patternContentUnits(convertRawProp(context, rawProps, "patternContentUnits", sourceProps.patternContentUnits, {0})),
+    patternTransform(convertRawProp(context, rawProps, "patternTransform", sourceProps.patternTransform, {})),
+    minX(convertRawProp(context, rawProps, "minX", sourceProps.minX, {0.0})),
+    minY(convertRawProp(context, rawProps, "minY", sourceProps.minY, {0.0})),
+    vbWidth(convertRawProp(context, rawProps, "vbWidth", sourceProps.vbWidth, {0.0})),
+    vbHeight(convertRawProp(context, rawProps, "vbHeight", sourceProps.vbHeight, {0.0})),
+    align(convertRawProp(context, rawProps, "align", sourceProps.align, {})),
+    meetOrSlice(convertRawProp(context, rawProps, "meetOrSlice", sourceProps.meetOrSlice, {0}))
+      {}
+RNSVGRadialGradientProps::RNSVGRadialGradientProps(
+    const PropsParserContext &context,
+    const RNSVGRadialGradientProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    fx(convertRawProp(context, rawProps, "fx", sourceProps.fx, {})),
+    fy(convertRawProp(context, rawProps, "fy", sourceProps.fy, {})),
+    cx(convertRawProp(context, rawProps, "cx", sourceProps.cx, {})),
+    cy(convertRawProp(context, rawProps, "cy", sourceProps.cy, {})),
+    rx(convertRawProp(context, rawProps, "rx", sourceProps.rx, {})),
+    ry(convertRawProp(context, rawProps, "ry", sourceProps.ry, {})),
+    gradient(convertRawProp(context, rawProps, "gradient", sourceProps.gradient, {})),
+    gradientUnits(convertRawProp(context, rawProps, "gradientUnits", sourceProps.gradientUnits, {0})),
+    gradientTransform(convertRawProp(context, rawProps, "gradientTransform", sourceProps.gradientTransform, {}))
+      {}
+RNSVGRectProps::RNSVGRectProps(
+    const PropsParserContext &context,
+    const RNSVGRectProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    rx(convertRawProp(context, rawProps, "rx", sourceProps.rx, {})),
+    ry(convertRawProp(context, rawProps, "ry", sourceProps.ry, {}))
+      {}
+RNSVGSymbolProps::RNSVGSymbolProps(
+    const PropsParserContext &context,
+    const RNSVGSymbolProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    minX(convertRawProp(context, rawProps, "minX", sourceProps.minX, {0.0})),
+    minY(convertRawProp(context, rawProps, "minY", sourceProps.minY, {0.0})),
+    vbWidth(convertRawProp(context, rawProps, "vbWidth", sourceProps.vbWidth, {0.0})),
+    vbHeight(convertRawProp(context, rawProps, "vbHeight", sourceProps.vbHeight, {0.0})),
+    align(convertRawProp(context, rawProps, "align", sourceProps.align, {})),
+    meetOrSlice(convertRawProp(context, rawProps, "meetOrSlice", sourceProps.meetOrSlice, {0}))
+      {}
+RNSVGTextProps::RNSVGTextProps(
+    const PropsParserContext &context,
+    const RNSVGTextProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    dx(convertRawProp(context, rawProps, "dx", sourceProps.dx, {})),
+    dy(convertRawProp(context, rawProps, "dy", sourceProps.dy, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    rotate(convertRawProp(context, rawProps, "rotate", sourceProps.rotate, {})),
+    inlineSize(convertRawProp(context, rawProps, "inlineSize", sourceProps.inlineSize, {})),
+    textLength(convertRawProp(context, rawProps, "textLength", sourceProps.textLength, {})),
+    baselineShift(convertRawProp(context, rawProps, "baselineShift", sourceProps.baselineShift, {})),
+    lengthAdjust(convertRawProp(context, rawProps, "lengthAdjust", sourceProps.lengthAdjust, {})),
+    alignmentBaseline(convertRawProp(context, rawProps, "alignmentBaseline", sourceProps.alignmentBaseline, {})),
+    verticalAlign(convertRawProp(context, rawProps, "verticalAlign", sourceProps.verticalAlign, {}))
+      {}
+RNSVGTextPathProps::RNSVGTextPathProps(
+    const PropsParserContext &context,
+    const RNSVGTextPathProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    dx(convertRawProp(context, rawProps, "dx", sourceProps.dx, {})),
+    dy(convertRawProp(context, rawProps, "dy", sourceProps.dy, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    rotate(convertRawProp(context, rawProps, "rotate", sourceProps.rotate, {})),
+    inlineSize(convertRawProp(context, rawProps, "inlineSize", sourceProps.inlineSize, {})),
+    textLength(convertRawProp(context, rawProps, "textLength", sourceProps.textLength, {})),
+    baselineShift(convertRawProp(context, rawProps, "baselineShift", sourceProps.baselineShift, {})),
+    lengthAdjust(convertRawProp(context, rawProps, "lengthAdjust", sourceProps.lengthAdjust, {})),
+    alignmentBaseline(convertRawProp(context, rawProps, "alignmentBaseline", sourceProps.alignmentBaseline, {})),
+    verticalAlign(convertRawProp(context, rawProps, "verticalAlign", sourceProps.verticalAlign, {})),
+    href(convertRawProp(context, rawProps, "href", sourceProps.href, {})),
+    side(convertRawProp(context, rawProps, "side", sourceProps.side, {})),
+    method(convertRawProp(context, rawProps, "method", sourceProps.method, {})),
+    midLine(convertRawProp(context, rawProps, "midLine", sourceProps.midLine, {})),
+    spacing(convertRawProp(context, rawProps, "spacing", sourceProps.spacing, {})),
+    startOffset(convertRawProp(context, rawProps, "startOffset", sourceProps.startOffset, {}))
+      {}
+RNSVGTSpanProps::RNSVGTSpanProps(
+    const PropsParserContext &context,
+    const RNSVGTSpanProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    dx(convertRawProp(context, rawProps, "dx", sourceProps.dx, {})),
+    dy(convertRawProp(context, rawProps, "dy", sourceProps.dy, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    rotate(convertRawProp(context, rawProps, "rotate", sourceProps.rotate, {})),
+    inlineSize(convertRawProp(context, rawProps, "inlineSize", sourceProps.inlineSize, {})),
+    textLength(convertRawProp(context, rawProps, "textLength", sourceProps.textLength, {})),
+    baselineShift(convertRawProp(context, rawProps, "baselineShift", sourceProps.baselineShift, {})),
+    lengthAdjust(convertRawProp(context, rawProps, "lengthAdjust", sourceProps.lengthAdjust, {})),
+    alignmentBaseline(convertRawProp(context, rawProps, "alignmentBaseline", sourceProps.alignmentBaseline, {})),
+    verticalAlign(convertRawProp(context, rawProps, "verticalAlign", sourceProps.verticalAlign, {})),
+    content(convertRawProp(context, rawProps, "content", sourceProps.content, {}))
+      {}
+RNSVGUseProps::RNSVGUseProps(
+    const PropsParserContext &context,
+    const RNSVGUseProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    href(convertRawProp(context, rawProps, "href", sourceProps.href, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {}))
+      {}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/Props.h b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/Props.h
new file mode 100644
index 0000000..8882122
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/Props.h
@@ -0,0 +1,1248 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewProps.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+#include <react/renderer/graphics/Color.h>
+#include <react/renderer/imagemanager/primitives.h>
+#include <vector>
+
+namespace facebook::react {
+
+struct RNSVGSvgViewAndroidNativeBackgroundAndroidStruct {
+  std::string type{};
+  Float color{0.0};
+  bool borderless{false};
+  Float rippleRadius{0.0};
+};
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGSvgViewAndroidNativeBackgroundAndroidStruct &result) {
+  auto map = (std::unordered_map<std::string, RawValue>)value;
+
+  auto tmp_type = map.find("type");
+  if (tmp_type != map.end()) {
+    fromRawValue(context, tmp_type->second, result.type);
+  }
+  auto tmp_color = map.find("color");
+  if (tmp_color != map.end()) {
+    fromRawValue(context, tmp_color->second, result.color);
+  }
+  auto tmp_borderless = map.find("borderless");
+  if (tmp_borderless != map.end()) {
+    fromRawValue(context, tmp_borderless->second, result.borderless);
+  }
+  auto tmp_rippleRadius = map.find("rippleRadius");
+  if (tmp_rippleRadius != map.end()) {
+    fromRawValue(context, tmp_rippleRadius->second, result.rippleRadius);
+  }
+}
+
+static inline std::string toString(const RNSVGSvgViewAndroidNativeBackgroundAndroidStruct &value) {
+  return "[Object RNSVGSvgViewAndroidNativeBackgroundAndroidStruct]";
+}
+
+struct RNSVGSvgViewAndroidNativeForegroundAndroidStruct {
+  std::string type{};
+  Float color{0.0};
+  bool borderless{false};
+  Float rippleRadius{0.0};
+};
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGSvgViewAndroidNativeForegroundAndroidStruct &result) {
+  auto map = (std::unordered_map<std::string, RawValue>)value;
+
+  auto tmp_type = map.find("type");
+  if (tmp_type != map.end()) {
+    fromRawValue(context, tmp_type->second, result.type);
+  }
+  auto tmp_color = map.find("color");
+  if (tmp_color != map.end()) {
+    fromRawValue(context, tmp_color->second, result.color);
+  }
+  auto tmp_borderless = map.find("borderless");
+  if (tmp_borderless != map.end()) {
+    fromRawValue(context, tmp_borderless->second, result.borderless);
+  }
+  auto tmp_rippleRadius = map.find("rippleRadius");
+  if (tmp_rippleRadius != map.end()) {
+    fromRawValue(context, tmp_rippleRadius->second, result.rippleRadius);
+  }
+}
+
+static inline std::string toString(const RNSVGSvgViewAndroidNativeForegroundAndroidStruct &value) {
+  return "[Object RNSVGSvgViewAndroidNativeForegroundAndroidStruct]";
+}
+class RNSVGSvgViewAndroidProps final : public ViewProps {
+ public:
+  RNSVGSvgViewAndroidProps() = default;
+  RNSVGSvgViewAndroidProps(const PropsParserContext& context, const RNSVGSvgViewAndroidProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic bbWidth{};
+  folly::dynamic bbHeight{};
+  Float minX{0.0};
+  Float minY{0.0};
+  Float vbWidth{0.0};
+  Float vbHeight{0.0};
+  std::string align{};
+  int meetOrSlice{0};
+  SharedColor color{};
+  std::string pointerEvents{};
+  bool hasTVPreferredFocus{false};
+  SharedColor borderBottomColor{};
+  int nextFocusDown{0};
+  SharedColor borderRightColor{};
+  int nextFocusRight{0};
+  SharedColor borderLeftColor{};
+  SharedColor borderColor{};
+  bool removeClippedSubviews{false};
+  int nextFocusForward{0};
+  int nextFocusUp{0};
+  bool accessible{false};
+  SharedColor borderStartColor{};
+  SharedColor borderEndColor{};
+  bool focusable{false};
+  RNSVGSvgViewAndroidNativeBackgroundAndroidStruct nativeBackgroundAndroid{};
+  RNSVGSvgViewAndroidNativeForegroundAndroidStruct nativeForegroundAndroid{};
+  std::string backfaceVisibility{};
+  std::string borderStyle{};
+  bool needsOffscreenAlphaCompositing{false};
+  folly::dynamic hitSlop{};
+  SharedColor borderTopColor{};
+  int nextFocusLeft{0};
+  SharedColor borderBlockColor{};
+  SharedColor borderBlockEndColor{};
+  SharedColor borderBlockStartColor{};
+  folly::dynamic borderRadius{};
+  folly::dynamic borderTopLeftRadius{};
+  folly::dynamic borderTopRightRadius{};
+  folly::dynamic borderBottomRightRadius{};
+  folly::dynamic borderBottomLeftRadius{};
+  folly::dynamic borderTopStartRadius{};
+  folly::dynamic borderTopEndRadius{};
+  folly::dynamic borderBottomStartRadius{};
+  folly::dynamic borderBottomEndRadius{};
+  folly::dynamic borderEndEndRadius{};
+  folly::dynamic borderEndStartRadius{};
+  folly::dynamic borderStartEndRadius{};
+  folly::dynamic borderStartStartRadius{};
+};
+
+class RNSVGCircleProps final : public ViewProps {
+ public:
+  RNSVGCircleProps() = default;
+  RNSVGCircleProps(const PropsParserContext& context, const RNSVGCircleProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic cx{};
+  folly::dynamic cy{};
+  folly::dynamic r{};
+};
+
+class RNSVGClipPathProps final : public ViewProps {
+ public:
+  RNSVGClipPathProps() = default;
+  RNSVGClipPathProps(const PropsParserContext& context, const RNSVGClipPathProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+};
+
+class RNSVGDefsProps final : public ViewProps {
+ public:
+  RNSVGDefsProps() = default;
+  RNSVGDefsProps(const PropsParserContext& context, const RNSVGDefsProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+};
+
+class RNSVGEllipseProps final : public ViewProps {
+ public:
+  RNSVGEllipseProps() = default;
+  RNSVGEllipseProps(const PropsParserContext& context, const RNSVGEllipseProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic cx{};
+  folly::dynamic cy{};
+  folly::dynamic rx{};
+  folly::dynamic ry{};
+};
+
+enum class RNSVGFeBlendMode { Unknown, Normal, Multiply, Screen, Darken, Lighten };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGFeBlendMode &result) {
+  auto string = (std::string)value;
+  if (string == "unknown") { result = RNSVGFeBlendMode::Unknown; return; }
+  if (string == "normal") { result = RNSVGFeBlendMode::Normal; return; }
+  if (string == "multiply") { result = RNSVGFeBlendMode::Multiply; return; }
+  if (string == "screen") { result = RNSVGFeBlendMode::Screen; return; }
+  if (string == "darken") { result = RNSVGFeBlendMode::Darken; return; }
+  if (string == "lighten") { result = RNSVGFeBlendMode::Lighten; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSVGFeBlendMode &value) {
+  switch (value) {
+    case RNSVGFeBlendMode::Unknown: return "unknown";
+    case RNSVGFeBlendMode::Normal: return "normal";
+    case RNSVGFeBlendMode::Multiply: return "multiply";
+    case RNSVGFeBlendMode::Screen: return "screen";
+    case RNSVGFeBlendMode::Darken: return "darken";
+    case RNSVGFeBlendMode::Lighten: return "lighten";
+  }
+}
+
+class RNSVGFeBlendProps final : public ViewProps {
+ public:
+  RNSVGFeBlendProps() = default;
+  RNSVGFeBlendProps(const PropsParserContext& context, const RNSVGFeBlendProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  std::string in1{};
+  std::string in2{};
+  RNSVGFeBlendMode mode{RNSVGFeBlendMode::Normal};
+};
+
+enum class RNSVGFeColorMatrixType { Matrix, Saturate, HueRotate, LuminanceToAlpha };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGFeColorMatrixType &result) {
+  auto string = (std::string)value;
+  if (string == "matrix") { result = RNSVGFeColorMatrixType::Matrix; return; }
+  if (string == "saturate") { result = RNSVGFeColorMatrixType::Saturate; return; }
+  if (string == "hueRotate") { result = RNSVGFeColorMatrixType::HueRotate; return; }
+  if (string == "luminanceToAlpha") { result = RNSVGFeColorMatrixType::LuminanceToAlpha; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSVGFeColorMatrixType &value) {
+  switch (value) {
+    case RNSVGFeColorMatrixType::Matrix: return "matrix";
+    case RNSVGFeColorMatrixType::Saturate: return "saturate";
+    case RNSVGFeColorMatrixType::HueRotate: return "hueRotate";
+    case RNSVGFeColorMatrixType::LuminanceToAlpha: return "luminanceToAlpha";
+  }
+}
+
+class RNSVGFeColorMatrixProps final : public ViewProps {
+ public:
+  RNSVGFeColorMatrixProps() = default;
+  RNSVGFeColorMatrixProps(const PropsParserContext& context, const RNSVGFeColorMatrixProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  std::string in1{};
+  RNSVGFeColorMatrixType type{RNSVGFeColorMatrixType::Matrix};
+  std::vector<Float> values{};
+};
+
+enum class RNSVGFeCompositeOperator1 { Over, In, Out, Atop, Xor, Arithmetic };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGFeCompositeOperator1 &result) {
+  auto string = (std::string)value;
+  if (string == "over") { result = RNSVGFeCompositeOperator1::Over; return; }
+  if (string == "in") { result = RNSVGFeCompositeOperator1::In; return; }
+  if (string == "out") { result = RNSVGFeCompositeOperator1::Out; return; }
+  if (string == "atop") { result = RNSVGFeCompositeOperator1::Atop; return; }
+  if (string == "xor") { result = RNSVGFeCompositeOperator1::Xor; return; }
+  if (string == "arithmetic") { result = RNSVGFeCompositeOperator1::Arithmetic; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSVGFeCompositeOperator1 &value) {
+  switch (value) {
+    case RNSVGFeCompositeOperator1::Over: return "over";
+    case RNSVGFeCompositeOperator1::In: return "in";
+    case RNSVGFeCompositeOperator1::Out: return "out";
+    case RNSVGFeCompositeOperator1::Atop: return "atop";
+    case RNSVGFeCompositeOperator1::Xor: return "xor";
+    case RNSVGFeCompositeOperator1::Arithmetic: return "arithmetic";
+  }
+}
+
+class RNSVGFeCompositeProps final : public ViewProps {
+ public:
+  RNSVGFeCompositeProps() = default;
+  RNSVGFeCompositeProps(const PropsParserContext& context, const RNSVGFeCompositeProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  std::string in1{};
+  std::string in2{};
+  RNSVGFeCompositeOperator1 operator1{RNSVGFeCompositeOperator1::Over};
+  Float k1{0.0};
+  Float k2{0.0};
+  Float k3{0.0};
+  Float k4{0.0};
+};
+
+class RNSVGFeFloodProps final : public ViewProps {
+ public:
+  RNSVGFeFloodProps() = default;
+  RNSVGFeFloodProps(const PropsParserContext& context, const RNSVGFeFloodProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  folly::dynamic floodColor{};
+  Float floodOpacity{1.0};
+};
+
+enum class RNSVGFeGaussianBlurEdgeMode { Duplicate, Wrap, None };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGFeGaussianBlurEdgeMode &result) {
+  auto string = (std::string)value;
+  if (string == "duplicate") { result = RNSVGFeGaussianBlurEdgeMode::Duplicate; return; }
+  if (string == "wrap") { result = RNSVGFeGaussianBlurEdgeMode::Wrap; return; }
+  if (string == "none") { result = RNSVGFeGaussianBlurEdgeMode::None; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSVGFeGaussianBlurEdgeMode &value) {
+  switch (value) {
+    case RNSVGFeGaussianBlurEdgeMode::Duplicate: return "duplicate";
+    case RNSVGFeGaussianBlurEdgeMode::Wrap: return "wrap";
+    case RNSVGFeGaussianBlurEdgeMode::None: return "none";
+  }
+}
+
+class RNSVGFeGaussianBlurProps final : public ViewProps {
+ public:
+  RNSVGFeGaussianBlurProps() = default;
+  RNSVGFeGaussianBlurProps(const PropsParserContext& context, const RNSVGFeGaussianBlurProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  std::string in1{};
+  Float stdDeviationX{0.0};
+  Float stdDeviationY{0.0};
+  RNSVGFeGaussianBlurEdgeMode edgeMode{RNSVGFeGaussianBlurEdgeMode::None};
+};
+
+class RNSVGFeMergeProps final : public ViewProps {
+ public:
+  RNSVGFeMergeProps() = default;
+  RNSVGFeMergeProps(const PropsParserContext& context, const RNSVGFeMergeProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  std::vector<std::string> nodes{};
+};
+
+class RNSVGFeOffsetProps final : public ViewProps {
+ public:
+  RNSVGFeOffsetProps() = default;
+  RNSVGFeOffsetProps(const PropsParserContext& context, const RNSVGFeOffsetProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  std::string in1{};
+  folly::dynamic dx{};
+  folly::dynamic dy{};
+};
+
+enum class RNSVGFilterFilterUnits { UserSpaceOnUse, ObjectBoundingBox };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGFilterFilterUnits &result) {
+  auto string = (std::string)value;
+  if (string == "userSpaceOnUse") { result = RNSVGFilterFilterUnits::UserSpaceOnUse; return; }
+  if (string == "objectBoundingBox") { result = RNSVGFilterFilterUnits::ObjectBoundingBox; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSVGFilterFilterUnits &value) {
+  switch (value) {
+    case RNSVGFilterFilterUnits::UserSpaceOnUse: return "userSpaceOnUse";
+    case RNSVGFilterFilterUnits::ObjectBoundingBox: return "objectBoundingBox";
+  }
+}
+enum class RNSVGFilterPrimitiveUnits { UserSpaceOnUse, ObjectBoundingBox };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGFilterPrimitiveUnits &result) {
+  auto string = (std::string)value;
+  if (string == "userSpaceOnUse") { result = RNSVGFilterPrimitiveUnits::UserSpaceOnUse; return; }
+  if (string == "objectBoundingBox") { result = RNSVGFilterPrimitiveUnits::ObjectBoundingBox; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSVGFilterPrimitiveUnits &value) {
+  switch (value) {
+    case RNSVGFilterPrimitiveUnits::UserSpaceOnUse: return "userSpaceOnUse";
+    case RNSVGFilterPrimitiveUnits::ObjectBoundingBox: return "objectBoundingBox";
+  }
+}
+
+class RNSVGFilterProps final : public ViewProps {
+ public:
+  RNSVGFilterProps() = default;
+  RNSVGFilterProps(const PropsParserContext& context, const RNSVGFilterProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic height{};
+  folly::dynamic width{};
+  RNSVGFilterFilterUnits filterUnits{RNSVGFilterFilterUnits::ObjectBoundingBox};
+  RNSVGFilterPrimitiveUnits primitiveUnits{RNSVGFilterPrimitiveUnits::UserSpaceOnUse};
+};
+
+class RNSVGForeignObjectProps final : public ViewProps {
+ public:
+  RNSVGForeignObjectProps() = default;
+  RNSVGForeignObjectProps(const PropsParserContext& context, const RNSVGForeignObjectProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic height{};
+  folly::dynamic width{};
+};
+
+class RNSVGGroupProps final : public ViewProps {
+ public:
+  RNSVGGroupProps() = default;
+  RNSVGGroupProps(const PropsParserContext& context, const RNSVGGroupProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+};
+
+class RNSVGImageProps final : public ViewProps {
+ public:
+  RNSVGImageProps() = default;
+  RNSVGImageProps(const PropsParserContext& context, const RNSVGImageProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  ImageSource src{};
+  std::string align{};
+  int meetOrSlice{0};
+};
+
+class RNSVGSvgViewProps final : public ViewProps {
+ public:
+  RNSVGSvgViewProps() = default;
+  RNSVGSvgViewProps(const PropsParserContext& context, const RNSVGSvgViewProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic bbWidth{};
+  folly::dynamic bbHeight{};
+  Float minX{0.0};
+  Float minY{0.0};
+  Float vbWidth{0.0};
+  Float vbHeight{0.0};
+  std::string align{};
+  int meetOrSlice{0};
+  SharedColor color{};
+  std::string pointerEvents{};
+  folly::dynamic hitSlop{};
+};
+
+class RNSVGLinearGradientProps final : public ViewProps {
+ public:
+  RNSVGLinearGradientProps() = default;
+  RNSVGLinearGradientProps(const PropsParserContext& context, const RNSVGLinearGradientProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  folly::dynamic x1{};
+  folly::dynamic y1{};
+  folly::dynamic x2{};
+  folly::dynamic y2{};
+  std::vector<Float> gradient{};
+  int gradientUnits{0};
+  std::vector<Float> gradientTransform{};
+};
+
+class RNSVGLineProps final : public ViewProps {
+ public:
+  RNSVGLineProps() = default;
+  RNSVGLineProps(const PropsParserContext& context, const RNSVGLineProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic x1{};
+  folly::dynamic y1{};
+  folly::dynamic x2{};
+  folly::dynamic y2{};
+};
+
+class RNSVGMarkerProps final : public ViewProps {
+ public:
+  RNSVGMarkerProps() = default;
+  RNSVGMarkerProps(const PropsParserContext& context, const RNSVGMarkerProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic refX{};
+  folly::dynamic refY{};
+  folly::dynamic markerHeight{};
+  folly::dynamic markerWidth{};
+  std::string markerUnits{};
+  std::string orient{};
+  Float minX{0.0};
+  Float minY{0.0};
+  Float vbWidth{0.0};
+  Float vbHeight{0.0};
+  std::string align{};
+  int meetOrSlice{0};
+};
+
+class RNSVGMaskProps final : public ViewProps {
+ public:
+  RNSVGMaskProps() = default;
+  RNSVGMaskProps(const PropsParserContext& context, const RNSVGMaskProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic height{};
+  folly::dynamic width{};
+  int maskUnits{0};
+  int maskContentUnits{0};
+  int maskType{0};
+};
+
+class RNSVGPathProps final : public ViewProps {
+ public:
+  RNSVGPathProps() = default;
+  RNSVGPathProps(const PropsParserContext& context, const RNSVGPathProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  std::string d{};
+};
+
+class RNSVGPatternProps final : public ViewProps {
+ public:
+  RNSVGPatternProps() = default;
+  RNSVGPatternProps(const PropsParserContext& context, const RNSVGPatternProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic height{};
+  folly::dynamic width{};
+  int patternUnits{0};
+  int patternContentUnits{0};
+  std::vector<Float> patternTransform{};
+  Float minX{0.0};
+  Float minY{0.0};
+  Float vbWidth{0.0};
+  Float vbHeight{0.0};
+  std::string align{};
+  int meetOrSlice{0};
+};
+
+class RNSVGRadialGradientProps final : public ViewProps {
+ public:
+  RNSVGRadialGradientProps() = default;
+  RNSVGRadialGradientProps(const PropsParserContext& context, const RNSVGRadialGradientProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  folly::dynamic fx{};
+  folly::dynamic fy{};
+  folly::dynamic cx{};
+  folly::dynamic cy{};
+  folly::dynamic rx{};
+  folly::dynamic ry{};
+  std::vector<Float> gradient{};
+  int gradientUnits{0};
+  std::vector<Float> gradientTransform{};
+};
+
+class RNSVGRectProps final : public ViewProps {
+ public:
+  RNSVGRectProps() = default;
+  RNSVGRectProps(const PropsParserContext& context, const RNSVGRectProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic height{};
+  folly::dynamic width{};
+  folly::dynamic rx{};
+  folly::dynamic ry{};
+};
+
+class RNSVGSymbolProps final : public ViewProps {
+ public:
+  RNSVGSymbolProps() = default;
+  RNSVGSymbolProps(const PropsParserContext& context, const RNSVGSymbolProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  Float minX{0.0};
+  Float minY{0.0};
+  Float vbWidth{0.0};
+  Float vbHeight{0.0};
+  std::string align{};
+  int meetOrSlice{0};
+};
+
+class RNSVGTextProps final : public ViewProps {
+ public:
+  RNSVGTextProps() = default;
+  RNSVGTextProps(const PropsParserContext& context, const RNSVGTextProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic dx{};
+  folly::dynamic dy{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic rotate{};
+  folly::dynamic inlineSize{};
+  folly::dynamic textLength{};
+  folly::dynamic baselineShift{};
+  std::string lengthAdjust{};
+  std::string alignmentBaseline{};
+  folly::dynamic verticalAlign{};
+};
+
+class RNSVGTextPathProps final : public ViewProps {
+ public:
+  RNSVGTextPathProps() = default;
+  RNSVGTextPathProps(const PropsParserContext& context, const RNSVGTextPathProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic dx{};
+  folly::dynamic dy{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic rotate{};
+  folly::dynamic inlineSize{};
+  folly::dynamic textLength{};
+  folly::dynamic baselineShift{};
+  std::string lengthAdjust{};
+  std::string alignmentBaseline{};
+  folly::dynamic verticalAlign{};
+  std::string href{};
+  std::string side{};
+  std::string method{};
+  std::string midLine{};
+  std::string spacing{};
+  folly::dynamic startOffset{};
+};
+
+class RNSVGTSpanProps final : public ViewProps {
+ public:
+  RNSVGTSpanProps() = default;
+  RNSVGTSpanProps(const PropsParserContext& context, const RNSVGTSpanProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic dx{};
+  folly::dynamic dy{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic rotate{};
+  folly::dynamic inlineSize{};
+  folly::dynamic textLength{};
+  folly::dynamic baselineShift{};
+  std::string lengthAdjust{};
+  std::string alignmentBaseline{};
+  folly::dynamic verticalAlign{};
+  std::string content{};
+};
+
+class RNSVGUseProps final : public ViewProps {
+ public:
+  RNSVGUseProps() = default;
+  RNSVGUseProps(const PropsParserContext& context, const RNSVGUseProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  std::string href{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic height{};
+  folly::dynamic width{};
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ShadowNodes.cpp b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ShadowNodes.cpp
new file mode 100644
index 0000000..d331b21
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ShadowNodes.cpp
@@ -0,0 +1,18 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeCpp.js
+ */
+
+#include <react/renderer/components/rnsvg/ShadowNodes.h>
+
+namespace facebook::react {
+
+extern const char RNSVGSvgViewAndroidComponentName[] = "RNSVGSvgViewAndroid";
+extern const char RNSVGSvgViewComponentName[] = "RNSVGSvgView";
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ShadowNodes.h b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ShadowNodes.h
new file mode 100644
index 0000000..f82c5df
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ShadowNodes.h
@@ -0,0 +1,43 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rnsvg/EventEmitters.h>
+#include <react/renderer/components/rnsvg/Props.h>
+#include <react/renderer/components/rnsvg/States.h>
+#include <react/renderer/components/view/ConcreteViewShadowNode.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+JSI_EXPORT extern const char RNSVGSvgViewAndroidComponentName[];
+
+/*
+ * `ShadowNode` for <RNSVGSvgViewAndroid> component.
+ */
+using RNSVGSvgViewAndroidShadowNode = ConcreteViewShadowNode<
+    RNSVGSvgViewAndroidComponentName,
+    RNSVGSvgViewAndroidProps,
+    RNSVGSvgViewAndroidEventEmitter,
+    RNSVGSvgViewAndroidState>;
+
+JSI_EXPORT extern const char RNSVGSvgViewComponentName[];
+
+/*
+ * `ShadowNode` for <RNSVGSvgView> component.
+ */
+using RNSVGSvgViewShadowNode = ConcreteViewShadowNode<
+    RNSVGSvgViewComponentName,
+    RNSVGSvgViewProps,
+    RNSVGSvgViewEventEmitter,
+    RNSVGSvgViewState>;
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/States.cpp b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/States.cpp
new file mode 100644
index 0000000..a36fa6f
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/States.cpp
@@ -0,0 +1,16 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateCpp.js
+ */
+#include <react/renderer/components/rnsvg/States.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/States.h b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/States.h
new file mode 100644
index 0000000..07176c1
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/States.h
@@ -0,0 +1,41 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateH.js
+ */
+#pragma once
+
+#ifdef ANDROID
+#include <folly/dynamic.h>
+#endif
+
+namespace facebook::react {
+
+class RNSVGSvgViewAndroidState {
+public:
+  RNSVGSvgViewAndroidState() = default;
+
+#ifdef ANDROID
+  RNSVGSvgViewAndroidState(RNSVGSvgViewAndroidState const &previousState, folly::dynamic data){};
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+#endif
+};
+
+class RNSVGSvgViewState {
+public:
+  RNSVGSvgViewState() = default;
+
+#ifdef ANDROID
+  RNSVGSvgViewState(RNSVGSvgViewState const &previousState, folly::dynamic data){};
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+#endif
+};
+
+} // namespace facebook::react
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/rnsvgJSI-generated.cpp b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/rnsvgJSI-generated.cpp
new file mode 100644
index 0000000..a4b461a
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/rnsvgJSI-generated.cpp
@@ -0,0 +1,94 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleCpp.js
+ */
+
+#include "rnsvgJSI.h"
+
+namespace facebook::react {
+
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_isPointInFill(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->isPointInFill(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber()),
+    count <= 1 || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_isPointInStroke(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->isPointInStroke(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber()),
+    count <= 1 || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getTotalLength(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->getTotalLength(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber())
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getPointAtLength(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->getPointAtLength(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber()),
+    count <= 1 || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getBBox(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->getBBox(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber()),
+    count <= 1 || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getCTM(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->getCTM(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber())
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getScreenCTM(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->getScreenCTM(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber())
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getRawResource(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->getRawResource(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
+  );
+}
+
+NativeSvgRenderableModuleCxxSpecJSI::NativeSvgRenderableModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
+  : TurboModule("RNSVGRenderableModule", jsInvoker) {
+  methodMap_["isPointInFill"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_isPointInFill};
+  methodMap_["isPointInStroke"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_isPointInStroke};
+  methodMap_["getTotalLength"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getTotalLength};
+  methodMap_["getPointAtLength"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getPointAtLength};
+  methodMap_["getBBox"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getBBox};
+  methodMap_["getCTM"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getCTM};
+  methodMap_["getScreenCTM"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getScreenCTM};
+  methodMap_["getRawResource"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getRawResource};
+}
+static jsi::Value __hostFunction_NativeSvgViewModuleCxxSpecJSI_toDataURL(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeSvgViewModuleCxxSpecJSI *>(&turboModule)->toDataURL(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber()),
+    count <= 1 || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt)),
+    count <= 2 || args[2].isUndefined() ? std::nullopt : std::make_optional(args[2].asObject(rt).asFunction(rt))
+  );
+  return jsi::Value::undefined();
+}
+
+NativeSvgViewModuleCxxSpecJSI::NativeSvgViewModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
+  : TurboModule("RNSVGSvgViewModule", jsInvoker) {
+  methodMap_["toDataURL"] = MethodMetadata {3, __hostFunction_NativeSvgViewModuleCxxSpecJSI_toDataURL};
+}
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/rnsvgJSI.h b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/rnsvgJSI.h
new file mode 100644
index 0000000..4a77d5d
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/react/renderer/components/rnsvg/rnsvgJSI.h
@@ -0,0 +1,373 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/TurboModule.h>
+#include <react/bridging/Bridging.h>
+
+namespace facebook::react {
+
+
+  
+#pragma mark - NativeSvgRenderableModuleMatrix
+
+template <typename P0, typename P1, typename P2, typename P3, typename P4, typename P5>
+struct NativeSvgRenderableModuleMatrix {
+  P0 a;
+  P1 b;
+  P2 c;
+  P3 d;
+  P4 e;
+  P5 f;
+  bool operator==(const NativeSvgRenderableModuleMatrix &other) const {
+    return a == other.a && b == other.b && c == other.c && d == other.d && e == other.e && f == other.f;
+  }
+};
+
+template <typename T>
+struct NativeSvgRenderableModuleMatrixBridging {
+  static T types;
+
+  static T fromJs(
+      jsi::Runtime &rt,
+      const jsi::Object &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    T result{
+      bridging::fromJs<decltype(types.a)>(rt, value.getProperty(rt, "a"), jsInvoker),
+      bridging::fromJs<decltype(types.b)>(rt, value.getProperty(rt, "b"), jsInvoker),
+      bridging::fromJs<decltype(types.c)>(rt, value.getProperty(rt, "c"), jsInvoker),
+      bridging::fromJs<decltype(types.d)>(rt, value.getProperty(rt, "d"), jsInvoker),
+      bridging::fromJs<decltype(types.e)>(rt, value.getProperty(rt, "e"), jsInvoker),
+      bridging::fromJs<decltype(types.f)>(rt, value.getProperty(rt, "f"), jsInvoker)};
+    return result;
+  }
+
+#ifdef DEBUG
+  static double aToJs(jsi::Runtime &rt, decltype(types.a) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double bToJs(jsi::Runtime &rt, decltype(types.b) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double cToJs(jsi::Runtime &rt, decltype(types.c) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double dToJs(jsi::Runtime &rt, decltype(types.d) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double eToJs(jsi::Runtime &rt, decltype(types.e) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double fToJs(jsi::Runtime &rt, decltype(types.f) value) {
+    return bridging::toJs(rt, value);
+  }
+#endif
+
+  static jsi::Object toJs(
+      jsi::Runtime &rt,
+      const T &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    auto result = facebook::jsi::Object(rt);
+    result.setProperty(rt, "a", bridging::toJs(rt, value.a, jsInvoker));
+    result.setProperty(rt, "b", bridging::toJs(rt, value.b, jsInvoker));
+    result.setProperty(rt, "c", bridging::toJs(rt, value.c, jsInvoker));
+    result.setProperty(rt, "d", bridging::toJs(rt, value.d, jsInvoker));
+    result.setProperty(rt, "e", bridging::toJs(rt, value.e, jsInvoker));
+    result.setProperty(rt, "f", bridging::toJs(rt, value.f, jsInvoker));
+    return result;
+  }
+};
+
+
+
+#pragma mark - NativeSvgRenderableModulePoint
+
+template <typename P0, typename P1>
+struct NativeSvgRenderableModulePoint {
+  P0 x;
+  P1 y;
+  bool operator==(const NativeSvgRenderableModulePoint &other) const {
+    return x == other.x && y == other.y;
+  }
+};
+
+template <typename T>
+struct NativeSvgRenderableModulePointBridging {
+  static T types;
+
+  static T fromJs(
+      jsi::Runtime &rt,
+      const jsi::Object &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    T result{
+      bridging::fromJs<decltype(types.x)>(rt, value.getProperty(rt, "x"), jsInvoker),
+      bridging::fromJs<decltype(types.y)>(rt, value.getProperty(rt, "y"), jsInvoker)};
+    return result;
+  }
+
+#ifdef DEBUG
+  static double xToJs(jsi::Runtime &rt, decltype(types.x) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double yToJs(jsi::Runtime &rt, decltype(types.y) value) {
+    return bridging::toJs(rt, value);
+  }
+#endif
+
+  static jsi::Object toJs(
+      jsi::Runtime &rt,
+      const T &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    auto result = facebook::jsi::Object(rt);
+    result.setProperty(rt, "x", bridging::toJs(rt, value.x, jsInvoker));
+    result.setProperty(rt, "y", bridging::toJs(rt, value.y, jsInvoker));
+    return result;
+  }
+};
+
+
+
+#pragma mark - NativeSvgRenderableModuleRect
+
+template <typename P0, typename P1, typename P2, typename P3>
+struct NativeSvgRenderableModuleRect {
+  P0 x;
+  P1 y;
+  P2 width;
+  P3 height;
+  bool operator==(const NativeSvgRenderableModuleRect &other) const {
+    return x == other.x && y == other.y && width == other.width && height == other.height;
+  }
+};
+
+template <typename T>
+struct NativeSvgRenderableModuleRectBridging {
+  static T types;
+
+  static T fromJs(
+      jsi::Runtime &rt,
+      const jsi::Object &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    T result{
+      bridging::fromJs<decltype(types.x)>(rt, value.getProperty(rt, "x"), jsInvoker),
+      bridging::fromJs<decltype(types.y)>(rt, value.getProperty(rt, "y"), jsInvoker),
+      bridging::fromJs<decltype(types.width)>(rt, value.getProperty(rt, "width"), jsInvoker),
+      bridging::fromJs<decltype(types.height)>(rt, value.getProperty(rt, "height"), jsInvoker)};
+    return result;
+  }
+
+#ifdef DEBUG
+  static double xToJs(jsi::Runtime &rt, decltype(types.x) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double yToJs(jsi::Runtime &rt, decltype(types.y) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double widthToJs(jsi::Runtime &rt, decltype(types.width) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double heightToJs(jsi::Runtime &rt, decltype(types.height) value) {
+    return bridging::toJs(rt, value);
+  }
+#endif
+
+  static jsi::Object toJs(
+      jsi::Runtime &rt,
+      const T &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    auto result = facebook::jsi::Object(rt);
+    result.setProperty(rt, "x", bridging::toJs(rt, value.x, jsInvoker));
+    result.setProperty(rt, "y", bridging::toJs(rt, value.y, jsInvoker));
+    result.setProperty(rt, "width", bridging::toJs(rt, value.width, jsInvoker));
+    result.setProperty(rt, "height", bridging::toJs(rt, value.height, jsInvoker));
+    return result;
+  }
+};
+
+class JSI_EXPORT NativeSvgRenderableModuleCxxSpecJSI : public TurboModule {
+protected:
+  NativeSvgRenderableModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);
+
+public:
+  virtual bool isPointInFill(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) = 0;
+  virtual bool isPointInStroke(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) = 0;
+  virtual double getTotalLength(jsi::Runtime &rt, std::optional<double> tag) = 0;
+  virtual jsi::Object getPointAtLength(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) = 0;
+  virtual jsi::Object getBBox(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) = 0;
+  virtual jsi::Object getCTM(jsi::Runtime &rt, std::optional<double> tag) = 0;
+  virtual jsi::Object getScreenCTM(jsi::Runtime &rt, std::optional<double> tag) = 0;
+  virtual jsi::Value getRawResource(jsi::Runtime &rt, jsi::String name) = 0;
+
+};
+
+template <typename T>
+class JSI_EXPORT NativeSvgRenderableModuleCxxSpec : public TurboModule {
+public:
+  jsi::Value create(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
+    return delegate_.create(rt, propName);
+  }
+
+  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& runtime) override {
+    return delegate_.getPropertyNames(runtime);
+  }
+
+  static constexpr std::string_view kModuleName = "RNSVGRenderableModule";
+
+protected:
+  NativeSvgRenderableModuleCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
+    : TurboModule(std::string{NativeSvgRenderableModuleCxxSpec::kModuleName}, jsInvoker),
+      delegate_(reinterpret_cast<T*>(this), jsInvoker) {}
+
+
+private:
+  class Delegate : public NativeSvgRenderableModuleCxxSpecJSI {
+  public:
+    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
+      NativeSvgRenderableModuleCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {
+
+    }
+
+    bool isPointInFill(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) override {
+      static_assert(
+          bridging::getParameterCount(&T::isPointInFill) == 3,
+          "Expected isPointInFill(...) to have 3 parameters");
+
+      return bridging::callFromJs<bool>(
+          rt, &T::isPointInFill, jsInvoker_, instance_, std::move(tag), std::move(options));
+    }
+    bool isPointInStroke(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) override {
+      static_assert(
+          bridging::getParameterCount(&T::isPointInStroke) == 3,
+          "Expected isPointInStroke(...) to have 3 parameters");
+
+      return bridging::callFromJs<bool>(
+          rt, &T::isPointInStroke, jsInvoker_, instance_, std::move(tag), std::move(options));
+    }
+    double getTotalLength(jsi::Runtime &rt, std::optional<double> tag) override {
+      static_assert(
+          bridging::getParameterCount(&T::getTotalLength) == 2,
+          "Expected getTotalLength(...) to have 2 parameters");
+
+      return bridging::callFromJs<double>(
+          rt, &T::getTotalLength, jsInvoker_, instance_, std::move(tag));
+    }
+    jsi::Object getPointAtLength(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) override {
+      static_assert(
+          bridging::getParameterCount(&T::getPointAtLength) == 3,
+          "Expected getPointAtLength(...) to have 3 parameters");
+
+      return bridging::callFromJs<jsi::Object>(
+          rt, &T::getPointAtLength, jsInvoker_, instance_, std::move(tag), std::move(options));
+    }
+    jsi::Object getBBox(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) override {
+      static_assert(
+          bridging::getParameterCount(&T::getBBox) == 3,
+          "Expected getBBox(...) to have 3 parameters");
+
+      return bridging::callFromJs<jsi::Object>(
+          rt, &T::getBBox, jsInvoker_, instance_, std::move(tag), std::move(options));
+    }
+    jsi::Object getCTM(jsi::Runtime &rt, std::optional<double> tag) override {
+      static_assert(
+          bridging::getParameterCount(&T::getCTM) == 2,
+          "Expected getCTM(...) to have 2 parameters");
+
+      return bridging::callFromJs<jsi::Object>(
+          rt, &T::getCTM, jsInvoker_, instance_, std::move(tag));
+    }
+    jsi::Object getScreenCTM(jsi::Runtime &rt, std::optional<double> tag) override {
+      static_assert(
+          bridging::getParameterCount(&T::getScreenCTM) == 2,
+          "Expected getScreenCTM(...) to have 2 parameters");
+
+      return bridging::callFromJs<jsi::Object>(
+          rt, &T::getScreenCTM, jsInvoker_, instance_, std::move(tag));
+    }
+    jsi::Value getRawResource(jsi::Runtime &rt, jsi::String name) override {
+      static_assert(
+          bridging::getParameterCount(&T::getRawResource) == 2,
+          "Expected getRawResource(...) to have 2 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::getRawResource, jsInvoker_, instance_, std::move(name));
+    }
+
+  private:
+    friend class NativeSvgRenderableModuleCxxSpec;
+    T *instance_;
+  };
+
+  Delegate delegate_;
+};
+
+
+  class JSI_EXPORT NativeSvgViewModuleCxxSpecJSI : public TurboModule {
+protected:
+  NativeSvgViewModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);
+
+public:
+  virtual void toDataURL(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options, std::optional<jsi::Function> callback) = 0;
+
+};
+
+template <typename T>
+class JSI_EXPORT NativeSvgViewModuleCxxSpec : public TurboModule {
+public:
+  jsi::Value create(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
+    return delegate_.create(rt, propName);
+  }
+
+  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& runtime) override {
+    return delegate_.getPropertyNames(runtime);
+  }
+
+  static constexpr std::string_view kModuleName = "RNSVGSvgViewModule";
+
+protected:
+  NativeSvgViewModuleCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
+    : TurboModule(std::string{NativeSvgViewModuleCxxSpec::kModuleName}, jsInvoker),
+      delegate_(reinterpret_cast<T*>(this), jsInvoker) {}
+
+
+private:
+  class Delegate : public NativeSvgViewModuleCxxSpecJSI {
+  public:
+    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
+      NativeSvgViewModuleCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {
+
+    }
+
+    void toDataURL(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options, std::optional<jsi::Function> callback) override {
+      static_assert(
+          bridging::getParameterCount(&T::toDataURL) == 4,
+          "Expected toDataURL(...) to have 4 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::toDataURL, jsInvoker_, instance_, std::move(tag), std::move(options), std::move(callback));
+    }
+
+  private:
+    friend class NativeSvgViewModuleCxxSpec;
+    T *instance_;
+  };
+
+  Delegate delegate_;
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/rnsvg-generated.cpp b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/rnsvg-generated.cpp
new file mode 100644
index 0000000..1b0dc88
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/rnsvg-generated.cpp
@@ -0,0 +1,86 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniCpp.js
+ */
+
+#include "rnsvg.h"
+
+namespace facebook::react {
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_isPointInFill(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, BooleanKind, "isPointInFill", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;)Z", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_isPointInStroke(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, BooleanKind, "isPointInStroke", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;)Z", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getTotalLength(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, NumberKind, "getTotalLength", "(Ljava/lang/Double;)D", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getPointAtLength(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getPointAtLength", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getBBox(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getBBox", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getCTM(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getCTM", "(Ljava/lang/Double;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getScreenCTM(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getScreenCTM", "(Ljava/lang/Double;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getRawResource(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getRawResource", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+NativeSvgRenderableModuleSpecJSI::NativeSvgRenderableModuleSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+  methodMap_["isPointInFill"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleSpecJSI_isPointInFill};
+  methodMap_["isPointInStroke"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleSpecJSI_isPointInStroke};
+  methodMap_["getTotalLength"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleSpecJSI_getTotalLength};
+  methodMap_["getPointAtLength"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleSpecJSI_getPointAtLength};
+  methodMap_["getBBox"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleSpecJSI_getBBox};
+  methodMap_["getCTM"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleSpecJSI_getCTM};
+  methodMap_["getScreenCTM"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleSpecJSI_getScreenCTM};
+  methodMap_["getRawResource"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleSpecJSI_getRawResource};
+}
+static facebook::jsi::Value __hostFunction_NativeSvgViewModuleSpecJSI_toDataURL(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "toDataURL", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
+}
+
+NativeSvgViewModuleSpecJSI::NativeSvgViewModuleSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+  methodMap_["toDataURL"] = MethodMetadata {3, __hostFunction_NativeSvgViewModuleSpecJSI_toDataURL};
+}
+
+std::shared_ptr<TurboModule> rnsvg_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
+  if (moduleName == "RNSVGRenderableModule") {
+    return std::make_shared<NativeSvgRenderableModuleSpecJSI>(params);
+  }
+  if (moduleName == "RNSVGSvgViewModule") {
+    return std::make_shared<NativeSvgViewModuleSpecJSI>(params);
+  }
+  return nullptr;
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/rnsvg.h b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/rnsvg.h
new file mode 100644
index 0000000..3b04b7a
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/jni/rnsvg.h
@@ -0,0 +1,39 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/JavaTurboModule.h>
+#include <ReactCommon/TurboModule.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+/**
+ * JNI C++ class for module 'NativeSvgRenderableModule'
+ */
+class JSI_EXPORT NativeSvgRenderableModuleSpecJSI : public JavaTurboModule {
+public:
+  NativeSvgRenderableModuleSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+/**
+ * JNI C++ class for module 'NativeSvgViewModule'
+ */
+class JSI_EXPORT NativeSvgViewModuleSpecJSI : public JavaTurboModule {
+public:
+  NativeSvgViewModuleSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+
+JSI_EXPORT
+std::shared_ptr<TurboModule> rnsvg_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params);
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/bin/build/generated/source/codegen/schema.json b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/schema.json
new file mode 100644
index 0000000..d6685ab
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/generated/source/codegen/schema.json
@@ -0,0 +1,7857 @@
+{
+  "modules": {
+    "RNSVGSvgViewAndroid": {
+      "type": "Component",
+      "components": {
+        "RNSVGSvgViewAndroid": {
+          "excludedPlatforms": [
+            "iOS"
+          ],
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "bbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "bbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "minX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "minY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "align",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "meetOrSlice",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "hasTVPreferredFocus",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "borderBottomColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "nextFocusDown",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "borderRightColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "nextFocusRight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "borderLeftColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "borderColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "removeClippedSubviews",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "nextFocusForward",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "nextFocusUp",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "accessible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "borderStartColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "borderEndColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "focusable",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "nativeBackgroundAndroid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ObjectTypeAnnotation",
+                "properties": [
+                  {
+                    "name": "type",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "StringTypeAnnotation",
+                      "default": null
+                    }
+                  },
+                  {
+                    "name": "color",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  },
+                  {
+                    "name": "borderless",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "BooleanTypeAnnotation",
+                      "default": false
+                    }
+                  },
+                  {
+                    "name": "rippleRadius",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  }
+                ]
+              }
+            },
+            {
+              "name": "nativeForegroundAndroid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ObjectTypeAnnotation",
+                "properties": [
+                  {
+                    "name": "type",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "StringTypeAnnotation",
+                      "default": null
+                    }
+                  },
+                  {
+                    "name": "color",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  },
+                  {
+                    "name": "borderless",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "BooleanTypeAnnotation",
+                      "default": false
+                    }
+                  },
+                  {
+                    "name": "rippleRadius",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  }
+                ]
+              }
+            },
+            {
+              "name": "backfaceVisibility",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "borderStyle",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "needsOffscreenAlphaCompositing",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "hitSlop",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderTopColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "nextFocusLeft",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "borderBlockColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "borderBlockEndColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "borderBlockStartColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "borderRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderTopLeftRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderTopRightRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderBottomRightRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderBottomLeftRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderTopStartRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderTopEndRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderBottomStartRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderBottomEndRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderEndEndRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderEndStartRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderStartEndRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderStartStartRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGCircle": {
+      "type": "Component",
+      "components": {
+        "RNSVGCircle": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "cx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "cy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "r",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGClipPath": {
+      "type": "Component",
+      "components": {
+        "RNSVGClipPath": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGDefs": {
+      "type": "Component",
+      "components": {
+        "RNSVGDefs": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGEllipse": {
+      "type": "Component",
+      "components": {
+        "RNSVGEllipse": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "cx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "cy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "rx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "ry",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeBlend": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeBlend": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "mode",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "normal",
+                "options": [
+                  "unknown",
+                  "normal",
+                  "multiply",
+                  "screen",
+                  "darken",
+                  "lighten"
+                ]
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeColorMatrix": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeColorMatrix": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "type",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "matrix",
+                "options": [
+                  "matrix",
+                  "saturate",
+                  "hueRotate",
+                  "luminanceToAlpha"
+                ]
+              }
+            },
+            {
+              "name": "values",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeComposite": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeComposite": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "operator1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "over",
+                "options": [
+                  "over",
+                  "in",
+                  "out",
+                  "atop",
+                  "xor",
+                  "arithmetic"
+                ]
+              }
+            },
+            {
+              "name": "k1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "k2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "k3",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "k4",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeFlood": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeFlood": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "floodColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "floodOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeGaussianBlur": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeGaussianBlur": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "stdDeviationX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "stdDeviationY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "edgeMode",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "none",
+                "options": [
+                  "duplicate",
+                  "wrap",
+                  "none"
+                ]
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeMerge": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeMerge": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "nodes",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeOffset": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeOffset": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "dx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFilter": {
+      "type": "Component",
+      "components": {
+        "RNSVGFilter": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "filterUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "objectBoundingBox",
+                "options": [
+                  "userSpaceOnUse",
+                  "objectBoundingBox"
+                ]
+              }
+            },
+            {
+              "name": "primitiveUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "userSpaceOnUse",
+                "options": [
+                  "userSpaceOnUse",
+                  "objectBoundingBox"
+                ]
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGForeignObject": {
+      "type": "Component",
+      "components": {
+        "RNSVGForeignObject": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGGroup": {
+      "type": "Component",
+      "components": {
+        "RNSVGGroup": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGImage": {
+      "type": "Component",
+      "components": {
+        "RNSVGImage": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onLoad",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "source",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "FloatTypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "FloatTypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "uri",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "StringTypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            },
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "src",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ImageSourcePrimitive"
+              }
+            },
+            {
+              "name": "align",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "meetOrSlice",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGSvgView": {
+      "type": "Component",
+      "components": {
+        "RNSVGSvgView": {
+          "excludedPlatforms": [
+            "android"
+          ],
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "bbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "bbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "minX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "minY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "align",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "meetOrSlice",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "hitSlop",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGLinearGradient": {
+      "type": "Component",
+      "components": {
+        "RNSVGLinearGradient": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "x1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "gradient",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "gradientUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "gradientTransform",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGLine": {
+      "type": "Component",
+      "components": {
+        "RNSVGLine": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "x1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGMarker": {
+      "type": "Component",
+      "components": {
+        "RNSVGMarker": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "refX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "refY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "markerHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "markerWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "markerUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "orient",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "minX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "minY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "align",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "meetOrSlice",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGMask": {
+      "type": "Component",
+      "components": {
+        "RNSVGMask": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "maskUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "maskContentUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "maskType",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "NativeSvgRenderableModule": {
+      "type": "NativeModule",
+      "aliasMap": {
+        "Matrix": {
+          "type": "ObjectTypeAnnotation",
+          "properties": [
+            {
+              "name": "a",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "b",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "c",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "d",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "e",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "f",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            }
+          ]
+        },
+        "Point": {
+          "type": "ObjectTypeAnnotation",
+          "properties": [
+            {
+              "name": "x",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            }
+          ]
+        },
+        "Rect": {
+          "type": "ObjectTypeAnnotation",
+          "properties": [
+            {
+              "name": "x",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            }
+          ]
+        }
+      },
+      "enumMap": {},
+      "spec": {
+        "eventEmitters": [],
+        "methods": [
+          {
+            "name": "isPointInFill",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "BooleanTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "options",
+                  "optional": true,
+                  "typeAnnotation": {
+                    "type": "GenericObjectTypeAnnotation"
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "isPointInStroke",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "BooleanTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "options",
+                  "optional": true,
+                  "typeAnnotation": {
+                    "type": "GenericObjectTypeAnnotation"
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getTotalLength",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getPointAtLength",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "TypeAliasTypeAnnotation",
+                "name": "Point"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "options",
+                  "optional": true,
+                  "typeAnnotation": {
+                    "type": "GenericObjectTypeAnnotation"
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getBBox",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "TypeAliasTypeAnnotation",
+                "name": "Rect"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "options",
+                  "optional": true,
+                  "typeAnnotation": {
+                    "type": "GenericObjectTypeAnnotation"
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getCTM",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "TypeAliasTypeAnnotation",
+                "name": "Matrix"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getScreenCTM",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "TypeAliasTypeAnnotation",
+                "name": "Matrix"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getRawResource",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "PromiseTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              },
+              "params": [
+                {
+                  "name": "name",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "StringTypeAnnotation"
+                  }
+                }
+              ]
+            }
+          }
+        ]
+      },
+      "moduleName": "RNSVGRenderableModule"
+    },
+    "NativeSvgViewModule": {
+      "type": "NativeModule",
+      "aliasMap": {},
+      "enumMap": {},
+      "spec": {
+        "eventEmitters": [],
+        "methods": [
+          {
+            "name": "toDataURL",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "VoidTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "options",
+                  "optional": true,
+                  "typeAnnotation": {
+                    "type": "GenericObjectTypeAnnotation"
+                  }
+                },
+                {
+                  "name": "callback",
+                  "optional": true,
+                  "typeAnnotation": {
+                    "type": "FunctionTypeAnnotation",
+                    "returnTypeAnnotation": {
+                      "type": "VoidTypeAnnotation"
+                    },
+                    "params": [
+                      {
+                        "name": "base64",
+                        "optional": false,
+                        "typeAnnotation": {
+                          "type": "StringTypeAnnotation"
+                        }
+                      }
+                    ]
+                  }
+                }
+              ]
+            }
+          }
+        ]
+      },
+      "moduleName": "RNSVGSvgViewModule"
+    },
+    "RNSVGPath": {
+      "type": "Component",
+      "components": {
+        "RNSVGPath": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "d",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGPattern": {
+      "type": "Component",
+      "components": {
+        "RNSVGPattern": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "patternUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "patternContentUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "patternTransform",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "minX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "minY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "align",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "meetOrSlice",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGRadialGradient": {
+      "type": "Component",
+      "components": {
+        "RNSVGRadialGradient": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "cx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "cy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "rx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "ry",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "gradient",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "gradientUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "gradientTransform",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGRect": {
+      "type": "Component",
+      "components": {
+        "RNSVGRect": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "rx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "ry",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGSymbol": {
+      "type": "Component",
+      "components": {
+        "RNSVGSymbol": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "minX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "minY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "align",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "meetOrSlice",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGText": {
+      "type": "Component",
+      "components": {
+        "RNSVGText": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "rotate",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "inlineSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "textLength",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "baselineShift",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "lengthAdjust",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "alignmentBaseline",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "verticalAlign",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGTextPath": {
+      "type": "Component",
+      "components": {
+        "RNSVGTextPath": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "rotate",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "inlineSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "textLength",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "baselineShift",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "lengthAdjust",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "alignmentBaseline",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "verticalAlign",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "href",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "side",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "method",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "midLine",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "spacing",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "startOffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGTSpan": {
+      "type": "Component",
+      "components": {
+        "RNSVGTSpan": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "rotate",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "inlineSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "textLength",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "baselineShift",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "lengthAdjust",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "alignmentBaseline",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "verticalAlign",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "content",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGUse": {
+      "type": "Component",
+      "components": {
+        "RNSVGUse": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "href",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/bin/build/intermediates/aar_metadata/release/writeReleaseAarMetadata/aar-metadata.properties b/node_modules/react-native-svg/android/bin/build/intermediates/aar_metadata/release/writeReleaseAarMetadata/aar-metadata.properties
new file mode 100644
index 0000000..1211b1e
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/build/intermediates/aar_metadata/release/writeReleaseAarMetadata/aar-metadata.properties
@@ -0,0 +1,6 @@
+aarFormatVersion=1.0
+aarMetadataVersion=1.0
+minCompileSdk=1
+minCompileSdkExtension=0
+minAndroidGradlePluginVersion=1.0.0
+coreLibraryDesugaringEnabled=false
diff --git a/node_modules/react-native-svg/android/bin/gradle/wrapper/gradle-wrapper.jar b/node_modules/react-native-svg/android/bin/gradle/wrapper/gradle-wrapper.jar
new file mode 100644
index 0000000..249e583
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/node_modules/react-native-svg/android/bin/gradle/wrapper/gradle-wrapper.properties b/node_modules/react-native-svg/android/bin/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
index 0000000..ae04661
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/gradle/wrapper/gradle-wrapper.properties
@@ -0,0 +1,5 @@
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-7.5.1-bin.zip
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
diff --git a/node_modules/react-native-svg/android/bin/gradlew b/node_modules/react-native-svg/android/bin/gradlew
new file mode 100755
index 0000000..a69d9cb
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/gradlew
@@ -0,0 +1,240 @@
+#!/bin/sh
+
+#
+# Copyright © 2015-2021 the original authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+##############################################################################
+#
+#   Gradle start up script for POSIX generated by Gradle.
+#
+#   Important for running:
+#
+#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
+#       noncompliant, but you have some other compliant shell such as ksh or
+#       bash, then to run this script, type that shell name before the whole
+#       command line, like:
+#
+#           ksh Gradle
+#
+#       Busybox and similar reduced shells will NOT work, because this script
+#       requires all of these POSIX shell features:
+#         * functions;
+#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
+#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
+#         * compound commands having a testable exit status, especially «case»;
+#         * various built-in commands including «command», «set», and «ulimit».
+#
+#   Important for patching:
+#
+#   (2) This script targets any POSIX shell, so it avoids extensions provided
+#       by Bash, Ksh, etc; in particular arrays are avoided.
+#
+#       The "traditional" practice of packing multiple parameters into a
+#       space-separated string is a well documented source of bugs and security
+#       problems, so this is (mostly) avoided, by progressively accumulating
+#       options in "$@", and eventually passing that to Java.
+#
+#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
+#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;
+#       see the in-line comments for details.
+#
+#       There are tweaks for specific operating systems such as AIX, CygWin,
+#       Darwin, MinGW, and NonStop.
+#
+#   (3) This script is generated from the Groovy template
+#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
+#       within the Gradle project.
+#
+#       You can find Gradle at https://github.com/gradle/gradle/.
+#
+##############################################################################
+
+# Attempt to set APP_HOME
+
+# Resolve links: $0 may be a link
+app_path=$0
+
+# Need this for daisy-chained symlinks.
+while
+    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
+    [ -h "$app_path" ]
+do
+    ls=$( ls -ld "$app_path" )
+    link=${ls#*' -> '}
+    case $link in             #(
+      /*)   app_path=$link ;; #(
+      *)    app_path=$APP_HOME$link ;;
+    esac
+done
+
+APP_HOME=$( cd "${APP_HOME:-./}" && pwd -P ) || exit
+
+APP_NAME="Gradle"
+APP_BASE_NAME=${0##*/}
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD=maximum
+
+warn () {
+    echo "$*"
+} >&2
+
+die () {
+    echo
+    echo "$*"
+    echo
+    exit 1
+} >&2
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+nonstop=false
+case "$( uname )" in                #(
+  CYGWIN* )         cygwin=true  ;; #(
+  Darwin* )         darwin=true  ;; #(
+  MSYS* | MINGW* )  msys=true    ;; #(
+  NONSTOP* )        nonstop=true ;;
+esac
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD=$JAVA_HOME/jre/sh/java
+    else
+        JAVACMD=$JAVA_HOME/bin/java
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD=java
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
+    case $MAX_FD in #(
+      max*)
+        MAX_FD=$( ulimit -H -n ) ||
+            warn "Could not query maximum file descriptor limit"
+    esac
+    case $MAX_FD in  #(
+      '' | soft) :;; #(
+      *)
+        ulimit -n "$MAX_FD" ||
+            warn "Could not set maximum file descriptor limit to $MAX_FD"
+    esac
+fi
+
+# Collect all arguments for the java command, stacking in reverse order:
+#   * args from the command line
+#   * the main class name
+#   * -classpath
+#   * -D...appname settings
+#   * --module-path (only if needed)
+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.
+
+# For Cygwin or MSYS, switch paths to Windows format before running java
+if "$cygwin" || "$msys" ; then
+    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
+    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )
+
+    JAVACMD=$( cygpath --unix "$JAVACMD" )
+
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    for arg do
+        if
+            case $arg in                                #(
+              -*)   false ;;                            # don't mess with options #(
+              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
+                    [ -e "$t" ] ;;                      #(
+              *)    false ;;
+            esac
+        then
+            arg=$( cygpath --path --ignore --mixed "$arg" )
+        fi
+        # Roll the args list around exactly as many times as the number of
+        # args, so each arg winds up back in the position where it started, but
+        # possibly modified.
+        #
+        # NB: a `for` loop captures its iteration list before it begins, so
+        # changing the positional parameters here affects neither the number of
+        # iterations, nor the values presented in `arg`.
+        shift                   # remove old arg
+        set -- "$@" "$arg"      # push replacement arg
+    done
+fi
+
+# Collect all arguments for the java command;
+#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of
+#     shell script including quotes and variable substitutions, so put them in
+#     double quotes to make sure that they get re-expanded; and
+#   * put everything else in single quotes, so that it's not re-expanded.
+
+set -- \
+        "-Dorg.gradle.appname=$APP_BASE_NAME" \
+        -classpath "$CLASSPATH" \
+        org.gradle.wrapper.GradleWrapperMain \
+        "$@"
+
+# Stop when "xargs" is not available.
+if ! command -v xargs >/dev/null 2>&1
+then
+    die "xargs is not available"
+fi
+
+# Use "xargs" to parse quoted args.
+#
+# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
+#
+# In Bash we could simply go:
+#
+#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
+#   set -- "${ARGS[@]}" "$@"
+#
+# but POSIX shell has neither arrays nor command substitution, so instead we
+# post-process each arg (as a line of input to sed) to backslash-escape any
+# character that might be a shell metacharacter, then use eval to reverse
+# that process (while maintaining the separation between arguments), and wrap
+# the whole thing up as a single "set" statement.
+#
+# This will of course break if any of these variables contains a newline or
+# an unmatched quote.
+#
+
+eval "set -- $(
+        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS" |
+        xargs -n1 |
+        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
+        tr '\n' ' '
+    )" '"$@"'
+
+exec "$JAVACMD" "$@"
diff --git a/node_modules/react-native-svg/android/bin/gradlew.bat b/node_modules/react-native-svg/android/bin/gradlew.bat
new file mode 100644
index 0000000..f127cfd
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/gradlew.bat
@@ -0,0 +1,91 @@
+@rem
+@rem Copyright 2015 the original author or authors.
+@rem
+@rem Licensed under the Apache License, Version 2.0 (the "License");
+@rem you may not use this file except in compliance with the License.
+@rem You may obtain a copy of the License at
+@rem
+@rem      https://www.apache.org/licenses/LICENSE-2.0
+@rem
+@rem Unless required by applicable law or agreed to in writing, software
+@rem distributed under the License is distributed on an "AS IS" BASIS,
+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+@rem See the License for the specific language governing permissions and
+@rem limitations under the License.
+@rem
+
+@if "%DEBUG%"=="" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+set DIRNAME=%~dp0
+if "%DIRNAME%"=="" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Resolve any "." and ".." in APP_HOME to make it shorter.
+for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if %ERRORLEVEL% equ 0 goto execute
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto execute
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %*
+
+:end
+@rem End local scope for the variables with windows NT shell
+if %ERRORLEVEL% equ 0 goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+set EXIT_CODE=%ERRORLEVEL%
+if %EXIT_CODE% equ 0 set EXIT_CODE=1
+if not ""=="%GRADLE_EXIT_CONSOLE%" exit %EXIT_CODE%
+exit /b %EXIT_CODE%
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/node_modules/react-native-svg/android/bin/local.properties b/node_modules/react-native-svg/android/bin/local.properties
new file mode 100644
index 0000000..2edd25d
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/local.properties
@@ -0,0 +1,8 @@
+## This file must *NOT* be checked into Version Control Systems,
+# as it contains information specific to your local configuration.
+#
+# Location of the SDK. This is only used by Gradle.
+# For customization when using a Version Control System, please read the
+# header note.
+#Tue Oct 18 10:28:21 CEST 2022
+sdk.dir=/Users/wojciechlewicki/Library/Android/sdk
diff --git a/node_modules/react-native-svg/android/bin/proguard-rules.pro b/node_modules/react-native-svg/android/bin/proguard-rules.pro
new file mode 100644
index 0000000..19f9dde
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/proguard-rules.pro
@@ -0,0 +1 @@
+-keep public class com.horcrux.svg.** {*;}
diff --git a/node_modules/react-native-svg/android/bin/spotless.gradle b/node_modules/react-native-svg/android/bin/spotless.gradle
new file mode 100644
index 0000000..6ac6843
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/spotless.gradle
@@ -0,0 +1,9 @@
+// formatter & linter configuration for java
+apply plugin: 'com.diffplug.spotless'
+
+spotless {
+  java {
+    target 'src/main/java/**/*.java'
+    googleJavaFormat()
+  }
+}
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/bin/src/main/AndroidManifest.xml b/node_modules/react-native-svg/android/bin/src/main/AndroidManifest.xml
new file mode 100644
index 0000000..c4e6c98
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/src/main/AndroidManifest.xml
@@ -0,0 +1 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"/>
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/Brush$BrushType.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/Brush$BrushType.class
new file mode 100644
index 0000000..89f02a7
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/Brush$BrushType.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/Brush$BrushUnits.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/Brush$BrushUnits.class
new file mode 100644
index 0000000..adc558b
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/Brush$BrushUnits.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/Brush.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/Brush.class
new file mode 100644
index 0000000..e9e3e74
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/Brush.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/CircleView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/CircleView.class
new file mode 100644
index 0000000..f592d29
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/CircleView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ClipPathView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ClipPathView.class
new file mode 100644
index 0000000..d2f5568
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ClipPathView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/CustomFilter.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/CustomFilter.class
new file mode 100644
index 0000000..64138a4
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/CustomFilter.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/CustomFilterFunction.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/CustomFilterFunction.class
new file mode 100644
index 0000000..515e110
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/CustomFilterFunction.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/DefinitionView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/DefinitionView.class
new file mode 100644
index 0000000..f32f125
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/DefinitionView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/DefsView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/DefsView.class
new file mode 100644
index 0000000..f3c9357
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/DefsView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ElementType.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ElementType.class
new file mode 100644
index 0000000..3e8c597
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ElementType.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/EllipseView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/EllipseView.class
new file mode 100644
index 0000000..4031699
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/EllipseView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeBlendView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeBlendView.class
new file mode 100644
index 0000000..8af4859
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeBlendView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeColorMatrixView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeColorMatrixView.class
new file mode 100644
index 0000000..cb7958f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeColorMatrixView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeCompositeView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeCompositeView.class
new file mode 100644
index 0000000..27b83b6
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeCompositeView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeFloodView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeFloodView.class
new file mode 100644
index 0000000..d3b101a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeFloodView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeGaussianBlurView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeGaussianBlurView.class
new file mode 100644
index 0000000..7bf63d6
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeGaussianBlurView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeMergeView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeMergeView.class
new file mode 100644
index 0000000..8624ece
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeMergeView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeOffsetView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeOffsetView.class
new file mode 100644
index 0000000..1a99f2f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FeOffsetView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterPrimitiveView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterPrimitiveView.class
new file mode 100644
index 0000000..664455f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterPrimitiveView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$EdgeMode.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$EdgeMode.class
new file mode 100644
index 0000000..547bba4
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$EdgeMode.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$FeBlendMode.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$FeBlendMode.class
new file mode 100644
index 0000000..ba4fe4d
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$FeBlendMode.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$FeColorMatrixType.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$FeColorMatrixType.class
new file mode 100644
index 0000000..b294e6c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$FeColorMatrixType.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$FeCompositeOperator.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$FeCompositeOperator.class
new file mode 100644
index 0000000..36d623c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$FeCompositeOperator.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$Units.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$Units.class
new file mode 100644
index 0000000..f628976
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties$Units.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties.class
new file mode 100644
index 0000000..0df5f4a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterProperties.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterRegion.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterRegion.class
new file mode 100644
index 0000000..b43d8e5
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterRegion.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterUtils.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterUtils.class
new file mode 100644
index 0000000..76c6b08
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterUtils.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterView.class
new file mode 100644
index 0000000..15d8ff4
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FilterView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FontData$AbsoluteFontWeight.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FontData$AbsoluteFontWeight.class
new file mode 100644
index 0000000..779617d
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FontData$AbsoluteFontWeight.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FontData.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FontData.class
new file mode 100644
index 0000000..54e5e4e
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/FontData.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ForeignObjectView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ForeignObjectView.class
new file mode 100644
index 0000000..21ec32b
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ForeignObjectView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/GlyphContext.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/GlyphContext.class
new file mode 100644
index 0000000..cf0660f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/GlyphContext.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/GlyphPathBag.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/GlyphPathBag.class
new file mode 100644
index 0000000..75db12c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/GlyphPathBag.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/GroupView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/GroupView.class
new file mode 100644
index 0000000..830579f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/GroupView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ImageView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ImageView.class
new file mode 100644
index 0000000..6fb96e2
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ImageView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/LineView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/LineView.class
new file mode 100644
index 0000000..bdad9ed
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/LineView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/LinearGradientView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/LinearGradientView.class
new file mode 100644
index 0000000..40f39eb
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/LinearGradientView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/MarkerView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/MarkerView.class
new file mode 100644
index 0000000..2aff200
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/MarkerView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/MaskView$MaskType.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/MaskView$MaskType.class
new file mode 100644
index 0000000..6135009
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/MaskView$MaskType.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/MaskView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/MaskView.class
new file mode 100644
index 0000000..717a748
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/MaskView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PathElement.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PathElement.class
new file mode 100644
index 0000000..c699e51
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PathElement.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PathParser.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PathParser.class
new file mode 100644
index 0000000..729de74
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PathParser.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PathView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PathView.class
new file mode 100644
index 0000000..63c997a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PathView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PatternView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PatternView.class
new file mode 100644
index 0000000..8894bac
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PatternView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/Point.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/Point.class
new file mode 100644
index 0000000..4ffb069
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/Point.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PropHelper.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PropHelper.class
new file mode 100644
index 0000000..aaa2cce
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/PropHelper.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RNSVGMarkerPosition.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RNSVGMarkerPosition.class
new file mode 100644
index 0000000..d1df735
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RNSVGMarkerPosition.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RNSVGMarkerType.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RNSVGMarkerType.class
new file mode 100644
index 0000000..08eb600
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RNSVGMarkerType.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RNSVGRenderableManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RNSVGRenderableManager.class
new file mode 100644
index 0000000..82ee238
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RNSVGRenderableManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RadialGradientView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RadialGradientView.class
new file mode 100644
index 0000000..e928e8f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RadialGradientView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RectView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RectView.class
new file mode 100644
index 0000000..7631118
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RectView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableView.class
new file mode 100644
index 0000000..69bfa96
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$CircleViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$CircleViewManager.class
new file mode 100644
index 0000000..ca814b2
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$CircleViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$ClipPathViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$ClipPathViewManager.class
new file mode 100644
index 0000000..f364113
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$ClipPathViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$DefsViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$DefsViewManager.class
new file mode 100644
index 0000000..fa681e5
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$DefsViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$EllipseViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$EllipseViewManager.class
new file mode 100644
index 0000000..4b758b5
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$EllipseViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeBlendManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeBlendManager.class
new file mode 100644
index 0000000..4ba8de1
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeBlendManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeColorMatrixManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeColorMatrixManager.class
new file mode 100644
index 0000000..72290fd
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeColorMatrixManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeCompositeManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeCompositeManager.class
new file mode 100644
index 0000000..3666b4b
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeCompositeManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeFloodManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeFloodManager.class
new file mode 100644
index 0000000..4af4ed9
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeFloodManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeGaussianBlurManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeGaussianBlurManager.class
new file mode 100644
index 0000000..917d586
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeGaussianBlurManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeMergeManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeMergeManager.class
new file mode 100644
index 0000000..5fd97f1
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeMergeManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeOffsetManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeOffsetManager.class
new file mode 100644
index 0000000..c0c1cdb
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FeOffsetManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FilterManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FilterManager.class
new file mode 100644
index 0000000..2ebc1e6
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FilterManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FilterPrimitiveManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FilterPrimitiveManager.class
new file mode 100644
index 0000000..d0decce
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$FilterPrimitiveManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$ForeignObjectManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$ForeignObjectManager.class
new file mode 100644
index 0000000..50e6984
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$ForeignObjectManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$GroupViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$GroupViewManager.class
new file mode 100644
index 0000000..2468d2a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$GroupViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$GroupViewManagerAbstract.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$GroupViewManagerAbstract.class
new file mode 100644
index 0000000..cc65d63
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$GroupViewManagerAbstract.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$ImageViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$ImageViewManager.class
new file mode 100644
index 0000000..027d955
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$ImageViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$LineViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$LineViewManager.class
new file mode 100644
index 0000000..71ebc90
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$LineViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$LinearGradientManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$LinearGradientManager.class
new file mode 100644
index 0000000..2842e75
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$LinearGradientManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$MarkerManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$MarkerManager.class
new file mode 100644
index 0000000..e97777a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$MarkerManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$MaskManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$MaskManager.class
new file mode 100644
index 0000000..44c0b1b
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$MaskManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$PathViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$PathViewManager.class
new file mode 100644
index 0000000..4e255e2
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$PathViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$PatternManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$PatternManager.class
new file mode 100644
index 0000000..f59729d
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$PatternManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$RadialGradientManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$RadialGradientManager.class
new file mode 100644
index 0000000..432ae43
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$RadialGradientManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$RectViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$RectViewManager.class
new file mode 100644
index 0000000..4c81d74
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$RectViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$SymbolManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$SymbolManager.class
new file mode 100644
index 0000000..062f743
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$SymbolManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$TSpanViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$TSpanViewManager.class
new file mode 100644
index 0000000..c7cf88f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$TSpanViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$TextPathViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$TextPathViewManager.class
new file mode 100644
index 0000000..88a6911
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$TextPathViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$TextViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$TextViewManager.class
new file mode 100644
index 0000000..321c7f8
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$TextViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$TextViewManagerAbstract.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$TextViewManagerAbstract.class
new file mode 100644
index 0000000..dfac4f1
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$TextViewManagerAbstract.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$UseViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$UseViewManager.class
new file mode 100644
index 0000000..2e0a279
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager$UseViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager.class
new file mode 100644
index 0000000..9068059
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/RenderableViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SVGLength$UnitType.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SVGLength$UnitType.class
new file mode 100644
index 0000000..e334551
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SVGLength$UnitType.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SVGLength.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SVGLength.class
new file mode 100644
index 0000000..b8570e9
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SVGLength.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SegmentData.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SegmentData.class
new file mode 100644
index 0000000..fbb6145
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SegmentData.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgPackage.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgPackage.class
new file mode 100644
index 0000000..20c621c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgPackage.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgView$Events.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgView$Events.class
new file mode 100644
index 0000000..a395052
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgView$Events.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgView.class
new file mode 100644
index 0000000..865a521
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgViewManager.class
new file mode 100644
index 0000000..c7dbd12
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgViewModule.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgViewModule.class
new file mode 100644
index 0000000..69b759d
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SvgViewModule.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SymbolView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SymbolView.class
new file mode 100644
index 0000000..e384b82
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/SymbolView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TSpanView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TSpanView.class
new file mode 100644
index 0000000..5bb4b81
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TSpanView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextLayoutAlgorithm$CharacterInformation.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextLayoutAlgorithm$CharacterInformation.class
new file mode 100644
index 0000000..4014430
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextLayoutAlgorithm$CharacterInformation.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextLayoutAlgorithm$LayoutInput.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextLayoutAlgorithm$LayoutInput.class
new file mode 100644
index 0000000..e7c311f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextLayoutAlgorithm$LayoutInput.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextLayoutAlgorithm.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextLayoutAlgorithm.class
new file mode 100644
index 0000000..d18174d
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextLayoutAlgorithm.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextPathView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextPathView.class
new file mode 100644
index 0000000..2e9b79a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextPathView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$AlignmentBaseline.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$AlignmentBaseline.class
new file mode 100644
index 0000000..5f8b0bf
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$AlignmentBaseline.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$Direction.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$Direction.class
new file mode 100644
index 0000000..3f35b1c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$Direction.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$FontStyle.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$FontStyle.class
new file mode 100644
index 0000000..c31720c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$FontStyle.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$FontVariantLigatures.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$FontVariantLigatures.class
new file mode 100644
index 0000000..db20b8d
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$FontVariantLigatures.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$FontWeight.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$FontWeight.class
new file mode 100644
index 0000000..cdc59d3
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$FontWeight.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextAnchor.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextAnchor.class
new file mode 100644
index 0000000..b3422aa
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextAnchor.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextDecoration.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextDecoration.class
new file mode 100644
index 0000000..b458531
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextDecoration.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextLengthAdjust.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextLengthAdjust.class
new file mode 100644
index 0000000..fd56f2a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextLengthAdjust.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextPathMethod.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextPathMethod.class
new file mode 100644
index 0000000..92ed6da
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextPathMethod.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextPathMidLine.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextPathMidLine.class
new file mode 100644
index 0000000..f452611
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextPathMidLine.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextPathSide.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextPathSide.class
new file mode 100644
index 0000000..635be43
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextPathSide.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextPathSpacing.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextPathSpacing.class
new file mode 100644
index 0000000..3e5a447
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties$TextPathSpacing.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties.class
new file mode 100644
index 0000000..0b61849
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextProperties.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextView.class
new file mode 100644
index 0000000..58688b4
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/TextView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/UseView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/UseView.class
new file mode 100644
index 0000000..ae2c594
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/UseView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ViewBox.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ViewBox.class
new file mode 100644
index 0000000..597017d
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/ViewBox.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/VirtualView.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/VirtualView.class
new file mode 100644
index 0000000..1ab65db
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/VirtualView.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/VirtualViewManager$RenderableShadowNode.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/VirtualViewManager$RenderableShadowNode.class
new file mode 100644
index 0000000..e9f5835
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/VirtualViewManager$RenderableShadowNode.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/VirtualViewManager$SVGClass.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/VirtualViewManager$SVGClass.class
new file mode 100644
index 0000000..05a5a5e
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/VirtualViewManager$SVGClass.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/VirtualViewManager.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/VirtualViewManager.class
new file mode 100644
index 0000000..213416e
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/VirtualViewManager.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/events/SvgLoadEvent.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/events/SvgLoadEvent.class
new file mode 100644
index 0000000..329cf4b
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/events/SvgLoadEvent.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/events/SvgOnLayoutEvent.class b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/events/SvgOnLayoutEvent.class
new file mode 100644
index 0000000..785676c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/main/java/com/horcrux/svg/events/SvgOnLayoutEvent.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/main/jni/CMakeLists.txt b/node_modules/react-native-svg/android/bin/src/main/jni/CMakeLists.txt
new file mode 100644
index 0000000..6f45884
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/src/main/jni/CMakeLists.txt
@@ -0,0 +1,96 @@
+cmake_minimum_required(VERSION 3.13)
+set(CMAKE_VERBOSE_MAKEFILE ON)
+
+set(RNSVG_ANDROID_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../..)
+set(RNSVG_COMMON_DIR ${RNSVG_ANDROID_DIR}/../common/cpp)
+set(RNSVG_GENERATED_DIR ${RNSVG_ANDROID_DIR}/build/generated)
+set(RNSVG_GENERATED_JNI_DIR ${RNSVG_GENERATED_DIR}/source/codegen/jni)
+set(RNSVG_GENERATED_REACT_DIR ${RNSVG_GENERATED_JNI_DIR}/react/renderer/components/rnsvg)
+
+file(GLOB rnsvg_SRCS CONFIGURE_DEPENDS *.cpp ${RNSVG_COMMON_DIR}/react/renderer/components/rnsvg/*.cpp)
+file(GLOB rnsvg_codegen_SRCS CONFIGURE_DEPENDS ${RNSVG_GENERATED_REACT_DIR}/*cpp)
+
+add_library(
+  react_codegen_rnsvg
+  SHARED
+  ${rnsvg_SRCS}
+  ${rnsvg_codegen_SRCS}
+)
+
+target_include_directories(
+  react_codegen_rnsvg
+  PUBLIC
+  .
+  ${RNSVG_COMMON_DIR}
+  ${RNSVG_GENERATED_JNI_DIR}
+  ${RNSVG_GENERATED_REACT_DIR}
+)
+
+find_package(ReactAndroid REQUIRED CONFIG)
+
+if(ReactAndroid_VERSION_MINOR GREATER_EQUAL 76)
+  target_link_libraries(
+    react_codegen_rnsvg
+    ReactAndroid::reactnative
+    ReactAndroid::jsi
+  )
+else()
+  target_link_libraries(
+    react_codegen_rnsvg
+    folly_runtime
+    glog
+    jsi
+    react_codegen_rncore
+    react_debug
+    react_nativemodule_core
+    react_render_core
+    react_render_debug
+    react_render_graphics
+    react_render_mapbuffer
+    rrc_image
+    react_render_componentregistry
+    rrc_view
+    turbomodulejsijni
+    yoga
+    react_render_imagemanager
+    react_utils
+  )
+endif()
+
+target_link_libraries(
+  react_codegen_rnsvg
+  fbjni
+)
+
+target_include_directories(
+  ${CMAKE_PROJECT_NAME}
+  PUBLIC
+  ${CMAKE_CURRENT_SOURCE_DIR}
+)
+
+if(ReactAndroid_VERSION_MINOR GREATER_EQUAL 80)
+  target_compile_reactnative_options(react_codegen_rnsvg PUBLIC)
+else()
+  target_compile_options(
+    react_codegen_rnsvg
+    PRIVATE
+    -fexceptions
+    -frtti
+    -std=c++20
+    -Wall
+  )
+endif()
+
+target_compile_options(
+  react_codegen_rnsvg
+  PRIVATE
+  -Wpedantic
+  -Wno-gnu-zero-variadic-macro-arguments
+  -Wno-dollar-in-identifier-extension
+)
+
+target_compile_definitions(
+  react_codegen_rnsvg
+  PRIVATE
+  REACT_NATIVE_MINOR_VERSION=${ReactAndroid_VERSION_MINOR}
+)
diff --git a/node_modules/react-native-svg/android/bin/src/main/jni/rnsvg.cpp b/node_modules/react-native-svg/android/bin/src/main/jni/rnsvg.cpp
new file mode 100644
index 0000000..b47dd65
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/src/main/jni/rnsvg.cpp
@@ -0,0 +1,88 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniCpp.js
+ */
+
+#include "rnsvg.h"
+
+namespace facebook {
+namespace react {
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_isPointInFill(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, BooleanKind, "isPointInFill", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;)Z", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_isPointInStroke(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, BooleanKind, "isPointInStroke", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;)Z", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getTotalLength(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, NumberKind, "getTotalLength", "(Ljava/lang/Double;)D", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getPointAtLength(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getPointAtLength", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getBBox(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getBBox", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getCTM(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getCTM", "(Ljava/lang/Double;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getScreenCTM(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getScreenCTM", "(Ljava/lang/Double;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getRawResource(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getRawResource", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+NativeSvgRenderableModuleSpecJSI::NativeSvgRenderableModuleSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+  methodMap_["isPointInFill"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleSpecJSI_isPointInFill};
+  methodMap_["isPointInStroke"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleSpecJSI_isPointInStroke};
+  methodMap_["getTotalLength"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleSpecJSI_getTotalLength};
+  methodMap_["getPointAtLength"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleSpecJSI_getPointAtLength};
+  methodMap_["getBBox"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleSpecJSI_getBBox};
+  methodMap_["getCTM"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleSpecJSI_getCTM};
+  methodMap_["getScreenCTM"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleSpecJSI_getScreenCTM};
+  methodMap_["getRawResource"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleSpecJSI_getRawResource};
+}
+static facebook::jsi::Value __hostFunction_NativeSvgViewModuleSpecJSI_toDataURL(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "toDataURL", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
+}
+
+NativeSvgViewModuleSpecJSI::NativeSvgViewModuleSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+  methodMap_["toDataURL"] = MethodMetadata {3, __hostFunction_NativeSvgViewModuleSpecJSI_toDataURL};
+}
+
+std::shared_ptr<TurboModule> rnsvg_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
+  if (moduleName == "RNSVGRenderableModule") {
+    return std::make_shared<NativeSvgRenderableModuleSpecJSI>(params);
+  }
+  if (moduleName == "RNSVGSvgViewModule") {
+    return std::make_shared<NativeSvgViewModuleSpecJSI>(params);
+  }
+  return nullptr;
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native-svg/android/bin/src/main/jni/rnsvg.h b/node_modules/react-native-svg/android/bin/src/main/jni/rnsvg.h
new file mode 100644
index 0000000..032cecf
--- /dev/null
+++ b/node_modules/react-native-svg/android/bin/src/main/jni/rnsvg.h
@@ -0,0 +1,33 @@
+#pragma once
+
+#include <ReactCommon/JavaTurboModule.h>
+#include <ReactCommon/TurboModule.h>
+#include <jsi/jsi.h>
+#include <react/renderer/components/rnsvg/RNSVGComponentDescriptors.h>
+#include <react/renderer/components/rnsvg/RNSVGImageComponentDescriptor.h>
+
+namespace facebook {
+namespace react {
+
+/**
+ * JNI C++ class for module 'NativeSvgRenderableModule'
+ */
+class JSI_EXPORT NativeSvgRenderableModuleSpecJSI : public JavaTurboModule {
+public:
+  NativeSvgRenderableModuleSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+/**
+ * JNI C++ class for module 'NativeSvgViewModule'
+ */
+class JSI_EXPORT NativeSvgViewModuleSpecJSI : public JavaTurboModule {
+public:
+  NativeSvgViewModuleSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+
+JSI_EXPORT
+std::shared_ptr<TurboModule> rnsvg_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params);
+
+} // namespace react
+} // namespace facebook
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.class
new file mode 100644
index 0000000..9a2e9cd
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.class
new file mode 100644
index 0000000..17504bd
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.class
new file mode 100644
index 0000000..259a11e
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.class
new file mode 100644
index 0000000..08fc174
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.class
new file mode 100644
index 0000000..7a77ea2
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.class
new file mode 100644
index 0000000..fed8a34
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.class
new file mode 100644
index 0000000..38b803a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.class
new file mode 100644
index 0000000..ee3a758
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerDelegate.class
new file mode 100644
index 0000000..0a8c01d
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerInterface.class
new file mode 100644
index 0000000..b298792
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerDelegate.class
new file mode 100644
index 0000000..19f9f19
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerInterface.class
new file mode 100644
index 0000000..97ba792
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerDelegate.class
new file mode 100644
index 0000000..519e068
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerInterface.class
new file mode 100644
index 0000000..423c16e
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerDelegate.class
new file mode 100644
index 0000000..16966d0
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerInterface.class
new file mode 100644
index 0000000..655609f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerDelegate.class
new file mode 100644
index 0000000..63f53a0
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerInterface.class
new file mode 100644
index 0000000..83d694c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerDelegate.class
new file mode 100644
index 0000000..7e13012
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerInterface.class
new file mode 100644
index 0000000..03752ab
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerDelegate.class
new file mode 100644
index 0000000..bf7e10a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerInterface.class
new file mode 100644
index 0000000..d2ba83e
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFilterManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFilterManagerDelegate.class
new file mode 100644
index 0000000..75fe2e6
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFilterManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFilterManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFilterManagerInterface.class
new file mode 100644
index 0000000..a264c97
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGFilterManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.class
new file mode 100644
index 0000000..bcd55d5
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.class
new file mode 100644
index 0000000..ee42d27
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.class
new file mode 100644
index 0000000..fd26426
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.class
new file mode 100644
index 0000000..1065fdf
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.class
new file mode 100644
index 0000000..114ce88
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.class
new file mode 100644
index 0000000..8fa7670
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.class
new file mode 100644
index 0000000..40aaf3f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.class
new file mode 100644
index 0000000..b93c356
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.class
new file mode 100644
index 0000000..142ef5a
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.class
new file mode 100644
index 0000000..6ba8be5
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.class
new file mode 100644
index 0000000..5c85391
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.class
new file mode 100644
index 0000000..aedce3e
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.class
new file mode 100644
index 0000000..9b1df34
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.class
new file mode 100644
index 0000000..67b65fc
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.class
new file mode 100644
index 0000000..19f6006
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.class
new file mode 100644
index 0000000..7cff181
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.class
new file mode 100644
index 0000000..bfb7a8c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.class
new file mode 100644
index 0000000..3e91391
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.class
new file mode 100644
index 0000000..614b5e5
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.class
new file mode 100644
index 0000000..d07f7ba
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.class
new file mode 100644
index 0000000..c48233b
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.class
new file mode 100644
index 0000000..30fe99f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.class
new file mode 100644
index 0000000..3eb362f
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.class
new file mode 100644
index 0000000..c5bb2f0
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.class
new file mode 100644
index 0000000..7e532e4
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.class
new file mode 100644
index 0000000..5f5bd64
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.class
new file mode 100644
index 0000000..8e3fc4c
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.class
new file mode 100644
index 0000000..34ba1aa
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.class
new file mode 100644
index 0000000..44f903d
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.class
new file mode 100644
index 0000000..28e1847
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.class
new file mode 100644
index 0000000..05c767d
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.class
new file mode 100644
index 0000000..676a1a0
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.class
new file mode 100644
index 0000000..8fbe294
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.class
new file mode 100644
index 0000000..409128b
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/horcrux/svg/NativeSvgRenderableModuleSpec.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/horcrux/svg/NativeSvgRenderableModuleSpec.class
new file mode 100644
index 0000000..1a07f05
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/horcrux/svg/NativeSvgRenderableModuleSpec.class differ
diff --git a/node_modules/react-native-svg/android/bin/src/paper/java/com/horcrux/svg/NativeSvgViewModuleSpec.class b/node_modules/react-native-svg/android/bin/src/paper/java/com/horcrux/svg/NativeSvgViewModuleSpec.class
new file mode 100644
index 0000000..63c54b3
Binary files /dev/null and b/node_modules/react-native-svg/android/bin/src/paper/java/com/horcrux/svg/NativeSvgViewModuleSpec.class differ
diff --git a/node_modules/react-native-svg/android/build/generated/source/buildConfig/release/com/horcrux/svg/BuildConfig.java b/node_modules/react-native-svg/android/build/generated/source/buildConfig/release/com/horcrux/svg/BuildConfig.java
new file mode 100644
index 0000000..ec83f2a
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/buildConfig/release/com/horcrux/svg/BuildConfig.java
@@ -0,0 +1,12 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.horcrux.svg;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = false;
+  public static final String LIBRARY_PACKAGE_NAME = "com.horcrux.svg";
+  public static final String BUILD_TYPE = "release";
+  // Field from default config.
+  public static final boolean IS_NEW_ARCHITECTURE_ENABLED = true;
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.java
new file mode 100644
index 0000000..b8620b5
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.java
@@ -0,0 +1,122 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGCircleManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGCircleManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGCircleManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "cx":
+        mViewManager.setCx(view, new DynamicFromObject(value));
+        break;
+      case "cy":
+        mViewManager.setCy(view, new DynamicFromObject(value));
+        break;
+      case "r":
+        mViewManager.setR(view, new DynamicFromObject(value));
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.java
new file mode 100644
index 0000000..4e67610
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.java
@@ -0,0 +1,48 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGCircleManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setCx(T view, Dynamic value);
+  void setCy(T view, Dynamic value);
+  void setR(T view, Dynamic value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.java
new file mode 100644
index 0000000..deef431
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.java
@@ -0,0 +1,122 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGClipPathManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGClipPathManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGClipPathManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "fontSize":
+        mViewManager.setFontSize(view, new DynamicFromObject(value));
+        break;
+      case "fontWeight":
+        mViewManager.setFontWeight(view, new DynamicFromObject(value));
+        break;
+      case "font":
+        mViewManager.setFont(view, new DynamicFromObject(value));
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.java
new file mode 100644
index 0000000..dcde7e4
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.java
@@ -0,0 +1,48 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGClipPathManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setFontSize(T view, Dynamic value);
+  void setFontWeight(T view, Dynamic value);
+  void setFont(T view, Dynamic value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.java
new file mode 100644
index 0000000..8d22e88
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.java
@@ -0,0 +1,66 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGDefsManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGDefsManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGDefsManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.java
new file mode 100644
index 0000000..d405b61
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.java
@@ -0,0 +1,29 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGDefsManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.java
new file mode 100644
index 0000000..ed43295
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.java
@@ -0,0 +1,125 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGEllipseManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGEllipseManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGEllipseManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "cx":
+        mViewManager.setCx(view, new DynamicFromObject(value));
+        break;
+      case "cy":
+        mViewManager.setCy(view, new DynamicFromObject(value));
+        break;
+      case "rx":
+        mViewManager.setRx(view, new DynamicFromObject(value));
+        break;
+      case "ry":
+        mViewManager.setRy(view, new DynamicFromObject(value));
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.java
new file mode 100644
index 0000000..e3335fd
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.java
@@ -0,0 +1,49 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGEllipseManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setCx(T view, Dynamic value);
+  void setCy(T view, Dynamic value);
+  void setRx(T view, Dynamic value);
+  void setRy(T view, Dynamic value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerDelegate.java
new file mode 100644
index 0000000..d9e7de7
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerDelegate.java
@@ -0,0 +1,54 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGFeBlendManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGFeBlendManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGFeBlendManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "result":
+        mViewManager.setResult(view, value == null ? null : (String) value);
+        break;
+      case "in1":
+        mViewManager.setIn1(view, value == null ? null : (String) value);
+        break;
+      case "in2":
+        mViewManager.setIn2(view, value == null ? null : (String) value);
+        break;
+      case "mode":
+        mViewManager.setMode(view, (String) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerInterface.java
new file mode 100644
index 0000000..fb29eed
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeBlendManagerInterface.java
@@ -0,0 +1,25 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+
+public interface RNSVGFeBlendManagerInterface<T extends View> {
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setResult(T view, @Nullable String value);
+  void setIn1(T view, @Nullable String value);
+  void setIn2(T view, @Nullable String value);
+  void setMode(T view, @Nullable String value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerDelegate.java
new file mode 100644
index 0000000..6454ee4
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerDelegate.java
@@ -0,0 +1,55 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGFeColorMatrixManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGFeColorMatrixManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGFeColorMatrixManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "result":
+        mViewManager.setResult(view, value == null ? null : (String) value);
+        break;
+      case "in1":
+        mViewManager.setIn1(view, value == null ? null : (String) value);
+        break;
+      case "type":
+        mViewManager.setType(view, (String) value);
+        break;
+      case "values":
+        mViewManager.setValues(view, (ReadableArray) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerInterface.java
new file mode 100644
index 0000000..fef1a08
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerInterface.java
@@ -0,0 +1,26 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGFeColorMatrixManagerInterface<T extends View> {
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setResult(T view, @Nullable String value);
+  void setIn1(T view, @Nullable String value);
+  void setType(T view, @Nullable String value);
+  void setValues(T view, @Nullable ReadableArray value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerDelegate.java
new file mode 100644
index 0000000..3425d2b
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerDelegate.java
@@ -0,0 +1,66 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGFeCompositeManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGFeCompositeManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGFeCompositeManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "result":
+        mViewManager.setResult(view, value == null ? null : (String) value);
+        break;
+      case "in1":
+        mViewManager.setIn1(view, value == null ? null : (String) value);
+        break;
+      case "in2":
+        mViewManager.setIn2(view, value == null ? null : (String) value);
+        break;
+      case "operator1":
+        mViewManager.setOperator1(view, (String) value);
+        break;
+      case "k1":
+        mViewManager.setK1(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "k2":
+        mViewManager.setK2(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "k3":
+        mViewManager.setK3(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "k4":
+        mViewManager.setK4(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerInterface.java
new file mode 100644
index 0000000..95c9259
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerInterface.java
@@ -0,0 +1,29 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+
+public interface RNSVGFeCompositeManagerInterface<T extends View> {
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setResult(T view, @Nullable String value);
+  void setIn1(T view, @Nullable String value);
+  void setIn2(T view, @Nullable String value);
+  void setOperator1(T view, @Nullable String value);
+  void setK1(T view, float value);
+  void setK2(T view, float value);
+  void setK3(T view, float value);
+  void setK4(T view, float value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerDelegate.java
new file mode 100644
index 0000000..46ee013
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerDelegate.java
@@ -0,0 +1,51 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGFeFloodManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGFeFloodManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGFeFloodManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "result":
+        mViewManager.setResult(view, value == null ? null : (String) value);
+        break;
+      case "floodColor":
+        mViewManager.setFloodColor(view, new DynamicFromObject(value));
+        break;
+      case "floodOpacity":
+        mViewManager.setFloodOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerInterface.java
new file mode 100644
index 0000000..0f9fc0f
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeFloodManagerInterface.java
@@ -0,0 +1,24 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+
+public interface RNSVGFeFloodManagerInterface<T extends View> {
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setResult(T view, @Nullable String value);
+  void setFloodColor(T view, Dynamic value);
+  void setFloodOpacity(T view, float value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerDelegate.java
new file mode 100644
index 0000000..7144287
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerDelegate.java
@@ -0,0 +1,57 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGFeGaussianBlurManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGFeGaussianBlurManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGFeGaussianBlurManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "result":
+        mViewManager.setResult(view, value == null ? null : (String) value);
+        break;
+      case "in1":
+        mViewManager.setIn1(view, value == null ? null : (String) value);
+        break;
+      case "stdDeviationX":
+        mViewManager.setStdDeviationX(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "stdDeviationY":
+        mViewManager.setStdDeviationY(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "edgeMode":
+        mViewManager.setEdgeMode(view, (String) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerInterface.java
new file mode 100644
index 0000000..089eb3d
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerInterface.java
@@ -0,0 +1,26 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+
+public interface RNSVGFeGaussianBlurManagerInterface<T extends View> {
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setResult(T view, @Nullable String value);
+  void setIn1(T view, @Nullable String value);
+  void setStdDeviationX(T view, float value);
+  void setStdDeviationY(T view, float value);
+  void setEdgeMode(T view, @Nullable String value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerDelegate.java
new file mode 100644
index 0000000..014303e
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerDelegate.java
@@ -0,0 +1,49 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGFeMergeManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGFeMergeManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGFeMergeManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "result":
+        mViewManager.setResult(view, value == null ? null : (String) value);
+        break;
+      case "nodes":
+        mViewManager.setNodes(view, (ReadableArray) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerInterface.java
new file mode 100644
index 0000000..1721639
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeMergeManagerInterface.java
@@ -0,0 +1,24 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGFeMergeManagerInterface<T extends View> {
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setResult(T view, @Nullable String value);
+  void setNodes(T view, @Nullable ReadableArray value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerDelegate.java
new file mode 100644
index 0000000..1150377
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerDelegate.java
@@ -0,0 +1,54 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGFeOffsetManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGFeOffsetManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGFeOffsetManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "result":
+        mViewManager.setResult(view, value == null ? null : (String) value);
+        break;
+      case "in1":
+        mViewManager.setIn1(view, value == null ? null : (String) value);
+        break;
+      case "dx":
+        mViewManager.setDx(view, new DynamicFromObject(value));
+        break;
+      case "dy":
+        mViewManager.setDy(view, new DynamicFromObject(value));
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerInterface.java
new file mode 100644
index 0000000..adf76fd
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerInterface.java
@@ -0,0 +1,25 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+
+public interface RNSVGFeOffsetManagerInterface<T extends View> {
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setResult(T view, @Nullable String value);
+  void setIn1(T view, @Nullable String value);
+  void setDx(T view, Dynamic value);
+  void setDy(T view, Dynamic value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFilterManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFilterManagerDelegate.java
new file mode 100644
index 0000000..4b82b34
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFilterManagerDelegate.java
@@ -0,0 +1,51 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGFilterManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGFilterManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGFilterManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      case "filterUnits":
+        mViewManager.setFilterUnits(view, (String) value);
+        break;
+      case "primitiveUnits":
+        mViewManager.setPrimitiveUnits(view, (String) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFilterManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFilterManagerInterface.java
new file mode 100644
index 0000000..80417fa
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGFilterManagerInterface.java
@@ -0,0 +1,24 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+
+public interface RNSVGFilterManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+  void setFilterUnits(T view, @Nullable String value);
+  void setPrimitiveUnits(T view, @Nullable String value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.java
new file mode 100644
index 0000000..d87bf7c
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.java
@@ -0,0 +1,134 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGForeignObjectManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGForeignObjectManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGForeignObjectManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "fontSize":
+        mViewManager.setFontSize(view, new DynamicFromObject(value));
+        break;
+      case "fontWeight":
+        mViewManager.setFontWeight(view, new DynamicFromObject(value));
+        break;
+      case "font":
+        mViewManager.setFont(view, new DynamicFromObject(value));
+        break;
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.java
new file mode 100644
index 0000000..a8aef14
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.java
@@ -0,0 +1,52 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGForeignObjectManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setFontSize(T view, Dynamic value);
+  void setFontWeight(T view, Dynamic value);
+  void setFont(T view, Dynamic value);
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.java
new file mode 100644
index 0000000..47b0a7f
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.java
@@ -0,0 +1,122 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGGroupManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGGroupManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGGroupManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "fontSize":
+        mViewManager.setFontSize(view, new DynamicFromObject(value));
+        break;
+      case "fontWeight":
+        mViewManager.setFontWeight(view, new DynamicFromObject(value));
+        break;
+      case "font":
+        mViewManager.setFont(view, new DynamicFromObject(value));
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.java
new file mode 100644
index 0000000..79dab3a
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.java
@@ -0,0 +1,48 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGGroupManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setFontSize(T view, Dynamic value);
+  void setFontWeight(T view, Dynamic value);
+  void setFont(T view, Dynamic value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.java
new file mode 100644
index 0000000..376589d
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.java
@@ -0,0 +1,135 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGImageManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGImageManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGImageManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "src":
+        mViewManager.setSrc(view, (ReadableMap) value);
+        break;
+      case "align":
+        mViewManager.setAlign(view, value == null ? null : (String) value);
+        break;
+      case "meetOrSlice":
+        mViewManager.setMeetOrSlice(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.java
new file mode 100644
index 0000000..8e9ee1c
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.java
@@ -0,0 +1,53 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.bridge.ReadableMap;
+
+public interface RNSVGImageManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setSrc(T view, @Nullable ReadableMap value);
+  void setAlign(T view, @Nullable String value);
+  void setMeetOrSlice(T view, int value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.java
new file mode 100644
index 0000000..6bec1ef
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.java
@@ -0,0 +1,125 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGLineManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGLineManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGLineManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "x1":
+        mViewManager.setX1(view, new DynamicFromObject(value));
+        break;
+      case "y1":
+        mViewManager.setY1(view, new DynamicFromObject(value));
+        break;
+      case "x2":
+        mViewManager.setX2(view, new DynamicFromObject(value));
+        break;
+      case "y2":
+        mViewManager.setY2(view, new DynamicFromObject(value));
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.java
new file mode 100644
index 0000000..53cedba
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.java
@@ -0,0 +1,49 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGLineManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setX1(T view, Dynamic value);
+  void setY1(T view, Dynamic value);
+  void setX2(T view, Dynamic value);
+  void setY2(T view, Dynamic value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.java
new file mode 100644
index 0000000..4bcb2e1
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.java
@@ -0,0 +1,88 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGLinearGradientManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGLinearGradientManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGLinearGradientManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "x1":
+        mViewManager.setX1(view, new DynamicFromObject(value));
+        break;
+      case "y1":
+        mViewManager.setY1(view, new DynamicFromObject(value));
+        break;
+      case "x2":
+        mViewManager.setX2(view, new DynamicFromObject(value));
+        break;
+      case "y2":
+        mViewManager.setY2(view, new DynamicFromObject(value));
+        break;
+      case "gradient":
+        mViewManager.setGradient(view, (ReadableArray) value);
+        break;
+      case "gradientUnits":
+        mViewManager.setGradientUnits(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "gradientTransform":
+        mViewManager.setGradientTransform(view, (ReadableArray) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.java
new file mode 100644
index 0000000..8da9270
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.java
@@ -0,0 +1,37 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGLinearGradientManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setX1(T view, Dynamic value);
+  void setY1(T view, Dynamic value);
+  void setX2(T view, Dynamic value);
+  void setY2(T view, Dynamic value);
+  void setGradient(T view, @Nullable ReadableArray value);
+  void setGradientUnits(T view, int value);
+  void setGradientTransform(T view, @Nullable ReadableArray value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.java
new file mode 100644
index 0000000..62c831c
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.java
@@ -0,0 +1,158 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGMarkerManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGMarkerManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGMarkerManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "fontSize":
+        mViewManager.setFontSize(view, new DynamicFromObject(value));
+        break;
+      case "fontWeight":
+        mViewManager.setFontWeight(view, new DynamicFromObject(value));
+        break;
+      case "font":
+        mViewManager.setFont(view, new DynamicFromObject(value));
+        break;
+      case "refX":
+        mViewManager.setRefX(view, new DynamicFromObject(value));
+        break;
+      case "refY":
+        mViewManager.setRefY(view, new DynamicFromObject(value));
+        break;
+      case "markerHeight":
+        mViewManager.setMarkerHeight(view, new DynamicFromObject(value));
+        break;
+      case "markerWidth":
+        mViewManager.setMarkerWidth(view, new DynamicFromObject(value));
+        break;
+      case "markerUnits":
+        mViewManager.setMarkerUnits(view, value == null ? null : (String) value);
+        break;
+      case "orient":
+        mViewManager.setOrient(view, value == null ? null : (String) value);
+        break;
+      case "minX":
+        mViewManager.setMinX(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "minY":
+        mViewManager.setMinY(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vbWidth":
+        mViewManager.setVbWidth(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vbHeight":
+        mViewManager.setVbHeight(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "align":
+        mViewManager.setAlign(view, value == null ? null : (String) value);
+        break;
+      case "meetOrSlice":
+        mViewManager.setMeetOrSlice(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.java
new file mode 100644
index 0000000..9ff3cd0
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.java
@@ -0,0 +1,60 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGMarkerManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setFontSize(T view, Dynamic value);
+  void setFontWeight(T view, Dynamic value);
+  void setFont(T view, Dynamic value);
+  void setRefX(T view, Dynamic value);
+  void setRefY(T view, Dynamic value);
+  void setMarkerHeight(T view, Dynamic value);
+  void setMarkerWidth(T view, Dynamic value);
+  void setMarkerUnits(T view, @Nullable String value);
+  void setOrient(T view, @Nullable String value);
+  void setMinX(T view, float value);
+  void setMinY(T view, float value);
+  void setVbWidth(T view, float value);
+  void setVbHeight(T view, float value);
+  void setAlign(T view, @Nullable String value);
+  void setMeetOrSlice(T view, int value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.java
new file mode 100644
index 0000000..2106b69
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.java
@@ -0,0 +1,143 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGMaskManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGMaskManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGMaskManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "fontSize":
+        mViewManager.setFontSize(view, new DynamicFromObject(value));
+        break;
+      case "fontWeight":
+        mViewManager.setFontWeight(view, new DynamicFromObject(value));
+        break;
+      case "font":
+        mViewManager.setFont(view, new DynamicFromObject(value));
+        break;
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      case "maskUnits":
+        mViewManager.setMaskUnits(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "maskContentUnits":
+        mViewManager.setMaskContentUnits(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "maskType":
+        mViewManager.setMaskType(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.java
new file mode 100644
index 0000000..3dfc74a
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.java
@@ -0,0 +1,55 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGMaskManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setFontSize(T view, Dynamic value);
+  void setFontWeight(T view, Dynamic value);
+  void setFont(T view, Dynamic value);
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+  void setMaskUnits(T view, int value);
+  void setMaskContentUnits(T view, int value);
+  void setMaskType(T view, int value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.java
new file mode 100644
index 0000000..fba480b
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.java
@@ -0,0 +1,116 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGPathManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGPathManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGPathManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "d":
+        mViewManager.setD(view, value == null ? null : (String) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.java
new file mode 100644
index 0000000..00484fb
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.java
@@ -0,0 +1,46 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGPathManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setD(T view, @Nullable String value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.java
new file mode 100644
index 0000000..f2aa9f8
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.java
@@ -0,0 +1,161 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGPatternManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGPatternManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGPatternManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "fontSize":
+        mViewManager.setFontSize(view, new DynamicFromObject(value));
+        break;
+      case "fontWeight":
+        mViewManager.setFontWeight(view, new DynamicFromObject(value));
+        break;
+      case "font":
+        mViewManager.setFont(view, new DynamicFromObject(value));
+        break;
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      case "patternUnits":
+        mViewManager.setPatternUnits(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "patternContentUnits":
+        mViewManager.setPatternContentUnits(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "patternTransform":
+        mViewManager.setPatternTransform(view, (ReadableArray) value);
+        break;
+      case "minX":
+        mViewManager.setMinX(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "minY":
+        mViewManager.setMinY(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vbWidth":
+        mViewManager.setVbWidth(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vbHeight":
+        mViewManager.setVbHeight(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "align":
+        mViewManager.setAlign(view, value == null ? null : (String) value);
+        break;
+      case "meetOrSlice":
+        mViewManager.setMeetOrSlice(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.java
new file mode 100644
index 0000000..01271d1
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.java
@@ -0,0 +1,61 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGPatternManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setFontSize(T view, Dynamic value);
+  void setFontWeight(T view, Dynamic value);
+  void setFont(T view, Dynamic value);
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+  void setPatternUnits(T view, int value);
+  void setPatternContentUnits(T view, int value);
+  void setPatternTransform(T view, @Nullable ReadableArray value);
+  void setMinX(T view, float value);
+  void setMinY(T view, float value);
+  void setVbWidth(T view, float value);
+  void setVbHeight(T view, float value);
+  void setAlign(T view, @Nullable String value);
+  void setMeetOrSlice(T view, int value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.java
new file mode 100644
index 0000000..38e0767
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.java
@@ -0,0 +1,94 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGRadialGradientManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGRadialGradientManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGRadialGradientManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "fx":
+        mViewManager.setFx(view, new DynamicFromObject(value));
+        break;
+      case "fy":
+        mViewManager.setFy(view, new DynamicFromObject(value));
+        break;
+      case "cx":
+        mViewManager.setCx(view, new DynamicFromObject(value));
+        break;
+      case "cy":
+        mViewManager.setCy(view, new DynamicFromObject(value));
+        break;
+      case "rx":
+        mViewManager.setRx(view, new DynamicFromObject(value));
+        break;
+      case "ry":
+        mViewManager.setRy(view, new DynamicFromObject(value));
+        break;
+      case "gradient":
+        mViewManager.setGradient(view, (ReadableArray) value);
+        break;
+      case "gradientUnits":
+        mViewManager.setGradientUnits(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "gradientTransform":
+        mViewManager.setGradientTransform(view, (ReadableArray) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.java
new file mode 100644
index 0000000..e7994c0
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.java
@@ -0,0 +1,39 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGRadialGradientManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setFx(T view, Dynamic value);
+  void setFy(T view, Dynamic value);
+  void setCx(T view, Dynamic value);
+  void setCy(T view, Dynamic value);
+  void setRx(T view, Dynamic value);
+  void setRy(T view, Dynamic value);
+  void setGradient(T view, @Nullable ReadableArray value);
+  void setGradientUnits(T view, int value);
+  void setGradientTransform(T view, @Nullable ReadableArray value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.java
new file mode 100644
index 0000000..eae9412
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.java
@@ -0,0 +1,131 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGRectManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGRectManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGRectManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      case "rx":
+        mViewManager.setRx(view, new DynamicFromObject(value));
+        break;
+      case "ry":
+        mViewManager.setRy(view, new DynamicFromObject(value));
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.java
new file mode 100644
index 0000000..580f1d8
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.java
@@ -0,0 +1,51 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGRectManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+  void setRx(T view, Dynamic value);
+  void setRy(T view, Dynamic value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.java
new file mode 100644
index 0000000..8a1e54d
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.java
@@ -0,0 +1,176 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGSvgViewAndroidManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGSvgViewAndroidManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGSvgViewAndroidManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "bbWidth":
+        mViewManager.setBbWidth(view, new DynamicFromObject(value));
+        break;
+      case "bbHeight":
+        mViewManager.setBbHeight(view, new DynamicFromObject(value));
+        break;
+      case "minX":
+        mViewManager.setMinX(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "minY":
+        mViewManager.setMinY(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vbWidth":
+        mViewManager.setVbWidth(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vbHeight":
+        mViewManager.setVbHeight(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "align":
+        mViewManager.setAlign(view, value == null ? null : (String) value);
+        break;
+      case "meetOrSlice":
+        mViewManager.setMeetOrSlice(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "hasTVPreferredFocus":
+        mViewManager.setHasTVPreferredFocus(view, value == null ? false : (boolean) value);
+        break;
+      case "borderBottomColor":
+        mViewManager.setBorderBottomColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "nextFocusDown":
+        mViewManager.setNextFocusDown(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "borderRightColor":
+        mViewManager.setBorderRightColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "nextFocusRight":
+        mViewManager.setNextFocusRight(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "borderLeftColor":
+        mViewManager.setBorderLeftColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "borderColor":
+        mViewManager.setBorderColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "removeClippedSubviews":
+        mViewManager.setRemoveClippedSubviews(view, value == null ? false : (boolean) value);
+        break;
+      case "nextFocusForward":
+        mViewManager.setNextFocusForward(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "nextFocusUp":
+        mViewManager.setNextFocusUp(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "accessible":
+        mViewManager.setAccessible(view, value == null ? false : (boolean) value);
+        break;
+      case "borderStartColor":
+        mViewManager.setBorderStartColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "borderEndColor":
+        mViewManager.setBorderEndColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "focusable":
+        mViewManager.setFocusable(view, value == null ? false : (boolean) value);
+        break;
+      case "nativeBackgroundAndroid":
+        mViewManager.setNativeBackgroundAndroid(view, (ReadableMap) value);
+        break;
+      case "nativeForegroundAndroid":
+        mViewManager.setNativeForegroundAndroid(view, (ReadableMap) value);
+        break;
+      case "backfaceVisibility":
+        mViewManager.setBackfaceVisibility(view, value == null ? null : (String) value);
+        break;
+      case "borderStyle":
+        mViewManager.setBorderStyle(view, value == null ? null : (String) value);
+        break;
+      case "needsOffscreenAlphaCompositing":
+        mViewManager.setNeedsOffscreenAlphaCompositing(view, value == null ? false : (boolean) value);
+        break;
+      case "hitSlop":
+        mViewManager.setHitSlop(view, new DynamicFromObject(value));
+        break;
+      case "borderTopColor":
+        mViewManager.setBorderTopColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "nextFocusLeft":
+        mViewManager.setNextFocusLeft(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "borderBlockColor":
+        mViewManager.setBorderBlockColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "borderBlockEndColor":
+        mViewManager.setBorderBlockEndColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "borderBlockStartColor":
+        mViewManager.setBorderBlockStartColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "borderRadius":
+        mViewManager.setBorderRadius(view, new DynamicFromObject(value));
+        break;
+      case "borderTopLeftRadius":
+        mViewManager.setBorderTopLeftRadius(view, new DynamicFromObject(value));
+        break;
+      case "borderTopRightRadius":
+        mViewManager.setBorderTopRightRadius(view, new DynamicFromObject(value));
+        break;
+      case "borderBottomRightRadius":
+        mViewManager.setBorderBottomRightRadius(view, new DynamicFromObject(value));
+        break;
+      case "borderBottomLeftRadius":
+        mViewManager.setBorderBottomLeftRadius(view, new DynamicFromObject(value));
+        break;
+      case "borderTopStartRadius":
+        mViewManager.setBorderTopStartRadius(view, new DynamicFromObject(value));
+        break;
+      case "borderTopEndRadius":
+        mViewManager.setBorderTopEndRadius(view, new DynamicFromObject(value));
+        break;
+      case "borderBottomStartRadius":
+        mViewManager.setBorderBottomStartRadius(view, new DynamicFromObject(value));
+        break;
+      case "borderBottomEndRadius":
+        mViewManager.setBorderBottomEndRadius(view, new DynamicFromObject(value));
+        break;
+      case "borderEndEndRadius":
+        mViewManager.setBorderEndEndRadius(view, new DynamicFromObject(value));
+        break;
+      case "borderEndStartRadius":
+        mViewManager.setBorderEndStartRadius(view, new DynamicFromObject(value));
+        break;
+      case "borderStartEndRadius":
+        mViewManager.setBorderStartEndRadius(view, new DynamicFromObject(value));
+        break;
+      case "borderStartStartRadius":
+        mViewManager.setBorderStartStartRadius(view, new DynamicFromObject(value));
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.java
new file mode 100644
index 0000000..c5f724a
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.java
@@ -0,0 +1,66 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableMap;
+
+public interface RNSVGSvgViewAndroidManagerInterface<T extends View> {
+  void setBbWidth(T view, Dynamic value);
+  void setBbHeight(T view, Dynamic value);
+  void setMinX(T view, float value);
+  void setMinY(T view, float value);
+  void setVbWidth(T view, float value);
+  void setVbHeight(T view, float value);
+  void setAlign(T view, @Nullable String value);
+  void setMeetOrSlice(T view, int value);
+  void setColor(T view, @Nullable Integer value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setHasTVPreferredFocus(T view, boolean value);
+  void setBorderBottomColor(T view, @Nullable Integer value);
+  void setNextFocusDown(T view, int value);
+  void setBorderRightColor(T view, @Nullable Integer value);
+  void setNextFocusRight(T view, int value);
+  void setBorderLeftColor(T view, @Nullable Integer value);
+  void setBorderColor(T view, @Nullable Integer value);
+  void setRemoveClippedSubviews(T view, boolean value);
+  void setNextFocusForward(T view, int value);
+  void setNextFocusUp(T view, int value);
+  void setAccessible(T view, boolean value);
+  void setBorderStartColor(T view, @Nullable Integer value);
+  void setBorderEndColor(T view, @Nullable Integer value);
+  void setFocusable(T view, boolean value);
+  void setNativeBackgroundAndroid(T view, @Nullable ReadableMap value);
+  void setNativeForegroundAndroid(T view, @Nullable ReadableMap value);
+  void setBackfaceVisibility(T view, @Nullable String value);
+  void setBorderStyle(T view, @Nullable String value);
+  void setNeedsOffscreenAlphaCompositing(T view, boolean value);
+  void setHitSlop(T view, Dynamic value);
+  void setBorderTopColor(T view, @Nullable Integer value);
+  void setNextFocusLeft(T view, int value);
+  void setBorderBlockColor(T view, @Nullable Integer value);
+  void setBorderBlockEndColor(T view, @Nullable Integer value);
+  void setBorderBlockStartColor(T view, @Nullable Integer value);
+  void setBorderRadius(T view, Dynamic value);
+  void setBorderTopLeftRadius(T view, Dynamic value);
+  void setBorderTopRightRadius(T view, Dynamic value);
+  void setBorderBottomRightRadius(T view, Dynamic value);
+  void setBorderBottomLeftRadius(T view, Dynamic value);
+  void setBorderTopStartRadius(T view, Dynamic value);
+  void setBorderTopEndRadius(T view, Dynamic value);
+  void setBorderBottomStartRadius(T view, Dynamic value);
+  void setBorderBottomEndRadius(T view, Dynamic value);
+  void setBorderEndEndRadius(T view, Dynamic value);
+  void setBorderEndStartRadius(T view, Dynamic value);
+  void setBorderStartEndRadius(T view, Dynamic value);
+  void setBorderStartStartRadius(T view, Dynamic value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.java
new file mode 100644
index 0000000..9bda7b5
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.java
@@ -0,0 +1,140 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGSymbolManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGSymbolManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGSymbolManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "fontSize":
+        mViewManager.setFontSize(view, new DynamicFromObject(value));
+        break;
+      case "fontWeight":
+        mViewManager.setFontWeight(view, new DynamicFromObject(value));
+        break;
+      case "font":
+        mViewManager.setFont(view, new DynamicFromObject(value));
+        break;
+      case "minX":
+        mViewManager.setMinX(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "minY":
+        mViewManager.setMinY(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vbWidth":
+        mViewManager.setVbWidth(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vbHeight":
+        mViewManager.setVbHeight(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "align":
+        mViewManager.setAlign(view, value == null ? null : (String) value);
+        break;
+      case "meetOrSlice":
+        mViewManager.setMeetOrSlice(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.java
new file mode 100644
index 0000000..d4c5a7c
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.java
@@ -0,0 +1,54 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGSymbolManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setFontSize(T view, Dynamic value);
+  void setFontWeight(T view, Dynamic value);
+  void setFont(T view, Dynamic value);
+  void setMinX(T view, float value);
+  void setMinY(T view, float value);
+  void setVbWidth(T view, float value);
+  void setVbHeight(T view, float value);
+  void setAlign(T view, @Nullable String value);
+  void setMeetOrSlice(T view, int value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.java
new file mode 100644
index 0000000..1c79145
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.java
@@ -0,0 +1,158 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGTSpanManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGTSpanManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGTSpanManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "fontSize":
+        mViewManager.setFontSize(view, new DynamicFromObject(value));
+        break;
+      case "fontWeight":
+        mViewManager.setFontWeight(view, new DynamicFromObject(value));
+        break;
+      case "font":
+        mViewManager.setFont(view, new DynamicFromObject(value));
+        break;
+      case "dx":
+        mViewManager.setDx(view, new DynamicFromObject(value));
+        break;
+      case "dy":
+        mViewManager.setDy(view, new DynamicFromObject(value));
+        break;
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "rotate":
+        mViewManager.setRotate(view, new DynamicFromObject(value));
+        break;
+      case "inlineSize":
+        mViewManager.setInlineSize(view, new DynamicFromObject(value));
+        break;
+      case "textLength":
+        mViewManager.setTextLength(view, new DynamicFromObject(value));
+        break;
+      case "baselineShift":
+        mViewManager.setBaselineShift(view, new DynamicFromObject(value));
+        break;
+      case "lengthAdjust":
+        mViewManager.setLengthAdjust(view, value == null ? null : (String) value);
+        break;
+      case "alignmentBaseline":
+        mViewManager.setAlignmentBaseline(view, value == null ? null : (String) value);
+        break;
+      case "verticalAlign":
+        mViewManager.setVerticalAlign(view, new DynamicFromObject(value));
+        break;
+      case "content":
+        mViewManager.setContent(view, value == null ? null : (String) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.java
new file mode 100644
index 0000000..7f23f5a
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.java
@@ -0,0 +1,60 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGTSpanManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setFontSize(T view, Dynamic value);
+  void setFontWeight(T view, Dynamic value);
+  void setFont(T view, Dynamic value);
+  void setDx(T view, Dynamic value);
+  void setDy(T view, Dynamic value);
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setRotate(T view, Dynamic value);
+  void setInlineSize(T view, Dynamic value);
+  void setTextLength(T view, Dynamic value);
+  void setBaselineShift(T view, Dynamic value);
+  void setLengthAdjust(T view, @Nullable String value);
+  void setAlignmentBaseline(T view, @Nullable String value);
+  void setVerticalAlign(T view, Dynamic value);
+  void setContent(T view, @Nullable String value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.java
new file mode 100644
index 0000000..14c8fea
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.java
@@ -0,0 +1,155 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGTextManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGTextManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGTextManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "fontSize":
+        mViewManager.setFontSize(view, new DynamicFromObject(value));
+        break;
+      case "fontWeight":
+        mViewManager.setFontWeight(view, new DynamicFromObject(value));
+        break;
+      case "font":
+        mViewManager.setFont(view, new DynamicFromObject(value));
+        break;
+      case "dx":
+        mViewManager.setDx(view, new DynamicFromObject(value));
+        break;
+      case "dy":
+        mViewManager.setDy(view, new DynamicFromObject(value));
+        break;
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "rotate":
+        mViewManager.setRotate(view, new DynamicFromObject(value));
+        break;
+      case "inlineSize":
+        mViewManager.setInlineSize(view, new DynamicFromObject(value));
+        break;
+      case "textLength":
+        mViewManager.setTextLength(view, new DynamicFromObject(value));
+        break;
+      case "baselineShift":
+        mViewManager.setBaselineShift(view, new DynamicFromObject(value));
+        break;
+      case "lengthAdjust":
+        mViewManager.setLengthAdjust(view, value == null ? null : (String) value);
+        break;
+      case "alignmentBaseline":
+        mViewManager.setAlignmentBaseline(view, value == null ? null : (String) value);
+        break;
+      case "verticalAlign":
+        mViewManager.setVerticalAlign(view, new DynamicFromObject(value));
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.java
new file mode 100644
index 0000000..2b0d3f6
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.java
@@ -0,0 +1,59 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGTextManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setFontSize(T view, Dynamic value);
+  void setFontWeight(T view, Dynamic value);
+  void setFont(T view, Dynamic value);
+  void setDx(T view, Dynamic value);
+  void setDy(T view, Dynamic value);
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setRotate(T view, Dynamic value);
+  void setInlineSize(T view, Dynamic value);
+  void setTextLength(T view, Dynamic value);
+  void setBaselineShift(T view, Dynamic value);
+  void setLengthAdjust(T view, @Nullable String value);
+  void setAlignmentBaseline(T view, @Nullable String value);
+  void setVerticalAlign(T view, Dynamic value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.java
new file mode 100644
index 0000000..61fab1a
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.java
@@ -0,0 +1,173 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGTextPathManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGTextPathManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGTextPathManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "fontSize":
+        mViewManager.setFontSize(view, new DynamicFromObject(value));
+        break;
+      case "fontWeight":
+        mViewManager.setFontWeight(view, new DynamicFromObject(value));
+        break;
+      case "font":
+        mViewManager.setFont(view, new DynamicFromObject(value));
+        break;
+      case "dx":
+        mViewManager.setDx(view, new DynamicFromObject(value));
+        break;
+      case "dy":
+        mViewManager.setDy(view, new DynamicFromObject(value));
+        break;
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "rotate":
+        mViewManager.setRotate(view, new DynamicFromObject(value));
+        break;
+      case "inlineSize":
+        mViewManager.setInlineSize(view, new DynamicFromObject(value));
+        break;
+      case "textLength":
+        mViewManager.setTextLength(view, new DynamicFromObject(value));
+        break;
+      case "baselineShift":
+        mViewManager.setBaselineShift(view, new DynamicFromObject(value));
+        break;
+      case "lengthAdjust":
+        mViewManager.setLengthAdjust(view, value == null ? null : (String) value);
+        break;
+      case "alignmentBaseline":
+        mViewManager.setAlignmentBaseline(view, value == null ? null : (String) value);
+        break;
+      case "verticalAlign":
+        mViewManager.setVerticalAlign(view, new DynamicFromObject(value));
+        break;
+      case "href":
+        mViewManager.setHref(view, value == null ? null : (String) value);
+        break;
+      case "side":
+        mViewManager.setSide(view, value == null ? null : (String) value);
+        break;
+      case "method":
+        mViewManager.setMethod(view, value == null ? null : (String) value);
+        break;
+      case "midLine":
+        mViewManager.setMidLine(view, value == null ? null : (String) value);
+        break;
+      case "spacing":
+        mViewManager.setSpacing(view, value == null ? null : (String) value);
+        break;
+      case "startOffset":
+        mViewManager.setStartOffset(view, new DynamicFromObject(value));
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.java
new file mode 100644
index 0000000..9479a9f
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.java
@@ -0,0 +1,65 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGTextPathManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setFontSize(T view, Dynamic value);
+  void setFontWeight(T view, Dynamic value);
+  void setFont(T view, Dynamic value);
+  void setDx(T view, Dynamic value);
+  void setDy(T view, Dynamic value);
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setRotate(T view, Dynamic value);
+  void setInlineSize(T view, Dynamic value);
+  void setTextLength(T view, Dynamic value);
+  void setBaselineShift(T view, Dynamic value);
+  void setLengthAdjust(T view, @Nullable String value);
+  void setAlignmentBaseline(T view, @Nullable String value);
+  void setVerticalAlign(T view, Dynamic value);
+  void setHref(T view, @Nullable String value);
+  void setSide(T view, @Nullable String value);
+  void setMethod(T view, @Nullable String value);
+  void setMidLine(T view, @Nullable String value);
+  void setSpacing(T view, @Nullable String value);
+  void setStartOffset(T view, Dynamic value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.java
new file mode 100644
index 0000000..0dd7b99
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.java
@@ -0,0 +1,128 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.DynamicFromObject;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManager;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.LayoutShadowNode;
+
+public class RNSVGUseManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & RNSVGUseManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSVGUseManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "name":
+        mViewManager.setName(view, value == null ? null : (String) value);
+        break;
+      case "opacity":
+        mViewManager.setOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "matrix":
+        mViewManager.setMatrix(view, (ReadableArray) value);
+        break;
+      case "mask":
+        mViewManager.setMask(view, value == null ? null : (String) value);
+        break;
+      case "markerStart":
+        mViewManager.setMarkerStart(view, value == null ? null : (String) value);
+        break;
+      case "markerMid":
+        mViewManager.setMarkerMid(view, value == null ? null : (String) value);
+        break;
+      case "markerEnd":
+        mViewManager.setMarkerEnd(view, value == null ? null : (String) value);
+        break;
+      case "clipPath":
+        mViewManager.setClipPath(view, value == null ? null : (String) value);
+        break;
+      case "clipRule":
+        mViewManager.setClipRule(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "responsible":
+        mViewManager.setResponsible(view, value == null ? false : (boolean) value);
+        break;
+      case "display":
+        mViewManager.setDisplay(view, value == null ? null : (String) value);
+        break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "fill":
+        mViewManager.setFill(view, new DynamicFromObject(value));
+        break;
+      case "fillOpacity":
+        mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "fillRule":
+        mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
+        break;
+      case "stroke":
+        mViewManager.setStroke(view, new DynamicFromObject(value));
+        break;
+      case "strokeOpacity":
+        mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());
+        break;
+      case "strokeWidth":
+        mViewManager.setStrokeWidth(view, new DynamicFromObject(value));
+        break;
+      case "strokeLinecap":
+        mViewManager.setStrokeLinecap(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeLinejoin":
+        mViewManager.setStrokeLinejoin(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "strokeDasharray":
+        mViewManager.setStrokeDasharray(view, new DynamicFromObject(value));
+        break;
+      case "strokeDashoffset":
+        mViewManager.setStrokeDashoffset(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "strokeMiterlimit":
+        mViewManager.setStrokeMiterlimit(view, value == null ? 0f : ((Double) value).floatValue());
+        break;
+      case "vectorEffect":
+        mViewManager.setVectorEffect(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "propList":
+        mViewManager.setPropList(view, (ReadableArray) value);
+        break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
+      case "href":
+        mViewManager.setHref(view, value == null ? null : (String) value);
+        break;
+      case "x":
+        mViewManager.setX(view, new DynamicFromObject(value));
+        break;
+      case "y":
+        mViewManager.setY(view, new DynamicFromObject(value));
+        break;
+      case "height":
+        mViewManager.setHeight(view, new DynamicFromObject(value));
+        break;
+      case "width":
+        mViewManager.setWidth(view, new DynamicFromObject(value));
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.java
new file mode 100644
index 0000000..0bda3e4
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.java
@@ -0,0 +1,50 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.ReadableArray;
+
+public interface RNSVGUseManagerInterface<T extends View> {
+  void setName(T view, @Nullable String value);
+  void setOpacity(T view, float value);
+  void setMatrix(T view, @Nullable ReadableArray value);
+  void setMask(T view, @Nullable String value);
+  void setMarkerStart(T view, @Nullable String value);
+  void setMarkerMid(T view, @Nullable String value);
+  void setMarkerEnd(T view, @Nullable String value);
+  void setClipPath(T view, @Nullable String value);
+  void setClipRule(T view, int value);
+  void setResponsible(T view, boolean value);
+  void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
+  void setFill(T view, Dynamic value);
+  void setFillOpacity(T view, float value);
+  void setFillRule(T view, int value);
+  void setStroke(T view, Dynamic value);
+  void setStrokeOpacity(T view, float value);
+  void setStrokeWidth(T view, Dynamic value);
+  void setStrokeLinecap(T view, int value);
+  void setStrokeLinejoin(T view, int value);
+  void setStrokeDasharray(T view, Dynamic value);
+  void setStrokeDashoffset(T view, float value);
+  void setStrokeMiterlimit(T view, float value);
+  void setVectorEffect(T view, int value);
+  void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
+  void setHref(T view, @Nullable String value);
+  void setX(T view, Dynamic value);
+  void setY(T view, Dynamic value);
+  void setHeight(T view, Dynamic value);
+  void setWidth(T view, Dynamic value);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/horcrux/svg/NativeSvgRenderableModuleSpec.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/horcrux/svg/NativeSvgRenderableModuleSpec.java
new file mode 100644
index 0000000..39f8098
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/horcrux/svg/NativeSvgRenderableModuleSpec.java
@@ -0,0 +1,69 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJavaSpec.js
+ *
+ * @nolint
+ */
+
+package com.horcrux.svg;
+
+import com.facebook.proguard.annotations.DoNotStrip;
+import com.facebook.react.bridge.Promise;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReactContextBaseJavaModule;
+import com.facebook.react.bridge.ReactMethod;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.bridge.WritableMap;
+import com.facebook.react.turbomodule.core.interfaces.TurboModule;
+import javax.annotation.Nonnull;
+import javax.annotation.Nullable;
+
+public abstract class NativeSvgRenderableModuleSpec extends ReactContextBaseJavaModule implements TurboModule {
+  public static final String NAME = "RNSVGRenderableModule";
+
+  public NativeSvgRenderableModuleSpec(ReactApplicationContext reactContext) {
+    super(reactContext);
+  }
+
+  @Override
+  public @Nonnull String getName() {
+    return NAME;
+  }
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean isPointInFill(@Nullable Double tag, @Nullable ReadableMap options);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract boolean isPointInStroke(@Nullable Double tag, @Nullable ReadableMap options);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract double getTotalLength(@Nullable Double tag);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract WritableMap getPointAtLength(@Nullable Double tag, @Nullable ReadableMap options);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract WritableMap getBBox(@Nullable Double tag, @Nullable ReadableMap options);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract WritableMap getCTM(@Nullable Double tag);
+
+  @ReactMethod(isBlockingSynchronousMethod = true)
+  @DoNotStrip
+  public abstract WritableMap getScreenCTM(@Nullable Double tag);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getRawResource(String name, Promise promise);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/horcrux/svg/NativeSvgViewModuleSpec.java b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/horcrux/svg/NativeSvgViewModuleSpec.java
new file mode 100644
index 0000000..4ad70b8
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/java/com/horcrux/svg/NativeSvgViewModuleSpec.java
@@ -0,0 +1,40 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJavaSpec.js
+ *
+ * @nolint
+ */
+
+package com.horcrux.svg;
+
+import com.facebook.proguard.annotations.DoNotStrip;
+import com.facebook.react.bridge.Callback;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReactContextBaseJavaModule;
+import com.facebook.react.bridge.ReactMethod;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.turbomodule.core.interfaces.TurboModule;
+import javax.annotation.Nonnull;
+import javax.annotation.Nullable;
+
+public abstract class NativeSvgViewModuleSpec extends ReactContextBaseJavaModule implements TurboModule {
+  public static final String NAME = "RNSVGSvgViewModule";
+
+  public NativeSvgViewModuleSpec(ReactApplicationContext reactContext) {
+    super(reactContext);
+  }
+
+  @Override
+  public @Nonnull String getName() {
+    return NAME;
+  }
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void toDataURL(@Nullable Double tag, @Nullable ReadableMap options, @Nullable Callback callback);
+}
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/CMakeLists.txt b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/CMakeLists.txt
new file mode 100644
index 0000000..0e77cf9
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/CMakeLists.txt
@@ -0,0 +1,36 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+cmake_minimum_required(VERSION 3.13)
+set(CMAKE_VERBOSE_MAKEFILE on)
+
+file(GLOB react_codegen_SRCS CONFIGURE_DEPENDS *.cpp react/renderer/components/rnsvg/*.cpp)
+
+add_library(
+  react_codegen_rnsvg
+  OBJECT
+  ${react_codegen_SRCS}
+)
+
+target_include_directories(react_codegen_rnsvg PUBLIC . react/renderer/components/rnsvg)
+
+target_link_libraries(
+  react_codegen_rnsvg
+  fbjni
+  jsi
+  # We need to link different libraries based on whether we are building rncore or not, that's necessary
+  # because we want to break a circular dependency between react_codegen_rncore and reactnative
+  reactnative
+)
+
+target_compile_options(
+  react_codegen_rnsvg
+  PRIVATE
+  -DLOG_TAG=\"ReactNative\"
+  -fexceptions
+  -frtti
+  -std=c++20
+  -Wall
+)
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ComponentDescriptors.cpp b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ComponentDescriptors.cpp
new file mode 100644
index 0000000..23bde21
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ComponentDescriptors.cpp
@@ -0,0 +1,23 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorCpp.js
+ */
+
+#include <react/renderer/components/rnsvg/ComponentDescriptors.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+void rnsvg_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry) {
+registry->add(concreteComponentDescriptorProvider<RNSVGSvgViewAndroidComponentDescriptor>());
+registry->add(concreteComponentDescriptorProvider<RNSVGSvgViewComponentDescriptor>());
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ComponentDescriptors.h b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ComponentDescriptors.h
new file mode 100644
index 0000000..6859613
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ComponentDescriptors.h
@@ -0,0 +1,25 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rnsvg/ShadowNodes.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+using RNSVGSvgViewAndroidComponentDescriptor = ConcreteComponentDescriptor<RNSVGSvgViewAndroidShadowNode>;
+using RNSVGSvgViewComponentDescriptor = ConcreteComponentDescriptor<RNSVGSvgViewShadowNode>;
+
+void rnsvg_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry);
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/EventEmitters.cpp b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/EventEmitters.cpp
new file mode 100644
index 0000000..2092c7f
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/EventEmitters.cpp
@@ -0,0 +1,270 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterCpp.js
+ */
+
+#include <react/renderer/components/rnsvg/EventEmitters.h>
+
+
+namespace facebook::react {
+
+
+void RNSVGCircleEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGClipPathEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+
+void RNSVGEllipseEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+
+
+
+
+
+
+
+
+void RNSVGForeignObjectEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGGroupEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGImageEventEmitter::onLoad(OnLoad $event) const {
+  dispatchEvent("load", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto source = jsi::Object(runtime);
+  source.setProperty(runtime, "width", $event.source.width);
+  source.setProperty(runtime, "height", $event.source.height);
+  source.setProperty(runtime, "uri", $event.source.uri);
+  $payload.setProperty(runtime, "source", source);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGImageEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+
+
+void RNSVGLineEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+
+void RNSVGMaskEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGPathEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+
+
+void RNSVGRectEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+
+void RNSVGTextEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGTextPathEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGTSpanEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+
+void RNSVGUseEventEmitter::onSvgLayout(OnSvgLayout $event) const {
+  dispatchEvent("svgLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    {
+  auto layout = jsi::Object(runtime);
+  layout.setProperty(runtime, "x", $event.layout.x);
+  layout.setProperty(runtime, "y", $event.layout.y);
+  layout.setProperty(runtime, "width", $event.layout.width);
+  layout.setProperty(runtime, "height", $event.layout.height);
+  $payload.setProperty(runtime, "layout", layout);
+}
+    return $payload;
+  });
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/EventEmitters.h b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/EventEmitters.h
new file mode 100644
index 0000000..cfc9a00
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/EventEmitters.h
@@ -0,0 +1,364 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewEventEmitter.h>
+
+
+namespace facebook::react {
+class RNSVGSvgViewAndroidEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGCircleEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGClipPathEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGDefsEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGEllipseEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGFeBlendEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFeColorMatrixEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFeCompositeEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFeFloodEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFeGaussianBlurEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFeMergeEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFeOffsetEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGFilterEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGForeignObjectEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGGroupEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGImageEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnLoadSource {
+      Float width;
+    Float height;
+    std::string uri;
+    };
+
+  struct OnLoad {
+      OnLoadSource source;
+    };
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onLoad(OnLoad value) const;
+
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGSvgViewEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGLinearGradientEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGLineEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGMarkerEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGMaskEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGPathEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGPatternEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGRadialGradientEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGRectEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGSymbolEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSVGTextEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGTextPathEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGTSpanEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+class RNSVGUseEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSvgLayoutLayout {
+      int x;
+    int y;
+    int width;
+    int height;
+    };
+
+  struct OnSvgLayout {
+      OnSvgLayoutLayout layout;
+    };
+  void onSvgLayout(OnSvgLayout value) const;
+};
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/Props.cpp b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/Props.cpp
new file mode 100644
index 0000000..836ef81
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/Props.cpp
@@ -0,0 +1,977 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsCpp.js
+ */
+
+#include <react/renderer/components/rnsvg/Props.h>
+#include <folly/dynamic.h>
+#include <react/renderer/components/image/conversions.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+
+namespace facebook::react {
+
+RNSVGSvgViewAndroidProps::RNSVGSvgViewAndroidProps(
+    const PropsParserContext &context,
+    const RNSVGSvgViewAndroidProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    bbWidth(convertRawProp(context, rawProps, "bbWidth", sourceProps.bbWidth, {})),
+    bbHeight(convertRawProp(context, rawProps, "bbHeight", sourceProps.bbHeight, {})),
+    minX(convertRawProp(context, rawProps, "minX", sourceProps.minX, {0.0})),
+    minY(convertRawProp(context, rawProps, "minY", sourceProps.minY, {0.0})),
+    vbWidth(convertRawProp(context, rawProps, "vbWidth", sourceProps.vbWidth, {0.0})),
+    vbHeight(convertRawProp(context, rawProps, "vbHeight", sourceProps.vbHeight, {0.0})),
+    align(convertRawProp(context, rawProps, "align", sourceProps.align, {})),
+    meetOrSlice(convertRawProp(context, rawProps, "meetOrSlice", sourceProps.meetOrSlice, {0})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    hasTVPreferredFocus(convertRawProp(context, rawProps, "hasTVPreferredFocus", sourceProps.hasTVPreferredFocus, {false})),
+    borderBottomColor(convertRawProp(context, rawProps, "borderBottomColor", sourceProps.borderBottomColor, {})),
+    nextFocusDown(convertRawProp(context, rawProps, "nextFocusDown", sourceProps.nextFocusDown, {0})),
+    borderRightColor(convertRawProp(context, rawProps, "borderRightColor", sourceProps.borderRightColor, {})),
+    nextFocusRight(convertRawProp(context, rawProps, "nextFocusRight", sourceProps.nextFocusRight, {0})),
+    borderLeftColor(convertRawProp(context, rawProps, "borderLeftColor", sourceProps.borderLeftColor, {})),
+    borderColor(convertRawProp(context, rawProps, "borderColor", sourceProps.borderColor, {})),
+    removeClippedSubviews(convertRawProp(context, rawProps, "removeClippedSubviews", sourceProps.removeClippedSubviews, {false})),
+    nextFocusForward(convertRawProp(context, rawProps, "nextFocusForward", sourceProps.nextFocusForward, {0})),
+    nextFocusUp(convertRawProp(context, rawProps, "nextFocusUp", sourceProps.nextFocusUp, {0})),
+    accessible(convertRawProp(context, rawProps, "accessible", sourceProps.accessible, {false})),
+    borderStartColor(convertRawProp(context, rawProps, "borderStartColor", sourceProps.borderStartColor, {})),
+    borderEndColor(convertRawProp(context, rawProps, "borderEndColor", sourceProps.borderEndColor, {})),
+    focusable(convertRawProp(context, rawProps, "focusable", sourceProps.focusable, {false})),
+    nativeBackgroundAndroid(convertRawProp(context, rawProps, "nativeBackgroundAndroid", sourceProps.nativeBackgroundAndroid, {})),
+    nativeForegroundAndroid(convertRawProp(context, rawProps, "nativeForegroundAndroid", sourceProps.nativeForegroundAndroid, {})),
+    backfaceVisibility(convertRawProp(context, rawProps, "backfaceVisibility", sourceProps.backfaceVisibility, {})),
+    borderStyle(convertRawProp(context, rawProps, "borderStyle", sourceProps.borderStyle, {})),
+    needsOffscreenAlphaCompositing(convertRawProp(context, rawProps, "needsOffscreenAlphaCompositing", sourceProps.needsOffscreenAlphaCompositing, {false})),
+    hitSlop(convertRawProp(context, rawProps, "hitSlop", sourceProps.hitSlop, {})),
+    borderTopColor(convertRawProp(context, rawProps, "borderTopColor", sourceProps.borderTopColor, {})),
+    nextFocusLeft(convertRawProp(context, rawProps, "nextFocusLeft", sourceProps.nextFocusLeft, {0})),
+    borderBlockColor(convertRawProp(context, rawProps, "borderBlockColor", sourceProps.borderBlockColor, {})),
+    borderBlockEndColor(convertRawProp(context, rawProps, "borderBlockEndColor", sourceProps.borderBlockEndColor, {})),
+    borderBlockStartColor(convertRawProp(context, rawProps, "borderBlockStartColor", sourceProps.borderBlockStartColor, {})),
+    borderRadius(convertRawProp(context, rawProps, "borderRadius", sourceProps.borderRadius, {})),
+    borderTopLeftRadius(convertRawProp(context, rawProps, "borderTopLeftRadius", sourceProps.borderTopLeftRadius, {})),
+    borderTopRightRadius(convertRawProp(context, rawProps, "borderTopRightRadius", sourceProps.borderTopRightRadius, {})),
+    borderBottomRightRadius(convertRawProp(context, rawProps, "borderBottomRightRadius", sourceProps.borderBottomRightRadius, {})),
+    borderBottomLeftRadius(convertRawProp(context, rawProps, "borderBottomLeftRadius", sourceProps.borderBottomLeftRadius, {})),
+    borderTopStartRadius(convertRawProp(context, rawProps, "borderTopStartRadius", sourceProps.borderTopStartRadius, {})),
+    borderTopEndRadius(convertRawProp(context, rawProps, "borderTopEndRadius", sourceProps.borderTopEndRadius, {})),
+    borderBottomStartRadius(convertRawProp(context, rawProps, "borderBottomStartRadius", sourceProps.borderBottomStartRadius, {})),
+    borderBottomEndRadius(convertRawProp(context, rawProps, "borderBottomEndRadius", sourceProps.borderBottomEndRadius, {})),
+    borderEndEndRadius(convertRawProp(context, rawProps, "borderEndEndRadius", sourceProps.borderEndEndRadius, {})),
+    borderEndStartRadius(convertRawProp(context, rawProps, "borderEndStartRadius", sourceProps.borderEndStartRadius, {})),
+    borderStartEndRadius(convertRawProp(context, rawProps, "borderStartEndRadius", sourceProps.borderStartEndRadius, {})),
+    borderStartStartRadius(convertRawProp(context, rawProps, "borderStartStartRadius", sourceProps.borderStartStartRadius, {}))
+      {}
+RNSVGCircleProps::RNSVGCircleProps(
+    const PropsParserContext &context,
+    const RNSVGCircleProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    cx(convertRawProp(context, rawProps, "cx", sourceProps.cx, {})),
+    cy(convertRawProp(context, rawProps, "cy", sourceProps.cy, {})),
+    r(convertRawProp(context, rawProps, "r", sourceProps.r, {}))
+      {}
+RNSVGClipPathProps::RNSVGClipPathProps(
+    const PropsParserContext &context,
+    const RNSVGClipPathProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {}))
+      {}
+RNSVGDefsProps::RNSVGDefsProps(
+    const PropsParserContext &context,
+    const RNSVGDefsProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {}))
+      {}
+RNSVGEllipseProps::RNSVGEllipseProps(
+    const PropsParserContext &context,
+    const RNSVGEllipseProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    cx(convertRawProp(context, rawProps, "cx", sourceProps.cx, {})),
+    cy(convertRawProp(context, rawProps, "cy", sourceProps.cy, {})),
+    rx(convertRawProp(context, rawProps, "rx", sourceProps.rx, {})),
+    ry(convertRawProp(context, rawProps, "ry", sourceProps.ry, {}))
+      {}
+RNSVGFeBlendProps::RNSVGFeBlendProps(
+    const PropsParserContext &context,
+    const RNSVGFeBlendProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    in1(convertRawProp(context, rawProps, "in1", sourceProps.in1, {})),
+    in2(convertRawProp(context, rawProps, "in2", sourceProps.in2, {})),
+    mode(convertRawProp(context, rawProps, "mode", sourceProps.mode, {RNSVGFeBlendMode::Normal}))
+      {}
+RNSVGFeColorMatrixProps::RNSVGFeColorMatrixProps(
+    const PropsParserContext &context,
+    const RNSVGFeColorMatrixProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    in1(convertRawProp(context, rawProps, "in1", sourceProps.in1, {})),
+    type(convertRawProp(context, rawProps, "type", sourceProps.type, {RNSVGFeColorMatrixType::Matrix})),
+    values(convertRawProp(context, rawProps, "values", sourceProps.values, {}))
+      {}
+RNSVGFeCompositeProps::RNSVGFeCompositeProps(
+    const PropsParserContext &context,
+    const RNSVGFeCompositeProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    in1(convertRawProp(context, rawProps, "in1", sourceProps.in1, {})),
+    in2(convertRawProp(context, rawProps, "in2", sourceProps.in2, {})),
+    operator1(convertRawProp(context, rawProps, "operator1", sourceProps.operator1, {RNSVGFeCompositeOperator1::Over})),
+    k1(convertRawProp(context, rawProps, "k1", sourceProps.k1, {0.0})),
+    k2(convertRawProp(context, rawProps, "k2", sourceProps.k2, {0.0})),
+    k3(convertRawProp(context, rawProps, "k3", sourceProps.k3, {0.0})),
+    k4(convertRawProp(context, rawProps, "k4", sourceProps.k4, {0.0}))
+      {}
+RNSVGFeFloodProps::RNSVGFeFloodProps(
+    const PropsParserContext &context,
+    const RNSVGFeFloodProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    floodColor(convertRawProp(context, rawProps, "floodColor", sourceProps.floodColor, {})),
+    floodOpacity(convertRawProp(context, rawProps, "floodOpacity", sourceProps.floodOpacity, {1.0}))
+      {}
+RNSVGFeGaussianBlurProps::RNSVGFeGaussianBlurProps(
+    const PropsParserContext &context,
+    const RNSVGFeGaussianBlurProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    in1(convertRawProp(context, rawProps, "in1", sourceProps.in1, {})),
+    stdDeviationX(convertRawProp(context, rawProps, "stdDeviationX", sourceProps.stdDeviationX, {0.0})),
+    stdDeviationY(convertRawProp(context, rawProps, "stdDeviationY", sourceProps.stdDeviationY, {0.0})),
+    edgeMode(convertRawProp(context, rawProps, "edgeMode", sourceProps.edgeMode, {RNSVGFeGaussianBlurEdgeMode::None}))
+      {}
+RNSVGFeMergeProps::RNSVGFeMergeProps(
+    const PropsParserContext &context,
+    const RNSVGFeMergeProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    nodes(convertRawProp(context, rawProps, "nodes", sourceProps.nodes, {}))
+      {}
+RNSVGFeOffsetProps::RNSVGFeOffsetProps(
+    const PropsParserContext &context,
+    const RNSVGFeOffsetProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    result(convertRawProp(context, rawProps, "result", sourceProps.result, {})),
+    in1(convertRawProp(context, rawProps, "in1", sourceProps.in1, {})),
+    dx(convertRawProp(context, rawProps, "dx", sourceProps.dx, {})),
+    dy(convertRawProp(context, rawProps, "dy", sourceProps.dy, {}))
+      {}
+RNSVGFilterProps::RNSVGFilterProps(
+    const PropsParserContext &context,
+    const RNSVGFilterProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    filterUnits(convertRawProp(context, rawProps, "filterUnits", sourceProps.filterUnits, {RNSVGFilterFilterUnits::ObjectBoundingBox})),
+    primitiveUnits(convertRawProp(context, rawProps, "primitiveUnits", sourceProps.primitiveUnits, {RNSVGFilterPrimitiveUnits::UserSpaceOnUse}))
+      {}
+RNSVGForeignObjectProps::RNSVGForeignObjectProps(
+    const PropsParserContext &context,
+    const RNSVGForeignObjectProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {}))
+      {}
+RNSVGGroupProps::RNSVGGroupProps(
+    const PropsParserContext &context,
+    const RNSVGGroupProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {}))
+      {}
+RNSVGImageProps::RNSVGImageProps(
+    const PropsParserContext &context,
+    const RNSVGImageProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    src(convertRawProp(context, rawProps, "src", sourceProps.src, {})),
+    align(convertRawProp(context, rawProps, "align", sourceProps.align, {})),
+    meetOrSlice(convertRawProp(context, rawProps, "meetOrSlice", sourceProps.meetOrSlice, {0}))
+      {}
+RNSVGSvgViewProps::RNSVGSvgViewProps(
+    const PropsParserContext &context,
+    const RNSVGSvgViewProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    bbWidth(convertRawProp(context, rawProps, "bbWidth", sourceProps.bbWidth, {})),
+    bbHeight(convertRawProp(context, rawProps, "bbHeight", sourceProps.bbHeight, {})),
+    minX(convertRawProp(context, rawProps, "minX", sourceProps.minX, {0.0})),
+    minY(convertRawProp(context, rawProps, "minY", sourceProps.minY, {0.0})),
+    vbWidth(convertRawProp(context, rawProps, "vbWidth", sourceProps.vbWidth, {0.0})),
+    vbHeight(convertRawProp(context, rawProps, "vbHeight", sourceProps.vbHeight, {0.0})),
+    align(convertRawProp(context, rawProps, "align", sourceProps.align, {})),
+    meetOrSlice(convertRawProp(context, rawProps, "meetOrSlice", sourceProps.meetOrSlice, {0})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    hitSlop(convertRawProp(context, rawProps, "hitSlop", sourceProps.hitSlop, {}))
+      {}
+RNSVGLinearGradientProps::RNSVGLinearGradientProps(
+    const PropsParserContext &context,
+    const RNSVGLinearGradientProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    x1(convertRawProp(context, rawProps, "x1", sourceProps.x1, {})),
+    y1(convertRawProp(context, rawProps, "y1", sourceProps.y1, {})),
+    x2(convertRawProp(context, rawProps, "x2", sourceProps.x2, {})),
+    y2(convertRawProp(context, rawProps, "y2", sourceProps.y2, {})),
+    gradient(convertRawProp(context, rawProps, "gradient", sourceProps.gradient, {})),
+    gradientUnits(convertRawProp(context, rawProps, "gradientUnits", sourceProps.gradientUnits, {0})),
+    gradientTransform(convertRawProp(context, rawProps, "gradientTransform", sourceProps.gradientTransform, {}))
+      {}
+RNSVGLineProps::RNSVGLineProps(
+    const PropsParserContext &context,
+    const RNSVGLineProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    x1(convertRawProp(context, rawProps, "x1", sourceProps.x1, {})),
+    y1(convertRawProp(context, rawProps, "y1", sourceProps.y1, {})),
+    x2(convertRawProp(context, rawProps, "x2", sourceProps.x2, {})),
+    y2(convertRawProp(context, rawProps, "y2", sourceProps.y2, {}))
+      {}
+RNSVGMarkerProps::RNSVGMarkerProps(
+    const PropsParserContext &context,
+    const RNSVGMarkerProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    refX(convertRawProp(context, rawProps, "refX", sourceProps.refX, {})),
+    refY(convertRawProp(context, rawProps, "refY", sourceProps.refY, {})),
+    markerHeight(convertRawProp(context, rawProps, "markerHeight", sourceProps.markerHeight, {})),
+    markerWidth(convertRawProp(context, rawProps, "markerWidth", sourceProps.markerWidth, {})),
+    markerUnits(convertRawProp(context, rawProps, "markerUnits", sourceProps.markerUnits, {})),
+    orient(convertRawProp(context, rawProps, "orient", sourceProps.orient, {})),
+    minX(convertRawProp(context, rawProps, "minX", sourceProps.minX, {0.0})),
+    minY(convertRawProp(context, rawProps, "minY", sourceProps.minY, {0.0})),
+    vbWidth(convertRawProp(context, rawProps, "vbWidth", sourceProps.vbWidth, {0.0})),
+    vbHeight(convertRawProp(context, rawProps, "vbHeight", sourceProps.vbHeight, {0.0})),
+    align(convertRawProp(context, rawProps, "align", sourceProps.align, {})),
+    meetOrSlice(convertRawProp(context, rawProps, "meetOrSlice", sourceProps.meetOrSlice, {0}))
+      {}
+RNSVGMaskProps::RNSVGMaskProps(
+    const PropsParserContext &context,
+    const RNSVGMaskProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    maskUnits(convertRawProp(context, rawProps, "maskUnits", sourceProps.maskUnits, {0})),
+    maskContentUnits(convertRawProp(context, rawProps, "maskContentUnits", sourceProps.maskContentUnits, {0})),
+    maskType(convertRawProp(context, rawProps, "maskType", sourceProps.maskType, {0}))
+      {}
+RNSVGPathProps::RNSVGPathProps(
+    const PropsParserContext &context,
+    const RNSVGPathProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    d(convertRawProp(context, rawProps, "d", sourceProps.d, {}))
+      {}
+RNSVGPatternProps::RNSVGPatternProps(
+    const PropsParserContext &context,
+    const RNSVGPatternProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    patternUnits(convertRawProp(context, rawProps, "patternUnits", sourceProps.patternUnits, {0})),
+    patternContentUnits(convertRawProp(context, rawProps, "patternContentUnits", sourceProps.patternContentUnits, {0})),
+    patternTransform(convertRawProp(context, rawProps, "patternTransform", sourceProps.patternTransform, {})),
+    minX(convertRawProp(context, rawProps, "minX", sourceProps.minX, {0.0})),
+    minY(convertRawProp(context, rawProps, "minY", sourceProps.minY, {0.0})),
+    vbWidth(convertRawProp(context, rawProps, "vbWidth", sourceProps.vbWidth, {0.0})),
+    vbHeight(convertRawProp(context, rawProps, "vbHeight", sourceProps.vbHeight, {0.0})),
+    align(convertRawProp(context, rawProps, "align", sourceProps.align, {})),
+    meetOrSlice(convertRawProp(context, rawProps, "meetOrSlice", sourceProps.meetOrSlice, {0}))
+      {}
+RNSVGRadialGradientProps::RNSVGRadialGradientProps(
+    const PropsParserContext &context,
+    const RNSVGRadialGradientProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    fx(convertRawProp(context, rawProps, "fx", sourceProps.fx, {})),
+    fy(convertRawProp(context, rawProps, "fy", sourceProps.fy, {})),
+    cx(convertRawProp(context, rawProps, "cx", sourceProps.cx, {})),
+    cy(convertRawProp(context, rawProps, "cy", sourceProps.cy, {})),
+    rx(convertRawProp(context, rawProps, "rx", sourceProps.rx, {})),
+    ry(convertRawProp(context, rawProps, "ry", sourceProps.ry, {})),
+    gradient(convertRawProp(context, rawProps, "gradient", sourceProps.gradient, {})),
+    gradientUnits(convertRawProp(context, rawProps, "gradientUnits", sourceProps.gradientUnits, {0})),
+    gradientTransform(convertRawProp(context, rawProps, "gradientTransform", sourceProps.gradientTransform, {}))
+      {}
+RNSVGRectProps::RNSVGRectProps(
+    const PropsParserContext &context,
+    const RNSVGRectProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {})),
+    rx(convertRawProp(context, rawProps, "rx", sourceProps.rx, {})),
+    ry(convertRawProp(context, rawProps, "ry", sourceProps.ry, {}))
+      {}
+RNSVGSymbolProps::RNSVGSymbolProps(
+    const PropsParserContext &context,
+    const RNSVGSymbolProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    minX(convertRawProp(context, rawProps, "minX", sourceProps.minX, {0.0})),
+    minY(convertRawProp(context, rawProps, "minY", sourceProps.minY, {0.0})),
+    vbWidth(convertRawProp(context, rawProps, "vbWidth", sourceProps.vbWidth, {0.0})),
+    vbHeight(convertRawProp(context, rawProps, "vbHeight", sourceProps.vbHeight, {0.0})),
+    align(convertRawProp(context, rawProps, "align", sourceProps.align, {})),
+    meetOrSlice(convertRawProp(context, rawProps, "meetOrSlice", sourceProps.meetOrSlice, {0}))
+      {}
+RNSVGTextProps::RNSVGTextProps(
+    const PropsParserContext &context,
+    const RNSVGTextProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    dx(convertRawProp(context, rawProps, "dx", sourceProps.dx, {})),
+    dy(convertRawProp(context, rawProps, "dy", sourceProps.dy, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    rotate(convertRawProp(context, rawProps, "rotate", sourceProps.rotate, {})),
+    inlineSize(convertRawProp(context, rawProps, "inlineSize", sourceProps.inlineSize, {})),
+    textLength(convertRawProp(context, rawProps, "textLength", sourceProps.textLength, {})),
+    baselineShift(convertRawProp(context, rawProps, "baselineShift", sourceProps.baselineShift, {})),
+    lengthAdjust(convertRawProp(context, rawProps, "lengthAdjust", sourceProps.lengthAdjust, {})),
+    alignmentBaseline(convertRawProp(context, rawProps, "alignmentBaseline", sourceProps.alignmentBaseline, {})),
+    verticalAlign(convertRawProp(context, rawProps, "verticalAlign", sourceProps.verticalAlign, {}))
+      {}
+RNSVGTextPathProps::RNSVGTextPathProps(
+    const PropsParserContext &context,
+    const RNSVGTextPathProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    dx(convertRawProp(context, rawProps, "dx", sourceProps.dx, {})),
+    dy(convertRawProp(context, rawProps, "dy", sourceProps.dy, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    rotate(convertRawProp(context, rawProps, "rotate", sourceProps.rotate, {})),
+    inlineSize(convertRawProp(context, rawProps, "inlineSize", sourceProps.inlineSize, {})),
+    textLength(convertRawProp(context, rawProps, "textLength", sourceProps.textLength, {})),
+    baselineShift(convertRawProp(context, rawProps, "baselineShift", sourceProps.baselineShift, {})),
+    lengthAdjust(convertRawProp(context, rawProps, "lengthAdjust", sourceProps.lengthAdjust, {})),
+    alignmentBaseline(convertRawProp(context, rawProps, "alignmentBaseline", sourceProps.alignmentBaseline, {})),
+    verticalAlign(convertRawProp(context, rawProps, "verticalAlign", sourceProps.verticalAlign, {})),
+    href(convertRawProp(context, rawProps, "href", sourceProps.href, {})),
+    side(convertRawProp(context, rawProps, "side", sourceProps.side, {})),
+    method(convertRawProp(context, rawProps, "method", sourceProps.method, {})),
+    midLine(convertRawProp(context, rawProps, "midLine", sourceProps.midLine, {})),
+    spacing(convertRawProp(context, rawProps, "spacing", sourceProps.spacing, {})),
+    startOffset(convertRawProp(context, rawProps, "startOffset", sourceProps.startOffset, {}))
+      {}
+RNSVGTSpanProps::RNSVGTSpanProps(
+    const PropsParserContext &context,
+    const RNSVGTSpanProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    fontSize(convertRawProp(context, rawProps, "fontSize", sourceProps.fontSize, {})),
+    fontWeight(convertRawProp(context, rawProps, "fontWeight", sourceProps.fontWeight, {})),
+    font(convertRawProp(context, rawProps, "font", sourceProps.font, {})),
+    dx(convertRawProp(context, rawProps, "dx", sourceProps.dx, {})),
+    dy(convertRawProp(context, rawProps, "dy", sourceProps.dy, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    rotate(convertRawProp(context, rawProps, "rotate", sourceProps.rotate, {})),
+    inlineSize(convertRawProp(context, rawProps, "inlineSize", sourceProps.inlineSize, {})),
+    textLength(convertRawProp(context, rawProps, "textLength", sourceProps.textLength, {})),
+    baselineShift(convertRawProp(context, rawProps, "baselineShift", sourceProps.baselineShift, {})),
+    lengthAdjust(convertRawProp(context, rawProps, "lengthAdjust", sourceProps.lengthAdjust, {})),
+    alignmentBaseline(convertRawProp(context, rawProps, "alignmentBaseline", sourceProps.alignmentBaseline, {})),
+    verticalAlign(convertRawProp(context, rawProps, "verticalAlign", sourceProps.verticalAlign, {})),
+    content(convertRawProp(context, rawProps, "content", sourceProps.content, {}))
+      {}
+RNSVGUseProps::RNSVGUseProps(
+    const PropsParserContext &context,
+    const RNSVGUseProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    name(convertRawProp(context, rawProps, "name", sourceProps.name, {})),
+    opacity(convertRawProp(context, rawProps, "opacity", sourceProps.opacity, {1.0})),
+    matrix(convertRawProp(context, rawProps, "matrix", sourceProps.matrix, {})),
+    mask(convertRawProp(context, rawProps, "mask", sourceProps.mask, {})),
+    markerStart(convertRawProp(context, rawProps, "markerStart", sourceProps.markerStart, {})),
+    markerMid(convertRawProp(context, rawProps, "markerMid", sourceProps.markerMid, {})),
+    markerEnd(convertRawProp(context, rawProps, "markerEnd", sourceProps.markerEnd, {})),
+    clipPath(convertRawProp(context, rawProps, "clipPath", sourceProps.clipPath, {})),
+    clipRule(convertRawProp(context, rawProps, "clipRule", sourceProps.clipRule, {0})),
+    responsible(convertRawProp(context, rawProps, "responsible", sourceProps.responsible, {false})),
+    display(convertRawProp(context, rawProps, "display", sourceProps.display, {})),
+    pointerEvents(convertRawProp(context, rawProps, "pointerEvents", sourceProps.pointerEvents, {})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    fill(convertRawProp(context, rawProps, "fill", sourceProps.fill, {})),
+    fillOpacity(convertRawProp(context, rawProps, "fillOpacity", sourceProps.fillOpacity, {1.0})),
+    fillRule(convertRawProp(context, rawProps, "fillRule", sourceProps.fillRule, {1})),
+    stroke(convertRawProp(context, rawProps, "stroke", sourceProps.stroke, {})),
+    strokeOpacity(convertRawProp(context, rawProps, "strokeOpacity", sourceProps.strokeOpacity, {1.0})),
+    strokeWidth(convertRawProp(context, rawProps, "strokeWidth", sourceProps.strokeWidth, {})),
+    strokeLinecap(convertRawProp(context, rawProps, "strokeLinecap", sourceProps.strokeLinecap, {0})),
+    strokeLinejoin(convertRawProp(context, rawProps, "strokeLinejoin", sourceProps.strokeLinejoin, {0})),
+    strokeDasharray(convertRawProp(context, rawProps, "strokeDasharray", sourceProps.strokeDasharray, {})),
+    strokeDashoffset(convertRawProp(context, rawProps, "strokeDashoffset", sourceProps.strokeDashoffset, {0.0})),
+    strokeMiterlimit(convertRawProp(context, rawProps, "strokeMiterlimit", sourceProps.strokeMiterlimit, {0.0})),
+    vectorEffect(convertRawProp(context, rawProps, "vectorEffect", sourceProps.vectorEffect, {0})),
+    propList(convertRawProp(context, rawProps, "propList", sourceProps.propList, {})),
+    filter(convertRawProp(context, rawProps, "filter", sourceProps.filter, {})),
+    href(convertRawProp(context, rawProps, "href", sourceProps.href, {})),
+    x(convertRawProp(context, rawProps, "x", sourceProps.x, {})),
+    y(convertRawProp(context, rawProps, "y", sourceProps.y, {})),
+    height(convertRawProp(context, rawProps, "height", sourceProps.height, {})),
+    width(convertRawProp(context, rawProps, "width", sourceProps.width, {}))
+      {}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/Props.h b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/Props.h
new file mode 100644
index 0000000..8882122
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/Props.h
@@ -0,0 +1,1248 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewProps.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+#include <react/renderer/graphics/Color.h>
+#include <react/renderer/imagemanager/primitives.h>
+#include <vector>
+
+namespace facebook::react {
+
+struct RNSVGSvgViewAndroidNativeBackgroundAndroidStruct {
+  std::string type{};
+  Float color{0.0};
+  bool borderless{false};
+  Float rippleRadius{0.0};
+};
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGSvgViewAndroidNativeBackgroundAndroidStruct &result) {
+  auto map = (std::unordered_map<std::string, RawValue>)value;
+
+  auto tmp_type = map.find("type");
+  if (tmp_type != map.end()) {
+    fromRawValue(context, tmp_type->second, result.type);
+  }
+  auto tmp_color = map.find("color");
+  if (tmp_color != map.end()) {
+    fromRawValue(context, tmp_color->second, result.color);
+  }
+  auto tmp_borderless = map.find("borderless");
+  if (tmp_borderless != map.end()) {
+    fromRawValue(context, tmp_borderless->second, result.borderless);
+  }
+  auto tmp_rippleRadius = map.find("rippleRadius");
+  if (tmp_rippleRadius != map.end()) {
+    fromRawValue(context, tmp_rippleRadius->second, result.rippleRadius);
+  }
+}
+
+static inline std::string toString(const RNSVGSvgViewAndroidNativeBackgroundAndroidStruct &value) {
+  return "[Object RNSVGSvgViewAndroidNativeBackgroundAndroidStruct]";
+}
+
+struct RNSVGSvgViewAndroidNativeForegroundAndroidStruct {
+  std::string type{};
+  Float color{0.0};
+  bool borderless{false};
+  Float rippleRadius{0.0};
+};
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGSvgViewAndroidNativeForegroundAndroidStruct &result) {
+  auto map = (std::unordered_map<std::string, RawValue>)value;
+
+  auto tmp_type = map.find("type");
+  if (tmp_type != map.end()) {
+    fromRawValue(context, tmp_type->second, result.type);
+  }
+  auto tmp_color = map.find("color");
+  if (tmp_color != map.end()) {
+    fromRawValue(context, tmp_color->second, result.color);
+  }
+  auto tmp_borderless = map.find("borderless");
+  if (tmp_borderless != map.end()) {
+    fromRawValue(context, tmp_borderless->second, result.borderless);
+  }
+  auto tmp_rippleRadius = map.find("rippleRadius");
+  if (tmp_rippleRadius != map.end()) {
+    fromRawValue(context, tmp_rippleRadius->second, result.rippleRadius);
+  }
+}
+
+static inline std::string toString(const RNSVGSvgViewAndroidNativeForegroundAndroidStruct &value) {
+  return "[Object RNSVGSvgViewAndroidNativeForegroundAndroidStruct]";
+}
+class RNSVGSvgViewAndroidProps final : public ViewProps {
+ public:
+  RNSVGSvgViewAndroidProps() = default;
+  RNSVGSvgViewAndroidProps(const PropsParserContext& context, const RNSVGSvgViewAndroidProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic bbWidth{};
+  folly::dynamic bbHeight{};
+  Float minX{0.0};
+  Float minY{0.0};
+  Float vbWidth{0.0};
+  Float vbHeight{0.0};
+  std::string align{};
+  int meetOrSlice{0};
+  SharedColor color{};
+  std::string pointerEvents{};
+  bool hasTVPreferredFocus{false};
+  SharedColor borderBottomColor{};
+  int nextFocusDown{0};
+  SharedColor borderRightColor{};
+  int nextFocusRight{0};
+  SharedColor borderLeftColor{};
+  SharedColor borderColor{};
+  bool removeClippedSubviews{false};
+  int nextFocusForward{0};
+  int nextFocusUp{0};
+  bool accessible{false};
+  SharedColor borderStartColor{};
+  SharedColor borderEndColor{};
+  bool focusable{false};
+  RNSVGSvgViewAndroidNativeBackgroundAndroidStruct nativeBackgroundAndroid{};
+  RNSVGSvgViewAndroidNativeForegroundAndroidStruct nativeForegroundAndroid{};
+  std::string backfaceVisibility{};
+  std::string borderStyle{};
+  bool needsOffscreenAlphaCompositing{false};
+  folly::dynamic hitSlop{};
+  SharedColor borderTopColor{};
+  int nextFocusLeft{0};
+  SharedColor borderBlockColor{};
+  SharedColor borderBlockEndColor{};
+  SharedColor borderBlockStartColor{};
+  folly::dynamic borderRadius{};
+  folly::dynamic borderTopLeftRadius{};
+  folly::dynamic borderTopRightRadius{};
+  folly::dynamic borderBottomRightRadius{};
+  folly::dynamic borderBottomLeftRadius{};
+  folly::dynamic borderTopStartRadius{};
+  folly::dynamic borderTopEndRadius{};
+  folly::dynamic borderBottomStartRadius{};
+  folly::dynamic borderBottomEndRadius{};
+  folly::dynamic borderEndEndRadius{};
+  folly::dynamic borderEndStartRadius{};
+  folly::dynamic borderStartEndRadius{};
+  folly::dynamic borderStartStartRadius{};
+};
+
+class RNSVGCircleProps final : public ViewProps {
+ public:
+  RNSVGCircleProps() = default;
+  RNSVGCircleProps(const PropsParserContext& context, const RNSVGCircleProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic cx{};
+  folly::dynamic cy{};
+  folly::dynamic r{};
+};
+
+class RNSVGClipPathProps final : public ViewProps {
+ public:
+  RNSVGClipPathProps() = default;
+  RNSVGClipPathProps(const PropsParserContext& context, const RNSVGClipPathProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+};
+
+class RNSVGDefsProps final : public ViewProps {
+ public:
+  RNSVGDefsProps() = default;
+  RNSVGDefsProps(const PropsParserContext& context, const RNSVGDefsProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+};
+
+class RNSVGEllipseProps final : public ViewProps {
+ public:
+  RNSVGEllipseProps() = default;
+  RNSVGEllipseProps(const PropsParserContext& context, const RNSVGEllipseProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic cx{};
+  folly::dynamic cy{};
+  folly::dynamic rx{};
+  folly::dynamic ry{};
+};
+
+enum class RNSVGFeBlendMode { Unknown, Normal, Multiply, Screen, Darken, Lighten };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGFeBlendMode &result) {
+  auto string = (std::string)value;
+  if (string == "unknown") { result = RNSVGFeBlendMode::Unknown; return; }
+  if (string == "normal") { result = RNSVGFeBlendMode::Normal; return; }
+  if (string == "multiply") { result = RNSVGFeBlendMode::Multiply; return; }
+  if (string == "screen") { result = RNSVGFeBlendMode::Screen; return; }
+  if (string == "darken") { result = RNSVGFeBlendMode::Darken; return; }
+  if (string == "lighten") { result = RNSVGFeBlendMode::Lighten; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSVGFeBlendMode &value) {
+  switch (value) {
+    case RNSVGFeBlendMode::Unknown: return "unknown";
+    case RNSVGFeBlendMode::Normal: return "normal";
+    case RNSVGFeBlendMode::Multiply: return "multiply";
+    case RNSVGFeBlendMode::Screen: return "screen";
+    case RNSVGFeBlendMode::Darken: return "darken";
+    case RNSVGFeBlendMode::Lighten: return "lighten";
+  }
+}
+
+class RNSVGFeBlendProps final : public ViewProps {
+ public:
+  RNSVGFeBlendProps() = default;
+  RNSVGFeBlendProps(const PropsParserContext& context, const RNSVGFeBlendProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  std::string in1{};
+  std::string in2{};
+  RNSVGFeBlendMode mode{RNSVGFeBlendMode::Normal};
+};
+
+enum class RNSVGFeColorMatrixType { Matrix, Saturate, HueRotate, LuminanceToAlpha };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGFeColorMatrixType &result) {
+  auto string = (std::string)value;
+  if (string == "matrix") { result = RNSVGFeColorMatrixType::Matrix; return; }
+  if (string == "saturate") { result = RNSVGFeColorMatrixType::Saturate; return; }
+  if (string == "hueRotate") { result = RNSVGFeColorMatrixType::HueRotate; return; }
+  if (string == "luminanceToAlpha") { result = RNSVGFeColorMatrixType::LuminanceToAlpha; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSVGFeColorMatrixType &value) {
+  switch (value) {
+    case RNSVGFeColorMatrixType::Matrix: return "matrix";
+    case RNSVGFeColorMatrixType::Saturate: return "saturate";
+    case RNSVGFeColorMatrixType::HueRotate: return "hueRotate";
+    case RNSVGFeColorMatrixType::LuminanceToAlpha: return "luminanceToAlpha";
+  }
+}
+
+class RNSVGFeColorMatrixProps final : public ViewProps {
+ public:
+  RNSVGFeColorMatrixProps() = default;
+  RNSVGFeColorMatrixProps(const PropsParserContext& context, const RNSVGFeColorMatrixProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  std::string in1{};
+  RNSVGFeColorMatrixType type{RNSVGFeColorMatrixType::Matrix};
+  std::vector<Float> values{};
+};
+
+enum class RNSVGFeCompositeOperator1 { Over, In, Out, Atop, Xor, Arithmetic };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGFeCompositeOperator1 &result) {
+  auto string = (std::string)value;
+  if (string == "over") { result = RNSVGFeCompositeOperator1::Over; return; }
+  if (string == "in") { result = RNSVGFeCompositeOperator1::In; return; }
+  if (string == "out") { result = RNSVGFeCompositeOperator1::Out; return; }
+  if (string == "atop") { result = RNSVGFeCompositeOperator1::Atop; return; }
+  if (string == "xor") { result = RNSVGFeCompositeOperator1::Xor; return; }
+  if (string == "arithmetic") { result = RNSVGFeCompositeOperator1::Arithmetic; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSVGFeCompositeOperator1 &value) {
+  switch (value) {
+    case RNSVGFeCompositeOperator1::Over: return "over";
+    case RNSVGFeCompositeOperator1::In: return "in";
+    case RNSVGFeCompositeOperator1::Out: return "out";
+    case RNSVGFeCompositeOperator1::Atop: return "atop";
+    case RNSVGFeCompositeOperator1::Xor: return "xor";
+    case RNSVGFeCompositeOperator1::Arithmetic: return "arithmetic";
+  }
+}
+
+class RNSVGFeCompositeProps final : public ViewProps {
+ public:
+  RNSVGFeCompositeProps() = default;
+  RNSVGFeCompositeProps(const PropsParserContext& context, const RNSVGFeCompositeProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  std::string in1{};
+  std::string in2{};
+  RNSVGFeCompositeOperator1 operator1{RNSVGFeCompositeOperator1::Over};
+  Float k1{0.0};
+  Float k2{0.0};
+  Float k3{0.0};
+  Float k4{0.0};
+};
+
+class RNSVGFeFloodProps final : public ViewProps {
+ public:
+  RNSVGFeFloodProps() = default;
+  RNSVGFeFloodProps(const PropsParserContext& context, const RNSVGFeFloodProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  folly::dynamic floodColor{};
+  Float floodOpacity{1.0};
+};
+
+enum class RNSVGFeGaussianBlurEdgeMode { Duplicate, Wrap, None };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGFeGaussianBlurEdgeMode &result) {
+  auto string = (std::string)value;
+  if (string == "duplicate") { result = RNSVGFeGaussianBlurEdgeMode::Duplicate; return; }
+  if (string == "wrap") { result = RNSVGFeGaussianBlurEdgeMode::Wrap; return; }
+  if (string == "none") { result = RNSVGFeGaussianBlurEdgeMode::None; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSVGFeGaussianBlurEdgeMode &value) {
+  switch (value) {
+    case RNSVGFeGaussianBlurEdgeMode::Duplicate: return "duplicate";
+    case RNSVGFeGaussianBlurEdgeMode::Wrap: return "wrap";
+    case RNSVGFeGaussianBlurEdgeMode::None: return "none";
+  }
+}
+
+class RNSVGFeGaussianBlurProps final : public ViewProps {
+ public:
+  RNSVGFeGaussianBlurProps() = default;
+  RNSVGFeGaussianBlurProps(const PropsParserContext& context, const RNSVGFeGaussianBlurProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  std::string in1{};
+  Float stdDeviationX{0.0};
+  Float stdDeviationY{0.0};
+  RNSVGFeGaussianBlurEdgeMode edgeMode{RNSVGFeGaussianBlurEdgeMode::None};
+};
+
+class RNSVGFeMergeProps final : public ViewProps {
+ public:
+  RNSVGFeMergeProps() = default;
+  RNSVGFeMergeProps(const PropsParserContext& context, const RNSVGFeMergeProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  std::vector<std::string> nodes{};
+};
+
+class RNSVGFeOffsetProps final : public ViewProps {
+ public:
+  RNSVGFeOffsetProps() = default;
+  RNSVGFeOffsetProps(const PropsParserContext& context, const RNSVGFeOffsetProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  std::string result{};
+  std::string in1{};
+  folly::dynamic dx{};
+  folly::dynamic dy{};
+};
+
+enum class RNSVGFilterFilterUnits { UserSpaceOnUse, ObjectBoundingBox };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGFilterFilterUnits &result) {
+  auto string = (std::string)value;
+  if (string == "userSpaceOnUse") { result = RNSVGFilterFilterUnits::UserSpaceOnUse; return; }
+  if (string == "objectBoundingBox") { result = RNSVGFilterFilterUnits::ObjectBoundingBox; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSVGFilterFilterUnits &value) {
+  switch (value) {
+    case RNSVGFilterFilterUnits::UserSpaceOnUse: return "userSpaceOnUse";
+    case RNSVGFilterFilterUnits::ObjectBoundingBox: return "objectBoundingBox";
+  }
+}
+enum class RNSVGFilterPrimitiveUnits { UserSpaceOnUse, ObjectBoundingBox };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSVGFilterPrimitiveUnits &result) {
+  auto string = (std::string)value;
+  if (string == "userSpaceOnUse") { result = RNSVGFilterPrimitiveUnits::UserSpaceOnUse; return; }
+  if (string == "objectBoundingBox") { result = RNSVGFilterPrimitiveUnits::ObjectBoundingBox; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSVGFilterPrimitiveUnits &value) {
+  switch (value) {
+    case RNSVGFilterPrimitiveUnits::UserSpaceOnUse: return "userSpaceOnUse";
+    case RNSVGFilterPrimitiveUnits::ObjectBoundingBox: return "objectBoundingBox";
+  }
+}
+
+class RNSVGFilterProps final : public ViewProps {
+ public:
+  RNSVGFilterProps() = default;
+  RNSVGFilterProps(const PropsParserContext& context, const RNSVGFilterProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic height{};
+  folly::dynamic width{};
+  RNSVGFilterFilterUnits filterUnits{RNSVGFilterFilterUnits::ObjectBoundingBox};
+  RNSVGFilterPrimitiveUnits primitiveUnits{RNSVGFilterPrimitiveUnits::UserSpaceOnUse};
+};
+
+class RNSVGForeignObjectProps final : public ViewProps {
+ public:
+  RNSVGForeignObjectProps() = default;
+  RNSVGForeignObjectProps(const PropsParserContext& context, const RNSVGForeignObjectProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic height{};
+  folly::dynamic width{};
+};
+
+class RNSVGGroupProps final : public ViewProps {
+ public:
+  RNSVGGroupProps() = default;
+  RNSVGGroupProps(const PropsParserContext& context, const RNSVGGroupProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+};
+
+class RNSVGImageProps final : public ViewProps {
+ public:
+  RNSVGImageProps() = default;
+  RNSVGImageProps(const PropsParserContext& context, const RNSVGImageProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic width{};
+  folly::dynamic height{};
+  ImageSource src{};
+  std::string align{};
+  int meetOrSlice{0};
+};
+
+class RNSVGSvgViewProps final : public ViewProps {
+ public:
+  RNSVGSvgViewProps() = default;
+  RNSVGSvgViewProps(const PropsParserContext& context, const RNSVGSvgViewProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  folly::dynamic bbWidth{};
+  folly::dynamic bbHeight{};
+  Float minX{0.0};
+  Float minY{0.0};
+  Float vbWidth{0.0};
+  Float vbHeight{0.0};
+  std::string align{};
+  int meetOrSlice{0};
+  SharedColor color{};
+  std::string pointerEvents{};
+  folly::dynamic hitSlop{};
+};
+
+class RNSVGLinearGradientProps final : public ViewProps {
+ public:
+  RNSVGLinearGradientProps() = default;
+  RNSVGLinearGradientProps(const PropsParserContext& context, const RNSVGLinearGradientProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  folly::dynamic x1{};
+  folly::dynamic y1{};
+  folly::dynamic x2{};
+  folly::dynamic y2{};
+  std::vector<Float> gradient{};
+  int gradientUnits{0};
+  std::vector<Float> gradientTransform{};
+};
+
+class RNSVGLineProps final : public ViewProps {
+ public:
+  RNSVGLineProps() = default;
+  RNSVGLineProps(const PropsParserContext& context, const RNSVGLineProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic x1{};
+  folly::dynamic y1{};
+  folly::dynamic x2{};
+  folly::dynamic y2{};
+};
+
+class RNSVGMarkerProps final : public ViewProps {
+ public:
+  RNSVGMarkerProps() = default;
+  RNSVGMarkerProps(const PropsParserContext& context, const RNSVGMarkerProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic refX{};
+  folly::dynamic refY{};
+  folly::dynamic markerHeight{};
+  folly::dynamic markerWidth{};
+  std::string markerUnits{};
+  std::string orient{};
+  Float minX{0.0};
+  Float minY{0.0};
+  Float vbWidth{0.0};
+  Float vbHeight{0.0};
+  std::string align{};
+  int meetOrSlice{0};
+};
+
+class RNSVGMaskProps final : public ViewProps {
+ public:
+  RNSVGMaskProps() = default;
+  RNSVGMaskProps(const PropsParserContext& context, const RNSVGMaskProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic height{};
+  folly::dynamic width{};
+  int maskUnits{0};
+  int maskContentUnits{0};
+  int maskType{0};
+};
+
+class RNSVGPathProps final : public ViewProps {
+ public:
+  RNSVGPathProps() = default;
+  RNSVGPathProps(const PropsParserContext& context, const RNSVGPathProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  std::string d{};
+};
+
+class RNSVGPatternProps final : public ViewProps {
+ public:
+  RNSVGPatternProps() = default;
+  RNSVGPatternProps(const PropsParserContext& context, const RNSVGPatternProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic height{};
+  folly::dynamic width{};
+  int patternUnits{0};
+  int patternContentUnits{0};
+  std::vector<Float> patternTransform{};
+  Float minX{0.0};
+  Float minY{0.0};
+  Float vbWidth{0.0};
+  Float vbHeight{0.0};
+  std::string align{};
+  int meetOrSlice{0};
+};
+
+class RNSVGRadialGradientProps final : public ViewProps {
+ public:
+  RNSVGRadialGradientProps() = default;
+  RNSVGRadialGradientProps(const PropsParserContext& context, const RNSVGRadialGradientProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  folly::dynamic fx{};
+  folly::dynamic fy{};
+  folly::dynamic cx{};
+  folly::dynamic cy{};
+  folly::dynamic rx{};
+  folly::dynamic ry{};
+  std::vector<Float> gradient{};
+  int gradientUnits{0};
+  std::vector<Float> gradientTransform{};
+};
+
+class RNSVGRectProps final : public ViewProps {
+ public:
+  RNSVGRectProps() = default;
+  RNSVGRectProps(const PropsParserContext& context, const RNSVGRectProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic height{};
+  folly::dynamic width{};
+  folly::dynamic rx{};
+  folly::dynamic ry{};
+};
+
+class RNSVGSymbolProps final : public ViewProps {
+ public:
+  RNSVGSymbolProps() = default;
+  RNSVGSymbolProps(const PropsParserContext& context, const RNSVGSymbolProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  Float minX{0.0};
+  Float minY{0.0};
+  Float vbWidth{0.0};
+  Float vbHeight{0.0};
+  std::string align{};
+  int meetOrSlice{0};
+};
+
+class RNSVGTextProps final : public ViewProps {
+ public:
+  RNSVGTextProps() = default;
+  RNSVGTextProps(const PropsParserContext& context, const RNSVGTextProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic dx{};
+  folly::dynamic dy{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic rotate{};
+  folly::dynamic inlineSize{};
+  folly::dynamic textLength{};
+  folly::dynamic baselineShift{};
+  std::string lengthAdjust{};
+  std::string alignmentBaseline{};
+  folly::dynamic verticalAlign{};
+};
+
+class RNSVGTextPathProps final : public ViewProps {
+ public:
+  RNSVGTextPathProps() = default;
+  RNSVGTextPathProps(const PropsParserContext& context, const RNSVGTextPathProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic dx{};
+  folly::dynamic dy{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic rotate{};
+  folly::dynamic inlineSize{};
+  folly::dynamic textLength{};
+  folly::dynamic baselineShift{};
+  std::string lengthAdjust{};
+  std::string alignmentBaseline{};
+  folly::dynamic verticalAlign{};
+  std::string href{};
+  std::string side{};
+  std::string method{};
+  std::string midLine{};
+  std::string spacing{};
+  folly::dynamic startOffset{};
+};
+
+class RNSVGTSpanProps final : public ViewProps {
+ public:
+  RNSVGTSpanProps() = default;
+  RNSVGTSpanProps(const PropsParserContext& context, const RNSVGTSpanProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  folly::dynamic fontSize{};
+  folly::dynamic fontWeight{};
+  folly::dynamic font{};
+  folly::dynamic dx{};
+  folly::dynamic dy{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic rotate{};
+  folly::dynamic inlineSize{};
+  folly::dynamic textLength{};
+  folly::dynamic baselineShift{};
+  std::string lengthAdjust{};
+  std::string alignmentBaseline{};
+  folly::dynamic verticalAlign{};
+  std::string content{};
+};
+
+class RNSVGUseProps final : public ViewProps {
+ public:
+  RNSVGUseProps() = default;
+  RNSVGUseProps(const PropsParserContext& context, const RNSVGUseProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::string name{};
+  Float opacity{1.0};
+  std::vector<Float> matrix{};
+  std::string mask{};
+  std::string markerStart{};
+  std::string markerMid{};
+  std::string markerEnd{};
+  std::string clipPath{};
+  int clipRule{0};
+  bool responsible{false};
+  std::string display{};
+  std::string pointerEvents{};
+  SharedColor color{};
+  folly::dynamic fill{};
+  Float fillOpacity{1.0};
+  int fillRule{1};
+  folly::dynamic stroke{};
+  Float strokeOpacity{1.0};
+  folly::dynamic strokeWidth{};
+  int strokeLinecap{0};
+  int strokeLinejoin{0};
+  folly::dynamic strokeDasharray{};
+  Float strokeDashoffset{0.0};
+  Float strokeMiterlimit{0.0};
+  int vectorEffect{0};
+  std::vector<std::string> propList{};
+  std::string filter{};
+  std::string href{};
+  folly::dynamic x{};
+  folly::dynamic y{};
+  folly::dynamic height{};
+  folly::dynamic width{};
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ShadowNodes.cpp b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ShadowNodes.cpp
new file mode 100644
index 0000000..d331b21
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ShadowNodes.cpp
@@ -0,0 +1,18 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeCpp.js
+ */
+
+#include <react/renderer/components/rnsvg/ShadowNodes.h>
+
+namespace facebook::react {
+
+extern const char RNSVGSvgViewAndroidComponentName[] = "RNSVGSvgViewAndroid";
+extern const char RNSVGSvgViewComponentName[] = "RNSVGSvgView";
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ShadowNodes.h b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ShadowNodes.h
new file mode 100644
index 0000000..f82c5df
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/ShadowNodes.h
@@ -0,0 +1,43 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rnsvg/EventEmitters.h>
+#include <react/renderer/components/rnsvg/Props.h>
+#include <react/renderer/components/rnsvg/States.h>
+#include <react/renderer/components/view/ConcreteViewShadowNode.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+JSI_EXPORT extern const char RNSVGSvgViewAndroidComponentName[];
+
+/*
+ * `ShadowNode` for <RNSVGSvgViewAndroid> component.
+ */
+using RNSVGSvgViewAndroidShadowNode = ConcreteViewShadowNode<
+    RNSVGSvgViewAndroidComponentName,
+    RNSVGSvgViewAndroidProps,
+    RNSVGSvgViewAndroidEventEmitter,
+    RNSVGSvgViewAndroidState>;
+
+JSI_EXPORT extern const char RNSVGSvgViewComponentName[];
+
+/*
+ * `ShadowNode` for <RNSVGSvgView> component.
+ */
+using RNSVGSvgViewShadowNode = ConcreteViewShadowNode<
+    RNSVGSvgViewComponentName,
+    RNSVGSvgViewProps,
+    RNSVGSvgViewEventEmitter,
+    RNSVGSvgViewState>;
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/States.cpp b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/States.cpp
new file mode 100644
index 0000000..a36fa6f
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/States.cpp
@@ -0,0 +1,16 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateCpp.js
+ */
+#include <react/renderer/components/rnsvg/States.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/States.h b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/States.h
new file mode 100644
index 0000000..07176c1
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/States.h
@@ -0,0 +1,41 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateH.js
+ */
+#pragma once
+
+#ifdef ANDROID
+#include <folly/dynamic.h>
+#endif
+
+namespace facebook::react {
+
+class RNSVGSvgViewAndroidState {
+public:
+  RNSVGSvgViewAndroidState() = default;
+
+#ifdef ANDROID
+  RNSVGSvgViewAndroidState(RNSVGSvgViewAndroidState const &previousState, folly::dynamic data){};
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+#endif
+};
+
+class RNSVGSvgViewState {
+public:
+  RNSVGSvgViewState() = default;
+
+#ifdef ANDROID
+  RNSVGSvgViewState(RNSVGSvgViewState const &previousState, folly::dynamic data){};
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+#endif
+};
+
+} // namespace facebook::react
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/rnsvgJSI-generated.cpp b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/rnsvgJSI-generated.cpp
new file mode 100644
index 0000000..a4b461a
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/rnsvgJSI-generated.cpp
@@ -0,0 +1,94 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleCpp.js
+ */
+
+#include "rnsvgJSI.h"
+
+namespace facebook::react {
+
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_isPointInFill(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->isPointInFill(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber()),
+    count <= 1 || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_isPointInStroke(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->isPointInStroke(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber()),
+    count <= 1 || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getTotalLength(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->getTotalLength(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber())
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getPointAtLength(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->getPointAtLength(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber()),
+    count <= 1 || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getBBox(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->getBBox(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber()),
+    count <= 1 || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getCTM(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->getCTM(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber())
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getScreenCTM(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->getScreenCTM(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber())
+  );
+}
+static jsi::Value __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getRawResource(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeSvgRenderableModuleCxxSpecJSI *>(&turboModule)->getRawResource(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
+  );
+}
+
+NativeSvgRenderableModuleCxxSpecJSI::NativeSvgRenderableModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
+  : TurboModule("RNSVGRenderableModule", jsInvoker) {
+  methodMap_["isPointInFill"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_isPointInFill};
+  methodMap_["isPointInStroke"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_isPointInStroke};
+  methodMap_["getTotalLength"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getTotalLength};
+  methodMap_["getPointAtLength"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getPointAtLength};
+  methodMap_["getBBox"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getBBox};
+  methodMap_["getCTM"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getCTM};
+  methodMap_["getScreenCTM"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getScreenCTM};
+  methodMap_["getRawResource"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleCxxSpecJSI_getRawResource};
+}
+static jsi::Value __hostFunction_NativeSvgViewModuleCxxSpecJSI_toDataURL(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeSvgViewModuleCxxSpecJSI *>(&turboModule)->toDataURL(
+    rt,
+    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber()),
+    count <= 1 || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt)),
+    count <= 2 || args[2].isUndefined() ? std::nullopt : std::make_optional(args[2].asObject(rt).asFunction(rt))
+  );
+  return jsi::Value::undefined();
+}
+
+NativeSvgViewModuleCxxSpecJSI::NativeSvgViewModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
+  : TurboModule("RNSVGSvgViewModule", jsInvoker) {
+  methodMap_["toDataURL"] = MethodMetadata {3, __hostFunction_NativeSvgViewModuleCxxSpecJSI_toDataURL};
+}
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/rnsvgJSI.h b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/rnsvgJSI.h
new file mode 100644
index 0000000..4a77d5d
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/react/renderer/components/rnsvg/rnsvgJSI.h
@@ -0,0 +1,373 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/TurboModule.h>
+#include <react/bridging/Bridging.h>
+
+namespace facebook::react {
+
+
+  
+#pragma mark - NativeSvgRenderableModuleMatrix
+
+template <typename P0, typename P1, typename P2, typename P3, typename P4, typename P5>
+struct NativeSvgRenderableModuleMatrix {
+  P0 a;
+  P1 b;
+  P2 c;
+  P3 d;
+  P4 e;
+  P5 f;
+  bool operator==(const NativeSvgRenderableModuleMatrix &other) const {
+    return a == other.a && b == other.b && c == other.c && d == other.d && e == other.e && f == other.f;
+  }
+};
+
+template <typename T>
+struct NativeSvgRenderableModuleMatrixBridging {
+  static T types;
+
+  static T fromJs(
+      jsi::Runtime &rt,
+      const jsi::Object &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    T result{
+      bridging::fromJs<decltype(types.a)>(rt, value.getProperty(rt, "a"), jsInvoker),
+      bridging::fromJs<decltype(types.b)>(rt, value.getProperty(rt, "b"), jsInvoker),
+      bridging::fromJs<decltype(types.c)>(rt, value.getProperty(rt, "c"), jsInvoker),
+      bridging::fromJs<decltype(types.d)>(rt, value.getProperty(rt, "d"), jsInvoker),
+      bridging::fromJs<decltype(types.e)>(rt, value.getProperty(rt, "e"), jsInvoker),
+      bridging::fromJs<decltype(types.f)>(rt, value.getProperty(rt, "f"), jsInvoker)};
+    return result;
+  }
+
+#ifdef DEBUG
+  static double aToJs(jsi::Runtime &rt, decltype(types.a) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double bToJs(jsi::Runtime &rt, decltype(types.b) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double cToJs(jsi::Runtime &rt, decltype(types.c) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double dToJs(jsi::Runtime &rt, decltype(types.d) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double eToJs(jsi::Runtime &rt, decltype(types.e) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double fToJs(jsi::Runtime &rt, decltype(types.f) value) {
+    return bridging::toJs(rt, value);
+  }
+#endif
+
+  static jsi::Object toJs(
+      jsi::Runtime &rt,
+      const T &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    auto result = facebook::jsi::Object(rt);
+    result.setProperty(rt, "a", bridging::toJs(rt, value.a, jsInvoker));
+    result.setProperty(rt, "b", bridging::toJs(rt, value.b, jsInvoker));
+    result.setProperty(rt, "c", bridging::toJs(rt, value.c, jsInvoker));
+    result.setProperty(rt, "d", bridging::toJs(rt, value.d, jsInvoker));
+    result.setProperty(rt, "e", bridging::toJs(rt, value.e, jsInvoker));
+    result.setProperty(rt, "f", bridging::toJs(rt, value.f, jsInvoker));
+    return result;
+  }
+};
+
+
+
+#pragma mark - NativeSvgRenderableModulePoint
+
+template <typename P0, typename P1>
+struct NativeSvgRenderableModulePoint {
+  P0 x;
+  P1 y;
+  bool operator==(const NativeSvgRenderableModulePoint &other) const {
+    return x == other.x && y == other.y;
+  }
+};
+
+template <typename T>
+struct NativeSvgRenderableModulePointBridging {
+  static T types;
+
+  static T fromJs(
+      jsi::Runtime &rt,
+      const jsi::Object &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    T result{
+      bridging::fromJs<decltype(types.x)>(rt, value.getProperty(rt, "x"), jsInvoker),
+      bridging::fromJs<decltype(types.y)>(rt, value.getProperty(rt, "y"), jsInvoker)};
+    return result;
+  }
+
+#ifdef DEBUG
+  static double xToJs(jsi::Runtime &rt, decltype(types.x) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double yToJs(jsi::Runtime &rt, decltype(types.y) value) {
+    return bridging::toJs(rt, value);
+  }
+#endif
+
+  static jsi::Object toJs(
+      jsi::Runtime &rt,
+      const T &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    auto result = facebook::jsi::Object(rt);
+    result.setProperty(rt, "x", bridging::toJs(rt, value.x, jsInvoker));
+    result.setProperty(rt, "y", bridging::toJs(rt, value.y, jsInvoker));
+    return result;
+  }
+};
+
+
+
+#pragma mark - NativeSvgRenderableModuleRect
+
+template <typename P0, typename P1, typename P2, typename P3>
+struct NativeSvgRenderableModuleRect {
+  P0 x;
+  P1 y;
+  P2 width;
+  P3 height;
+  bool operator==(const NativeSvgRenderableModuleRect &other) const {
+    return x == other.x && y == other.y && width == other.width && height == other.height;
+  }
+};
+
+template <typename T>
+struct NativeSvgRenderableModuleRectBridging {
+  static T types;
+
+  static T fromJs(
+      jsi::Runtime &rt,
+      const jsi::Object &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    T result{
+      bridging::fromJs<decltype(types.x)>(rt, value.getProperty(rt, "x"), jsInvoker),
+      bridging::fromJs<decltype(types.y)>(rt, value.getProperty(rt, "y"), jsInvoker),
+      bridging::fromJs<decltype(types.width)>(rt, value.getProperty(rt, "width"), jsInvoker),
+      bridging::fromJs<decltype(types.height)>(rt, value.getProperty(rt, "height"), jsInvoker)};
+    return result;
+  }
+
+#ifdef DEBUG
+  static double xToJs(jsi::Runtime &rt, decltype(types.x) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double yToJs(jsi::Runtime &rt, decltype(types.y) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double widthToJs(jsi::Runtime &rt, decltype(types.width) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double heightToJs(jsi::Runtime &rt, decltype(types.height) value) {
+    return bridging::toJs(rt, value);
+  }
+#endif
+
+  static jsi::Object toJs(
+      jsi::Runtime &rt,
+      const T &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    auto result = facebook::jsi::Object(rt);
+    result.setProperty(rt, "x", bridging::toJs(rt, value.x, jsInvoker));
+    result.setProperty(rt, "y", bridging::toJs(rt, value.y, jsInvoker));
+    result.setProperty(rt, "width", bridging::toJs(rt, value.width, jsInvoker));
+    result.setProperty(rt, "height", bridging::toJs(rt, value.height, jsInvoker));
+    return result;
+  }
+};
+
+class JSI_EXPORT NativeSvgRenderableModuleCxxSpecJSI : public TurboModule {
+protected:
+  NativeSvgRenderableModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);
+
+public:
+  virtual bool isPointInFill(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) = 0;
+  virtual bool isPointInStroke(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) = 0;
+  virtual double getTotalLength(jsi::Runtime &rt, std::optional<double> tag) = 0;
+  virtual jsi::Object getPointAtLength(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) = 0;
+  virtual jsi::Object getBBox(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) = 0;
+  virtual jsi::Object getCTM(jsi::Runtime &rt, std::optional<double> tag) = 0;
+  virtual jsi::Object getScreenCTM(jsi::Runtime &rt, std::optional<double> tag) = 0;
+  virtual jsi::Value getRawResource(jsi::Runtime &rt, jsi::String name) = 0;
+
+};
+
+template <typename T>
+class JSI_EXPORT NativeSvgRenderableModuleCxxSpec : public TurboModule {
+public:
+  jsi::Value create(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
+    return delegate_.create(rt, propName);
+  }
+
+  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& runtime) override {
+    return delegate_.getPropertyNames(runtime);
+  }
+
+  static constexpr std::string_view kModuleName = "RNSVGRenderableModule";
+
+protected:
+  NativeSvgRenderableModuleCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
+    : TurboModule(std::string{NativeSvgRenderableModuleCxxSpec::kModuleName}, jsInvoker),
+      delegate_(reinterpret_cast<T*>(this), jsInvoker) {}
+
+
+private:
+  class Delegate : public NativeSvgRenderableModuleCxxSpecJSI {
+  public:
+    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
+      NativeSvgRenderableModuleCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {
+
+    }
+
+    bool isPointInFill(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) override {
+      static_assert(
+          bridging::getParameterCount(&T::isPointInFill) == 3,
+          "Expected isPointInFill(...) to have 3 parameters");
+
+      return bridging::callFromJs<bool>(
+          rt, &T::isPointInFill, jsInvoker_, instance_, std::move(tag), std::move(options));
+    }
+    bool isPointInStroke(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) override {
+      static_assert(
+          bridging::getParameterCount(&T::isPointInStroke) == 3,
+          "Expected isPointInStroke(...) to have 3 parameters");
+
+      return bridging::callFromJs<bool>(
+          rt, &T::isPointInStroke, jsInvoker_, instance_, std::move(tag), std::move(options));
+    }
+    double getTotalLength(jsi::Runtime &rt, std::optional<double> tag) override {
+      static_assert(
+          bridging::getParameterCount(&T::getTotalLength) == 2,
+          "Expected getTotalLength(...) to have 2 parameters");
+
+      return bridging::callFromJs<double>(
+          rt, &T::getTotalLength, jsInvoker_, instance_, std::move(tag));
+    }
+    jsi::Object getPointAtLength(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) override {
+      static_assert(
+          bridging::getParameterCount(&T::getPointAtLength) == 3,
+          "Expected getPointAtLength(...) to have 3 parameters");
+
+      return bridging::callFromJs<jsi::Object>(
+          rt, &T::getPointAtLength, jsInvoker_, instance_, std::move(tag), std::move(options));
+    }
+    jsi::Object getBBox(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options) override {
+      static_assert(
+          bridging::getParameterCount(&T::getBBox) == 3,
+          "Expected getBBox(...) to have 3 parameters");
+
+      return bridging::callFromJs<jsi::Object>(
+          rt, &T::getBBox, jsInvoker_, instance_, std::move(tag), std::move(options));
+    }
+    jsi::Object getCTM(jsi::Runtime &rt, std::optional<double> tag) override {
+      static_assert(
+          bridging::getParameterCount(&T::getCTM) == 2,
+          "Expected getCTM(...) to have 2 parameters");
+
+      return bridging::callFromJs<jsi::Object>(
+          rt, &T::getCTM, jsInvoker_, instance_, std::move(tag));
+    }
+    jsi::Object getScreenCTM(jsi::Runtime &rt, std::optional<double> tag) override {
+      static_assert(
+          bridging::getParameterCount(&T::getScreenCTM) == 2,
+          "Expected getScreenCTM(...) to have 2 parameters");
+
+      return bridging::callFromJs<jsi::Object>(
+          rt, &T::getScreenCTM, jsInvoker_, instance_, std::move(tag));
+    }
+    jsi::Value getRawResource(jsi::Runtime &rt, jsi::String name) override {
+      static_assert(
+          bridging::getParameterCount(&T::getRawResource) == 2,
+          "Expected getRawResource(...) to have 2 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::getRawResource, jsInvoker_, instance_, std::move(name));
+    }
+
+  private:
+    friend class NativeSvgRenderableModuleCxxSpec;
+    T *instance_;
+  };
+
+  Delegate delegate_;
+};
+
+
+  class JSI_EXPORT NativeSvgViewModuleCxxSpecJSI : public TurboModule {
+protected:
+  NativeSvgViewModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);
+
+public:
+  virtual void toDataURL(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options, std::optional<jsi::Function> callback) = 0;
+
+};
+
+template <typename T>
+class JSI_EXPORT NativeSvgViewModuleCxxSpec : public TurboModule {
+public:
+  jsi::Value create(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
+    return delegate_.create(rt, propName);
+  }
+
+  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& runtime) override {
+    return delegate_.getPropertyNames(runtime);
+  }
+
+  static constexpr std::string_view kModuleName = "RNSVGSvgViewModule";
+
+protected:
+  NativeSvgViewModuleCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
+    : TurboModule(std::string{NativeSvgViewModuleCxxSpec::kModuleName}, jsInvoker),
+      delegate_(reinterpret_cast<T*>(this), jsInvoker) {}
+
+
+private:
+  class Delegate : public NativeSvgViewModuleCxxSpecJSI {
+  public:
+    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
+      NativeSvgViewModuleCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {
+
+    }
+
+    void toDataURL(jsi::Runtime &rt, std::optional<double> tag, std::optional<jsi::Object> options, std::optional<jsi::Function> callback) override {
+      static_assert(
+          bridging::getParameterCount(&T::toDataURL) == 4,
+          "Expected toDataURL(...) to have 4 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::toDataURL, jsInvoker_, instance_, std::move(tag), std::move(options), std::move(callback));
+    }
+
+  private:
+    friend class NativeSvgViewModuleCxxSpec;
+    T *instance_;
+  };
+
+  Delegate delegate_;
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/rnsvg-generated.cpp b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/rnsvg-generated.cpp
new file mode 100644
index 0000000..1b0dc88
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/rnsvg-generated.cpp
@@ -0,0 +1,86 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniCpp.js
+ */
+
+#include "rnsvg.h"
+
+namespace facebook::react {
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_isPointInFill(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, BooleanKind, "isPointInFill", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;)Z", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_isPointInStroke(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, BooleanKind, "isPointInStroke", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;)Z", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getTotalLength(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, NumberKind, "getTotalLength", "(Ljava/lang/Double;)D", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getPointAtLength(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getPointAtLength", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getBBox(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getBBox", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getCTM(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getCTM", "(Ljava/lang/Double;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getScreenCTM(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getScreenCTM", "(Ljava/lang/Double;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeSvgRenderableModuleSpecJSI_getRawResource(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getRawResource", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+NativeSvgRenderableModuleSpecJSI::NativeSvgRenderableModuleSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+  methodMap_["isPointInFill"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleSpecJSI_isPointInFill};
+  methodMap_["isPointInStroke"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleSpecJSI_isPointInStroke};
+  methodMap_["getTotalLength"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleSpecJSI_getTotalLength};
+  methodMap_["getPointAtLength"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleSpecJSI_getPointAtLength};
+  methodMap_["getBBox"] = MethodMetadata {2, __hostFunction_NativeSvgRenderableModuleSpecJSI_getBBox};
+  methodMap_["getCTM"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleSpecJSI_getCTM};
+  methodMap_["getScreenCTM"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleSpecJSI_getScreenCTM};
+  methodMap_["getRawResource"] = MethodMetadata {1, __hostFunction_NativeSvgRenderableModuleSpecJSI_getRawResource};
+}
+static facebook::jsi::Value __hostFunction_NativeSvgViewModuleSpecJSI_toDataURL(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "toDataURL", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
+}
+
+NativeSvgViewModuleSpecJSI::NativeSvgViewModuleSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+  methodMap_["toDataURL"] = MethodMetadata {3, __hostFunction_NativeSvgViewModuleSpecJSI_toDataURL};
+}
+
+std::shared_ptr<TurboModule> rnsvg_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
+  if (moduleName == "RNSVGRenderableModule") {
+    return std::make_shared<NativeSvgRenderableModuleSpecJSI>(params);
+  }
+  if (moduleName == "RNSVGSvgViewModule") {
+    return std::make_shared<NativeSvgViewModuleSpecJSI>(params);
+  }
+  return nullptr;
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/jni/rnsvg.h b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/rnsvg.h
new file mode 100644
index 0000000..3b04b7a
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/jni/rnsvg.h
@@ -0,0 +1,39 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/JavaTurboModule.h>
+#include <ReactCommon/TurboModule.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+/**
+ * JNI C++ class for module 'NativeSvgRenderableModule'
+ */
+class JSI_EXPORT NativeSvgRenderableModuleSpecJSI : public JavaTurboModule {
+public:
+  NativeSvgRenderableModuleSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+/**
+ * JNI C++ class for module 'NativeSvgViewModule'
+ */
+class JSI_EXPORT NativeSvgViewModuleSpecJSI : public JavaTurboModule {
+public:
+  NativeSvgViewModuleSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+
+JSI_EXPORT
+std::shared_ptr<TurboModule> rnsvg_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params);
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-svg/android/build/generated/source/codegen/schema.json b/node_modules/react-native-svg/android/build/generated/source/codegen/schema.json
new file mode 100644
index 0000000..d6685ab
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/generated/source/codegen/schema.json
@@ -0,0 +1,7857 @@
+{
+  "modules": {
+    "RNSVGSvgViewAndroid": {
+      "type": "Component",
+      "components": {
+        "RNSVGSvgViewAndroid": {
+          "excludedPlatforms": [
+            "iOS"
+          ],
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "bbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "bbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "minX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "minY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "align",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "meetOrSlice",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "hasTVPreferredFocus",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "borderBottomColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "nextFocusDown",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "borderRightColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "nextFocusRight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "borderLeftColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "borderColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "removeClippedSubviews",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "nextFocusForward",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "nextFocusUp",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "accessible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "borderStartColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "borderEndColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "focusable",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "nativeBackgroundAndroid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ObjectTypeAnnotation",
+                "properties": [
+                  {
+                    "name": "type",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "StringTypeAnnotation",
+                      "default": null
+                    }
+                  },
+                  {
+                    "name": "color",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  },
+                  {
+                    "name": "borderless",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "BooleanTypeAnnotation",
+                      "default": false
+                    }
+                  },
+                  {
+                    "name": "rippleRadius",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  }
+                ]
+              }
+            },
+            {
+              "name": "nativeForegroundAndroid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ObjectTypeAnnotation",
+                "properties": [
+                  {
+                    "name": "type",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "StringTypeAnnotation",
+                      "default": null
+                    }
+                  },
+                  {
+                    "name": "color",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  },
+                  {
+                    "name": "borderless",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "BooleanTypeAnnotation",
+                      "default": false
+                    }
+                  },
+                  {
+                    "name": "rippleRadius",
+                    "optional": true,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  }
+                ]
+              }
+            },
+            {
+              "name": "backfaceVisibility",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "borderStyle",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "needsOffscreenAlphaCompositing",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "hitSlop",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderTopColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "nextFocusLeft",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "borderBlockColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "borderBlockEndColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "borderBlockStartColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "borderRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderTopLeftRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderTopRightRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderBottomRightRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderBottomLeftRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderTopStartRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderTopEndRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderBottomStartRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderBottomEndRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderEndEndRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderEndStartRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderStartEndRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "borderStartStartRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGCircle": {
+      "type": "Component",
+      "components": {
+        "RNSVGCircle": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "cx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "cy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "r",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGClipPath": {
+      "type": "Component",
+      "components": {
+        "RNSVGClipPath": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGDefs": {
+      "type": "Component",
+      "components": {
+        "RNSVGDefs": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGEllipse": {
+      "type": "Component",
+      "components": {
+        "RNSVGEllipse": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "cx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "cy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "rx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "ry",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeBlend": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeBlend": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "mode",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "normal",
+                "options": [
+                  "unknown",
+                  "normal",
+                  "multiply",
+                  "screen",
+                  "darken",
+                  "lighten"
+                ]
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeColorMatrix": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeColorMatrix": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "type",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "matrix",
+                "options": [
+                  "matrix",
+                  "saturate",
+                  "hueRotate",
+                  "luminanceToAlpha"
+                ]
+              }
+            },
+            {
+              "name": "values",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeComposite": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeComposite": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "operator1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "over",
+                "options": [
+                  "over",
+                  "in",
+                  "out",
+                  "atop",
+                  "xor",
+                  "arithmetic"
+                ]
+              }
+            },
+            {
+              "name": "k1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "k2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "k3",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "k4",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeFlood": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeFlood": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "floodColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "floodOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeGaussianBlur": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeGaussianBlur": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "stdDeviationX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "stdDeviationY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "edgeMode",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "none",
+                "options": [
+                  "duplicate",
+                  "wrap",
+                  "none"
+                ]
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeMerge": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeMerge": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "nodes",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFeOffset": {
+      "type": "Component",
+      "components": {
+        "RNSVGFeOffset": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "result",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "in1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "dx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGFilter": {
+      "type": "Component",
+      "components": {
+        "RNSVGFilter": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "filterUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "objectBoundingBox",
+                "options": [
+                  "userSpaceOnUse",
+                  "objectBoundingBox"
+                ]
+              }
+            },
+            {
+              "name": "primitiveUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "userSpaceOnUse",
+                "options": [
+                  "userSpaceOnUse",
+                  "objectBoundingBox"
+                ]
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGForeignObject": {
+      "type": "Component",
+      "components": {
+        "RNSVGForeignObject": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGGroup": {
+      "type": "Component",
+      "components": {
+        "RNSVGGroup": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGImage": {
+      "type": "Component",
+      "components": {
+        "RNSVGImage": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onLoad",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "source",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "FloatTypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "FloatTypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "uri",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "StringTypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            },
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "src",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ImageSourcePrimitive"
+              }
+            },
+            {
+              "name": "align",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "meetOrSlice",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGSvgView": {
+      "type": "Component",
+      "components": {
+        "RNSVGSvgView": {
+          "excludedPlatforms": [
+            "android"
+          ],
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "bbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "bbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "minX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "minY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "align",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "meetOrSlice",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "hitSlop",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGLinearGradient": {
+      "type": "Component",
+      "components": {
+        "RNSVGLinearGradient": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "x1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "gradient",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "gradientUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "gradientTransform",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGLine": {
+      "type": "Component",
+      "components": {
+        "RNSVGLine": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "x1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y1",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y2",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGMarker": {
+      "type": "Component",
+      "components": {
+        "RNSVGMarker": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "refX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "refY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "markerHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "markerWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "markerUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "orient",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "minX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "minY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "align",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "meetOrSlice",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGMask": {
+      "type": "Component",
+      "components": {
+        "RNSVGMask": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "maskUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "maskContentUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "maskType",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "NativeSvgRenderableModule": {
+      "type": "NativeModule",
+      "aliasMap": {
+        "Matrix": {
+          "type": "ObjectTypeAnnotation",
+          "properties": [
+            {
+              "name": "a",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "b",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "c",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "d",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "e",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "f",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            }
+          ]
+        },
+        "Point": {
+          "type": "ObjectTypeAnnotation",
+          "properties": [
+            {
+              "name": "x",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            }
+          ]
+        },
+        "Rect": {
+          "type": "ObjectTypeAnnotation",
+          "properties": [
+            {
+              "name": "x",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              }
+            }
+          ]
+        }
+      },
+      "enumMap": {},
+      "spec": {
+        "eventEmitters": [],
+        "methods": [
+          {
+            "name": "isPointInFill",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "BooleanTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "options",
+                  "optional": true,
+                  "typeAnnotation": {
+                    "type": "GenericObjectTypeAnnotation"
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "isPointInStroke",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "BooleanTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "options",
+                  "optional": true,
+                  "typeAnnotation": {
+                    "type": "GenericObjectTypeAnnotation"
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getTotalLength",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "FloatTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getPointAtLength",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "TypeAliasTypeAnnotation",
+                "name": "Point"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "options",
+                  "optional": true,
+                  "typeAnnotation": {
+                    "type": "GenericObjectTypeAnnotation"
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getBBox",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "TypeAliasTypeAnnotation",
+                "name": "Rect"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "options",
+                  "optional": true,
+                  "typeAnnotation": {
+                    "type": "GenericObjectTypeAnnotation"
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getCTM",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "TypeAliasTypeAnnotation",
+                "name": "Matrix"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getScreenCTM",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "TypeAliasTypeAnnotation",
+                "name": "Matrix"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getRawResource",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "PromiseTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              },
+              "params": [
+                {
+                  "name": "name",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "StringTypeAnnotation"
+                  }
+                }
+              ]
+            }
+          }
+        ]
+      },
+      "moduleName": "RNSVGRenderableModule"
+    },
+    "NativeSvgViewModule": {
+      "type": "NativeModule",
+      "aliasMap": {},
+      "enumMap": {},
+      "spec": {
+        "eventEmitters": [],
+        "methods": [
+          {
+            "name": "toDataURL",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "VoidTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "tag",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "NullableTypeAnnotation",
+                    "typeAnnotation": {
+                      "type": "DoubleTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "options",
+                  "optional": true,
+                  "typeAnnotation": {
+                    "type": "GenericObjectTypeAnnotation"
+                  }
+                },
+                {
+                  "name": "callback",
+                  "optional": true,
+                  "typeAnnotation": {
+                    "type": "FunctionTypeAnnotation",
+                    "returnTypeAnnotation": {
+                      "type": "VoidTypeAnnotation"
+                    },
+                    "params": [
+                      {
+                        "name": "base64",
+                        "optional": false,
+                        "typeAnnotation": {
+                          "type": "StringTypeAnnotation"
+                        }
+                      }
+                    ]
+                  }
+                }
+              ]
+            }
+          }
+        ]
+      },
+      "moduleName": "RNSVGSvgViewModule"
+    },
+    "RNSVGPath": {
+      "type": "Component",
+      "components": {
+        "RNSVGPath": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "d",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGPattern": {
+      "type": "Component",
+      "components": {
+        "RNSVGPattern": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "patternUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "patternContentUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "patternTransform",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "minX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "minY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "align",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "meetOrSlice",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGRadialGradient": {
+      "type": "Component",
+      "components": {
+        "RNSVGRadialGradient": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "cx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "cy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "rx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "ry",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "gradient",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "gradientUnits",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "gradientTransform",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGRect": {
+      "type": "Component",
+      "components": {
+        "RNSVGRect": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "rx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "ry",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGSymbol": {
+      "type": "Component",
+      "components": {
+        "RNSVGSymbol": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "minX",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "minY",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vbHeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "align",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "meetOrSlice",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGText": {
+      "type": "Component",
+      "components": {
+        "RNSVGText": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "rotate",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "inlineSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "textLength",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "baselineShift",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "lengthAdjust",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "alignmentBaseline",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "verticalAlign",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGTextPath": {
+      "type": "Component",
+      "components": {
+        "RNSVGTextPath": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "rotate",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "inlineSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "textLength",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "baselineShift",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "lengthAdjust",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "alignmentBaseline",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "verticalAlign",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "href",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "side",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "method",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "midLine",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "spacing",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "startOffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGTSpan": {
+      "type": "Component",
+      "components": {
+        "RNSVGTSpan": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "fontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "font",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dx",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "dy",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "rotate",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "inlineSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "textLength",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "baselineShift",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "lengthAdjust",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "alignmentBaseline",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "verticalAlign",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "content",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSVGUse": {
+      "type": "Component",
+      "components": {
+        "RNSVGUse": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSvgLayout",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "layout",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "ObjectTypeAnnotation",
+                        "properties": [
+                          {
+                            "name": "x",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "y",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "width",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          },
+                          {
+                            "name": "height",
+                            "optional": false,
+                            "typeAnnotation": {
+                              "type": "Int32TypeAnnotation"
+                            }
+                          }
+                        ]
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "name",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "opacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "matrix",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "mask",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerStart",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerMid",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "markerEnd",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipPath",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "clipRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "responsible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "display",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "pointerEvents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "fill",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "fillOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "fillRule",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "stroke",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeOpacity",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 1
+              }
+            },
+            {
+              "name": "strokeWidth",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeLinecap",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeLinejoin",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeDasharray",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "strokeDashoffset",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "strokeMiterlimit",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "vectorEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "propList",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "StringTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "filter",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "href",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "x",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "y",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "height",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            },
+            {
+              "name": "width",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "MixedTypeAnnotation"
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/intermediates/aapt_friendly_merged_manifests/release/processReleaseManifest/aapt/AndroidManifest.xml b/node_modules/react-native-svg/android/build/intermediates/aapt_friendly_merged_manifests/release/processReleaseManifest/aapt/AndroidManifest.xml
new file mode 100644
index 0000000..037933a
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/aapt_friendly_merged_manifests/release/processReleaseManifest/aapt/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.horcrux.svg" >
+
+    <uses-sdk android:minSdkVersion="24" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/intermediates/aapt_friendly_merged_manifests/release/processReleaseManifest/aapt/output-metadata.json b/node_modules/react-native-svg/android/build/intermediates/aapt_friendly_merged_manifests/release/processReleaseManifest/aapt/output-metadata.json
new file mode 100644
index 0000000..83c0e66
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/aapt_friendly_merged_manifests/release/processReleaseManifest/aapt/output-metadata.json
@@ -0,0 +1,18 @@
+{
+  "version": 3,
+  "artifactType": {
+    "type": "AAPT_FRIENDLY_MERGED_MANIFESTS",
+    "kind": "Directory"
+  },
+  "applicationId": "com.horcrux.svg",
+  "variantName": "release",
+  "elements": [
+    {
+      "type": "SINGLE",
+      "filters": [],
+      "attributes": [],
+      "outputFile": "AndroidManifest.xml"
+    }
+  ],
+  "elementType": "File"
+}
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/intermediates/aar_main_jar/release/syncReleaseLibJars/classes.jar b/node_modules/react-native-svg/android/build/intermediates/aar_main_jar/release/syncReleaseLibJars/classes.jar
new file mode 100644
index 0000000..14faed1
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/aar_main_jar/release/syncReleaseLibJars/classes.jar differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/aar_metadata/release/writeReleaseAarMetadata/aar-metadata.properties b/node_modules/react-native-svg/android/build/intermediates/aar_metadata/release/writeReleaseAarMetadata/aar-metadata.properties
new file mode 100644
index 0000000..1211b1e
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/aar_metadata/release/writeReleaseAarMetadata/aar-metadata.properties
@@ -0,0 +1,6 @@
+aarFormatVersion=1.0
+aarMetadataVersion=1.0
+minCompileSdk=1
+minCompileSdkExtension=0
+minAndroidGradlePluginVersion=1.0.0
+coreLibraryDesugaringEnabled=false
diff --git a/node_modules/react-native-svg/android/build/intermediates/annotation_processor_list/release/javaPreCompileRelease/annotationProcessors.json b/node_modules/react-native-svg/android/build/intermediates/annotation_processor_list/release/javaPreCompileRelease/annotationProcessors.json
new file mode 100644
index 0000000..9e26dfe
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/annotation_processor_list/release/javaPreCompileRelease/annotationProcessors.json
@@ -0,0 +1 @@
+{}
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/intermediates/annotations_typedef_file/release/extractReleaseAnnotations/typedefs.txt b/node_modules/react-native-svg/android/build/intermediates/annotations_typedef_file/release/extractReleaseAnnotations/typedefs.txt
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-svg/android/build/intermediates/compile_library_classes_jar/release/bundleLibCompileToJarRelease/classes.jar b/node_modules/react-native-svg/android/build/intermediates/compile_library_classes_jar/release/bundleLibCompileToJarRelease/classes.jar
new file mode 100644
index 0000000..7f3db76
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/compile_library_classes_jar/release/bundleLibCompileToJarRelease/classes.jar differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/compile_r_class_jar/release/generateReleaseRFile/R.jar b/node_modules/react-native-svg/android/build/intermediates/compile_r_class_jar/release/generateReleaseRFile/R.jar
new file mode 100644
index 0000000..2268cce
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/compile_r_class_jar/release/generateReleaseRFile/R.jar differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/compile_symbol_list/release/generateReleaseRFile/R.txt b/node_modules/react-native-svg/android/build/intermediates/compile_symbol_list/release/generateReleaseRFile/R.txt
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-svg/android/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.7.2 b/node_modules/react-native-svg/android/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.7.2
new file mode 100644
index 0000000..5a3e3a5
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.7.2
@@ -0,0 +1,89 @@
+# This is a configuration file for ProGuard.
+# http://proguard.sourceforge.net/index.html#manual/usage.html
+#
+# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
+# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
+# will be ignored by new version of the Android plugin for Gradle.
+
+# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
+# instead of this one, which turns off the optimization flags.
+-allowaccessmodification
+
+# Preserve some attributes that may be required for reflection.
+-keepattributes AnnotationDefault,
+                EnclosingMethod,
+                InnerClasses,
+                RuntimeVisibleAnnotations,
+                RuntimeVisibleParameterAnnotations,
+                RuntimeVisibleTypeAnnotations,
+                Signature
+
+-keep public class com.google.vending.licensing.ILicensingService
+-keep public class com.android.vending.licensing.ILicensingService
+-keep public class com.google.android.vending.licensing.ILicensingService
+-dontnote com.android.vending.licensing.ILicensingService
+-dontnote com.google.vending.licensing.ILicensingService
+-dontnote com.google.android.vending.licensing.ILicensingService
+
+# For native methods, see https://www.guardsquare.com/manual/configuration/examples#native
+-keepclasseswithmembernames,includedescriptorclasses class * {
+    native <methods>;
+}
+
+# Keep setters in Views so that animations can still work.
+-keepclassmembers public class * extends android.view.View {
+    void set*(***);
+    *** get*();
+}
+
+# We want to keep methods in Activity that could be used in the XML attribute onClick.
+-keepclassmembers class * extends android.app.Activity {
+    public void *(android.view.View);
+}
+
+# For enumeration classes, see https://www.guardsquare.com/manual/configuration/examples#enumerations
+-keepclassmembers enum * {
+    public static **[] values();
+    public static ** valueOf(java.lang.String);
+}
+
+-keepclassmembers class * implements android.os.Parcelable {
+    public static final ** CREATOR;
+}
+
+# Preserve annotated Javascript interface methods.
+-keepclassmembers class * {
+    @android.webkit.JavascriptInterface <methods>;
+}
+
+# The support libraries contains references to newer platform versions.
+# Don't warn about those in case this app is linking against an older
+# platform version. We know about them, and they are safe.
+-dontnote android.support.**
+-dontnote androidx.**
+-dontwarn android.support.**
+-dontwarn androidx.**
+
+# Understand the @Keep support annotation.
+-keep class android.support.annotation.Keep
+
+-keep @android.support.annotation.Keep class * {*;}
+
+-keepclasseswithmembers class * {
+    @android.support.annotation.Keep <methods>;
+}
+
+-keepclasseswithmembers class * {
+    @android.support.annotation.Keep <fields>;
+}
+
+-keepclasseswithmembers class * {
+    @android.support.annotation.Keep <init>(...);
+}
+
+# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
+-dontnote org.apache.http.**
+-dontnote android.net.http.**
+
+# These classes are duplicated between android.jar and core-lambda-stubs.jar.
+-dontnote java.lang.invoke.**
diff --git a/node_modules/react-native-svg/android/build/intermediates/default_proguard_files/global/proguard-android.txt-8.7.2 b/node_modules/react-native-svg/android/build/intermediates/default_proguard_files/global/proguard-android.txt-8.7.2
new file mode 100644
index 0000000..6f7e4ef
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/default_proguard_files/global/proguard-android.txt-8.7.2
@@ -0,0 +1,95 @@
+# This is a configuration file for ProGuard.
+# http://proguard.sourceforge.net/index.html#manual/usage.html
+#
+# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
+# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
+# will be ignored by new version of the Android plugin for Gradle.
+
+# Optimization is turned off by default. Dex does not like code run
+# through the ProGuard optimize steps (and performs some
+# of these optimizations on its own).
+# Note that if you want to enable optimization, you cannot just
+# include optimization flags in your own project configuration file;
+# instead you will need to point to the
+# "proguard-android-optimize.txt" file instead of this one from your
+# project.properties file.
+-dontoptimize
+
+# Preserve some attributes that may be required for reflection.
+-keepattributes AnnotationDefault,
+                EnclosingMethod,
+                InnerClasses,
+                RuntimeVisibleAnnotations,
+                RuntimeVisibleParameterAnnotations,
+                RuntimeVisibleTypeAnnotations,
+                Signature
+
+-keep public class com.google.vending.licensing.ILicensingService
+-keep public class com.android.vending.licensing.ILicensingService
+-keep public class com.google.android.vending.licensing.ILicensingService
+-dontnote com.android.vending.licensing.ILicensingService
+-dontnote com.google.vending.licensing.ILicensingService
+-dontnote com.google.android.vending.licensing.ILicensingService
+
+# For native methods, see https://www.guardsquare.com/manual/configuration/examples#native
+-keepclasseswithmembernames,includedescriptorclasses class * {
+    native <methods>;
+}
+
+# Keep setters in Views so that animations can still work.
+-keepclassmembers public class * extends android.view.View {
+    void set*(***);
+    *** get*();
+}
+
+# We want to keep methods in Activity that could be used in the XML attribute onClick.
+-keepclassmembers class * extends android.app.Activity {
+    public void *(android.view.View);
+}
+
+# For enumeration classes, see https://www.guardsquare.com/manual/configuration/examples#enumerations
+-keepclassmembers enum * {
+    public static **[] values();
+    public static ** valueOf(java.lang.String);
+}
+
+-keepclassmembers class * implements android.os.Parcelable {
+    public static final ** CREATOR;
+}
+
+# Preserve annotated Javascript interface methods.
+-keepclassmembers class * {
+    @android.webkit.JavascriptInterface <methods>;
+}
+
+# The support libraries contains references to newer platform versions.
+# Don't warn about those in case this app is linking against an older
+# platform version. We know about them, and they are safe.
+-dontnote android.support.**
+-dontnote androidx.**
+-dontwarn android.support.**
+-dontwarn androidx.**
+
+# Understand the @Keep support annotation.
+-keep class android.support.annotation.Keep
+
+-keep @android.support.annotation.Keep class * {*;}
+
+-keepclasseswithmembers class * {
+    @android.support.annotation.Keep <methods>;
+}
+
+-keepclasseswithmembers class * {
+    @android.support.annotation.Keep <fields>;
+}
+
+-keepclasseswithmembers class * {
+    @android.support.annotation.Keep <init>(...);
+}
+
+# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
+-dontnote org.apache.http.**
+-dontnote android.net.http.**
+
+# These classes are duplicated between android.jar and core-lambda-stubs.jar.
+-dontnote java.lang.invoke.**
diff --git a/node_modules/react-native-svg/android/build/intermediates/default_proguard_files/global/proguard-defaults.txt-8.7.2 b/node_modules/react-native-svg/android/build/intermediates/default_proguard_files/global/proguard-defaults.txt-8.7.2
new file mode 100644
index 0000000..7bbb228
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/default_proguard_files/global/proguard-defaults.txt-8.7.2
@@ -0,0 +1,89 @@
+# This is a configuration file for ProGuard.
+# http://proguard.sourceforge.net/index.html#manual/usage.html
+#
+# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
+# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
+# will be ignored by new version of the Android plugin for Gradle.
+
+# Optimizations can be turned on and off in the 'postProcessing' DSL block.
+# The configuration below is applied if optimizations are enabled.
+-allowaccessmodification
+
+# Preserve some attributes that may be required for reflection.
+-keepattributes AnnotationDefault,
+                EnclosingMethod,
+                InnerClasses,
+                RuntimeVisibleAnnotations,
+                RuntimeVisibleParameterAnnotations,
+                RuntimeVisibleTypeAnnotations,
+                Signature
+
+-keep public class com.google.vending.licensing.ILicensingService
+-keep public class com.android.vending.licensing.ILicensingService
+-keep public class com.google.android.vending.licensing.ILicensingService
+-dontnote com.android.vending.licensing.ILicensingService
+-dontnote com.google.vending.licensing.ILicensingService
+-dontnote com.google.android.vending.licensing.ILicensingService
+
+# For native methods, see https://www.guardsquare.com/manual/configuration/examples#native
+-keepclasseswithmembernames,includedescriptorclasses class * {
+    native <methods>;
+}
+
+# Keep setters in Views so that animations can still work.
+-keepclassmembers public class * extends android.view.View {
+    void set*(***);
+    *** get*();
+}
+
+# We want to keep methods in Activity that could be used in the XML attribute onClick.
+-keepclassmembers class * extends android.app.Activity {
+    public void *(android.view.View);
+}
+
+# For enumeration classes, see https://www.guardsquare.com/manual/configuration/examples#enumerations
+-keepclassmembers enum * {
+    public static **[] values();
+    public static ** valueOf(java.lang.String);
+}
+
+-keepclassmembers class * implements android.os.Parcelable {
+    public static final ** CREATOR;
+}
+
+# Preserve annotated Javascript interface methods.
+-keepclassmembers class * {
+    @android.webkit.JavascriptInterface <methods>;
+}
+
+# The support libraries contains references to newer platform versions.
+# Don't warn about those in case this app is linking against an older
+# platform version. We know about them, and they are safe.
+-dontnote android.support.**
+-dontnote androidx.**
+-dontwarn android.support.**
+-dontwarn androidx.**
+
+# Understand the @Keep support annotation.
+-keep class android.support.annotation.Keep
+
+-keep @android.support.annotation.Keep class * {*;}
+
+-keepclasseswithmembers class * {
+    @android.support.annotation.Keep <methods>;
+}
+
+-keepclasseswithmembers class * {
+    @android.support.annotation.Keep <fields>;
+}
+
+-keepclasseswithmembers class * {
+    @android.support.annotation.Keep <init>(...);
+}
+
+# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
+-dontnote org.apache.http.**
+-dontnote android.net.http.**
+
+# These classes are duplicated between android.jar and core-lambda-stubs.jar.
+-dontnote java.lang.invoke.**
diff --git a/node_modules/react-native-svg/android/build/intermediates/full_jar/release/createFullJarRelease/full.jar b/node_modules/react-native-svg/android/build/intermediates/full_jar/release/createFullJarRelease/full.jar
new file mode 100644
index 0000000..e5a3816
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/full_jar/release/createFullJarRelease/full.jar differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/incremental/mergeReleaseJniLibFolders/merger.xml b/node_modules/react-native-svg/android/build/intermediates/incremental/mergeReleaseJniLibFolders/merger.xml
new file mode 100644
index 0000000..4cfa720
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/incremental/mergeReleaseJniLibFolders/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/jniLibs"/></dataSet><dataSet config="release" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/release/jniLibs"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/intermediates/incremental/mergeReleaseShaders/merger.xml b/node_modules/react-native-svg/android/build/intermediates/incremental/mergeReleaseShaders/merger.xml
new file mode 100644
index 0000000..bee9e4c
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/incremental/mergeReleaseShaders/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/shaders"/></dataSet><dataSet config="release" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/release/shaders"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/intermediates/incremental/packageReleaseAssets/merger.xml b/node_modules/react-native-svg/android/build/intermediates/incremental/packageReleaseAssets/merger.xml
new file mode 100644
index 0000000..7f40511
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/incremental/packageReleaseAssets/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/assets"/></dataSet><dataSet config="release" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/release/assets"/></dataSet><dataSet config="generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/build/intermediates/shader_assets/release/compileReleaseShaders/out"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/intermediates/incremental/release-mergeJavaRes/merge-state b/node_modules/react-native-svg/android/build/intermediates/incremental/release-mergeJavaRes/merge-state
new file mode 100644
index 0000000..1c983fc
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/incremental/release-mergeJavaRes/merge-state differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/incremental/release/packageReleaseResources/compile-file-map.properties b/node_modules/react-native-svg/android/build/intermediates/incremental/release/packageReleaseResources/compile-file-map.properties
new file mode 100644
index 0000000..5d360e8
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/incremental/release/packageReleaseResources/compile-file-map.properties
@@ -0,0 +1 @@
+#Sun Oct 05 20:09:45 IST 2025
diff --git a/node_modules/react-native-svg/android/build/intermediates/incremental/release/packageReleaseResources/merger.xml b/node_modules/react-native-svg/android/build/intermediates/incremental/release/packageReleaseResources/merger.xml
new file mode 100644
index 0000000..a494a38
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/incremental/release/packageReleaseResources/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="release$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/release/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="release" generated-set="release$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/release/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/build/generated/res/resValues/release"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated" generated-set="generated$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/build/generated/res/resValues/release"/></dataSet><mergedItems/></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.class
new file mode 100644
index 0000000..cac03b3
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.class
new file mode 100644
index 0000000..3b725d5
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.class
new file mode 100644
index 0000000..4bf498d
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.class
new file mode 100644
index 0000000..eabab66
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.class
new file mode 100644
index 0000000..092b288
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.class
new file mode 100644
index 0000000..cb80efe
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.class
new file mode 100644
index 0000000..d520cf7
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.class
new file mode 100644
index 0000000..b4df5e7
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeBlendManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeBlendManagerDelegate.class
new file mode 100644
index 0000000..295a45e
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeBlendManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeBlendManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeBlendManagerInterface.class
new file mode 100644
index 0000000..061760a
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeBlendManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerDelegate.class
new file mode 100644
index 0000000..421926e
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerInterface.class
new file mode 100644
index 0000000..8024767
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeColorMatrixManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerDelegate.class
new file mode 100644
index 0000000..6ac7af0
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerInterface.class
new file mode 100644
index 0000000..e8eee37
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeCompositeManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeFloodManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeFloodManagerDelegate.class
new file mode 100644
index 0000000..7d26e5c
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeFloodManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeFloodManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeFloodManagerInterface.class
new file mode 100644
index 0000000..690439d
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeFloodManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerDelegate.class
new file mode 100644
index 0000000..106ab60
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerInterface.class
new file mode 100644
index 0000000..9cf8788
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeGaussianBlurManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeMergeManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeMergeManagerDelegate.class
new file mode 100644
index 0000000..fefed6a
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeMergeManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeMergeManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeMergeManagerInterface.class
new file mode 100644
index 0000000..8be27a3
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeMergeManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerDelegate.class
new file mode 100644
index 0000000..7cb666c
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerInterface.class
new file mode 100644
index 0000000..1303a7a
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFeOffsetManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFilterManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFilterManagerDelegate.class
new file mode 100644
index 0000000..e4f1e11
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFilterManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFilterManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFilterManagerInterface.class
new file mode 100644
index 0000000..cd0a210
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGFilterManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.class
new file mode 100644
index 0000000..46d3882
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.class
new file mode 100644
index 0000000..6def963
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.class
new file mode 100644
index 0000000..d112e47
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.class
new file mode 100644
index 0000000..e3ddc86
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.class
new file mode 100644
index 0000000..8b58da5
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.class
new file mode 100644
index 0000000..961f9ad
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.class
new file mode 100644
index 0000000..228e602
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.class
new file mode 100644
index 0000000..31c3c82
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.class
new file mode 100644
index 0000000..c8f9478
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.class
new file mode 100644
index 0000000..43b3772
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.class
new file mode 100644
index 0000000..91b1458
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.class
new file mode 100644
index 0000000..d9959e1
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.class
new file mode 100644
index 0000000..4332c7c
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.class
new file mode 100644
index 0000000..c8a9af8
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.class
new file mode 100644
index 0000000..5a7b14f
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.class
new file mode 100644
index 0000000..e0898a9
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.class
new file mode 100644
index 0000000..c6dc0e9
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.class
new file mode 100644
index 0000000..eb26de1
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.class
new file mode 100644
index 0000000..92a8bfb
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.class
new file mode 100644
index 0000000..68cfd12
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.class
new file mode 100644
index 0000000..b474b80
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.class
new file mode 100644
index 0000000..24c443e
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.class
new file mode 100644
index 0000000..6377464
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.class
new file mode 100644
index 0000000..cb41ec6
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.class
new file mode 100644
index 0000000..3afafc1
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.class
new file mode 100644
index 0000000..de7e244
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.class
new file mode 100644
index 0000000..0e725bb
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.class
new file mode 100644
index 0000000..88305c3
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.class
new file mode 100644
index 0000000..17fa8b1
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.class
new file mode 100644
index 0000000..61988b2
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.class
new file mode 100644
index 0000000..9ab50d3
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.class
new file mode 100644
index 0000000..c18aa6b
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.class
new file mode 100644
index 0000000..70d7d97
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.class
new file mode 100644
index 0000000..6c346b0
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/Brush$BrushType.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/Brush$BrushType.class
new file mode 100644
index 0000000..562a5a5
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/Brush$BrushType.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/Brush$BrushUnits.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/Brush$BrushUnits.class
new file mode 100644
index 0000000..439c187
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/Brush$BrushUnits.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/Brush.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/Brush.class
new file mode 100644
index 0000000..6538a93
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/Brush.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/BuildConfig.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/BuildConfig.class
new file mode 100644
index 0000000..4793eec
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/BuildConfig.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/CircleView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/CircleView.class
new file mode 100644
index 0000000..6382624
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/CircleView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ClipPathView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ClipPathView.class
new file mode 100644
index 0000000..d727f4d
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ClipPathView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/CustomFilter.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/CustomFilter.class
new file mode 100644
index 0000000..da3d91f
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/CustomFilter.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/CustomFilterFunction.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/CustomFilterFunction.class
new file mode 100644
index 0000000..69e2de1
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/CustomFilterFunction.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/DefinitionView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/DefinitionView.class
new file mode 100644
index 0000000..805f943
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/DefinitionView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/DefsView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/DefsView.class
new file mode 100644
index 0000000..c8cc28d
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/DefsView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ElementType.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ElementType.class
new file mode 100644
index 0000000..7f819eb
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ElementType.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/EllipseView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/EllipseView.class
new file mode 100644
index 0000000..b0ec720
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/EllipseView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeBlendView$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeBlendView$1.class
new file mode 100644
index 0000000..2d3dbf7
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeBlendView$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeBlendView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeBlendView.class
new file mode 100644
index 0000000..63f7746
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeBlendView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeColorMatrixView$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeColorMatrixView$1.class
new file mode 100644
index 0000000..8d69a54
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeColorMatrixView$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeColorMatrixView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeColorMatrixView.class
new file mode 100644
index 0000000..e6cbd1c
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeColorMatrixView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeCompositeView$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeCompositeView$1.class
new file mode 100644
index 0000000..58dbf33
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeCompositeView$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeCompositeView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeCompositeView.class
new file mode 100644
index 0000000..b9ab433
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeCompositeView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeFloodView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeFloodView.class
new file mode 100644
index 0000000..113fc44
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeFloodView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeGaussianBlurView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeGaussianBlurView.class
new file mode 100644
index 0000000..5d5fa33
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeGaussianBlurView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeMergeView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeMergeView.class
new file mode 100644
index 0000000..fb2954f
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeMergeView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeOffsetView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeOffsetView.class
new file mode 100644
index 0000000..b9fd463
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FeOffsetView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterPrimitiveView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterPrimitiveView.class
new file mode 100644
index 0000000..350bfc2
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterPrimitiveView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$EdgeMode.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$EdgeMode.class
new file mode 100644
index 0000000..1ecb7c8
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$EdgeMode.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$FeBlendMode.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$FeBlendMode.class
new file mode 100644
index 0000000..a461146
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$FeBlendMode.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$FeColorMatrixType.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$FeColorMatrixType.class
new file mode 100644
index 0000000..714709a
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$FeColorMatrixType.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$FeCompositeOperator.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$FeCompositeOperator.class
new file mode 100644
index 0000000..25a236c
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$FeCompositeOperator.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$Units.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$Units.class
new file mode 100644
index 0000000..54cc725
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties$Units.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties.class
new file mode 100644
index 0000000..613b118
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterProperties.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterRegion.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterRegion.class
new file mode 100644
index 0000000..ec1a60f
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterRegion.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterUtils.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterUtils.class
new file mode 100644
index 0000000..da0637c
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterUtils.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterView.class
new file mode 100644
index 0000000..8dbdebb
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FilterView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FontData$AbsoluteFontWeight.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FontData$AbsoluteFontWeight.class
new file mode 100644
index 0000000..dd2f1ff
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FontData$AbsoluteFontWeight.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FontData.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FontData.class
new file mode 100644
index 0000000..41b38db
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/FontData.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ForeignObjectView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ForeignObjectView.class
new file mode 100644
index 0000000..ee0313d
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ForeignObjectView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/GlyphContext.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/GlyphContext.class
new file mode 100644
index 0000000..2436831
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/GlyphContext.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/GlyphPathBag.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/GlyphPathBag.class
new file mode 100644
index 0000000..84261af
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/GlyphPathBag.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/GroupView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/GroupView.class
new file mode 100644
index 0000000..2a5acea
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/GroupView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ImageView$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ImageView$1.class
new file mode 100644
index 0000000..e89e940
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ImageView$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ImageView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ImageView.class
new file mode 100644
index 0000000..fabf6f7
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ImageView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/LineView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/LineView.class
new file mode 100644
index 0000000..e0d8631
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/LineView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/LinearGradientView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/LinearGradientView.class
new file mode 100644
index 0000000..0969dc1
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/LinearGradientView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/MarkerView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/MarkerView.class
new file mode 100644
index 0000000..8574176
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/MarkerView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/MaskView$MaskType.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/MaskView$MaskType.class
new file mode 100644
index 0000000..978f150
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/MaskView$MaskType.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/MaskView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/MaskView.class
new file mode 100644
index 0000000..acc3155
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/MaskView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/NativeSvgRenderableModuleSpec.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/NativeSvgRenderableModuleSpec.class
new file mode 100644
index 0000000..1fd3b6b
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/NativeSvgRenderableModuleSpec.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/NativeSvgViewModuleSpec.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/NativeSvgViewModuleSpec.class
new file mode 100644
index 0000000..d8eb780
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/NativeSvgViewModuleSpec.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PathElement.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PathElement.class
new file mode 100644
index 0000000..7c06d3d
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PathElement.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PathParser.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PathParser.class
new file mode 100644
index 0000000..5b42564
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PathParser.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PathView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PathView.class
new file mode 100644
index 0000000..63b56bd
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PathView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PatternView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PatternView.class
new file mode 100644
index 0000000..ba80a56
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PatternView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/Point.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/Point.class
new file mode 100644
index 0000000..1c3279f
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/Point.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PropHelper$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PropHelper$1.class
new file mode 100644
index 0000000..7b16cba
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PropHelper$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PropHelper.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PropHelper.class
new file mode 100644
index 0000000..bb830b7
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/PropHelper.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RNSVGMarkerPosition$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RNSVGMarkerPosition$1.class
new file mode 100644
index 0000000..23eb211
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RNSVGMarkerPosition$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RNSVGMarkerPosition.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RNSVGMarkerPosition.class
new file mode 100644
index 0000000..30bec05
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RNSVGMarkerPosition.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RNSVGMarkerType.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RNSVGMarkerType.class
new file mode 100644
index 0000000..2b055a1
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RNSVGMarkerType.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RNSVGRenderableManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RNSVGRenderableManager.class
new file mode 100644
index 0000000..ee681bb
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RNSVGRenderableManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RadialGradientView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RadialGradientView.class
new file mode 100644
index 0000000..8f3aa7d
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RadialGradientView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RectView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RectView.class
new file mode 100644
index 0000000..466b322
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RectView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableView$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableView$1.class
new file mode 100644
index 0000000..ef74d2c
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableView$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableView.class
new file mode 100644
index 0000000..810991d
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$1.class
new file mode 100644
index 0000000..ba32440
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$CircleViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$CircleViewManager.class
new file mode 100644
index 0000000..b127438
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$CircleViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$ClipPathViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$ClipPathViewManager.class
new file mode 100644
index 0000000..2736698
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$ClipPathViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$DefsViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$DefsViewManager.class
new file mode 100644
index 0000000..d2957ee
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$DefsViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$EllipseViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$EllipseViewManager.class
new file mode 100644
index 0000000..31044f1
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$EllipseViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeBlendManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeBlendManager.class
new file mode 100644
index 0000000..b436902
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeBlendManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeColorMatrixManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeColorMatrixManager.class
new file mode 100644
index 0000000..bfb811a
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeColorMatrixManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeCompositeManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeCompositeManager.class
new file mode 100644
index 0000000..6af4d49
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeCompositeManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeFloodManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeFloodManager.class
new file mode 100644
index 0000000..5ddb0ce
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeFloodManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeGaussianBlurManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeGaussianBlurManager.class
new file mode 100644
index 0000000..c96dfd4
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeGaussianBlurManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeMergeManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeMergeManager.class
new file mode 100644
index 0000000..12b6b9f
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeMergeManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeOffsetManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeOffsetManager.class
new file mode 100644
index 0000000..3d40c2f
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FeOffsetManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FilterManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FilterManager.class
new file mode 100644
index 0000000..a38cafa
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FilterManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FilterPrimitiveManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FilterPrimitiveManager.class
new file mode 100644
index 0000000..3921e2b
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$FilterPrimitiveManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$ForeignObjectManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$ForeignObjectManager.class
new file mode 100644
index 0000000..900a27d
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$ForeignObjectManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$GroupViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$GroupViewManager.class
new file mode 100644
index 0000000..92c8ec8
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$GroupViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$GroupViewManagerAbstract.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$GroupViewManagerAbstract.class
new file mode 100644
index 0000000..c048a7b
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$GroupViewManagerAbstract.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$ImageViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$ImageViewManager.class
new file mode 100644
index 0000000..09742bb
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$ImageViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$LineViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$LineViewManager.class
new file mode 100644
index 0000000..a699f17
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$LineViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$LinearGradientManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$LinearGradientManager.class
new file mode 100644
index 0000000..e5ca9b5
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$LinearGradientManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$MarkerManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$MarkerManager.class
new file mode 100644
index 0000000..0deb215
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$MarkerManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$MaskManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$MaskManager.class
new file mode 100644
index 0000000..7643ecb
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$MaskManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$PathViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$PathViewManager.class
new file mode 100644
index 0000000..ee76ca5
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$PathViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$PatternManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$PatternManager.class
new file mode 100644
index 0000000..0061aed
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$PatternManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$RadialGradientManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$RadialGradientManager.class
new file mode 100644
index 0000000..190ac88
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$RadialGradientManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$RectViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$RectViewManager.class
new file mode 100644
index 0000000..4065c9a
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$RectViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$SymbolManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$SymbolManager.class
new file mode 100644
index 0000000..f43f486
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$SymbolManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$TSpanViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$TSpanViewManager.class
new file mode 100644
index 0000000..9b39a3c
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$TSpanViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$TextPathViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$TextPathViewManager.class
new file mode 100644
index 0000000..8ae9ce2
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$TextPathViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$TextViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$TextViewManager.class
new file mode 100644
index 0000000..bff088b
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$TextViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$TextViewManagerAbstract.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$TextViewManagerAbstract.class
new file mode 100644
index 0000000..69a0b52
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$TextViewManagerAbstract.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$UseViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$UseViewManager.class
new file mode 100644
index 0000000..9bab3b9
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager$UseViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager.class
new file mode 100644
index 0000000..e36c169
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/RenderableViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SVGLength$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SVGLength$1.class
new file mode 100644
index 0000000..719245e
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SVGLength$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SVGLength$UnitType.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SVGLength$UnitType.class
new file mode 100644
index 0000000..2359eea
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SVGLength$UnitType.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SVGLength.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SVGLength.class
new file mode 100644
index 0000000..01b6247
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SVGLength.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SegmentData.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SegmentData.class
new file mode 100644
index 0000000..6213a6b
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SegmentData.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$1.class
new file mode 100644
index 0000000..4e0b9b2
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$10.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$10.class
new file mode 100644
index 0000000..6f70a5b
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$10.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$11.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$11.class
new file mode 100644
index 0000000..f3f0792
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$11.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$12.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$12.class
new file mode 100644
index 0000000..741faba
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$12.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$13.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$13.class
new file mode 100644
index 0000000..c39892e
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$13.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$14.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$14.class
new file mode 100644
index 0000000..cdf16f8
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$14.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$15.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$15.class
new file mode 100644
index 0000000..1135e57
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$15.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$16.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$16.class
new file mode 100644
index 0000000..6b10011
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$16.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$17.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$17.class
new file mode 100644
index 0000000..2bfb72c
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$17.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$18.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$18.class
new file mode 100644
index 0000000..6e5b53e
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$18.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$19.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$19.class
new file mode 100644
index 0000000..fb08292
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$19.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$2.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$2.class
new file mode 100644
index 0000000..b3c7f8c
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$2.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$20.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$20.class
new file mode 100644
index 0000000..2f2bd65
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$20.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$21.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$21.class
new file mode 100644
index 0000000..1785b48
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$21.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$22.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$22.class
new file mode 100644
index 0000000..576ddd3
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$22.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$23.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$23.class
new file mode 100644
index 0000000..49ef708
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$23.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$24.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$24.class
new file mode 100644
index 0000000..cde0985
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$24.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$25.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$25.class
new file mode 100644
index 0000000..d7ce61f
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$25.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$26.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$26.class
new file mode 100644
index 0000000..4c55181
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$26.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$27.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$27.class
new file mode 100644
index 0000000..8c8b09f
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$27.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$28.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$28.class
new file mode 100644
index 0000000..5e32b84
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$28.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$29.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$29.class
new file mode 100644
index 0000000..ee10e17
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$29.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$3.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$3.class
new file mode 100644
index 0000000..3bb5dda
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$3.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$30.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$30.class
new file mode 100644
index 0000000..2d34d17
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$30.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$4.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$4.class
new file mode 100644
index 0000000..93ee0b8
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$4.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$5.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$5.class
new file mode 100644
index 0000000..3f82080
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$5.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$6.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$6.class
new file mode 100644
index 0000000..1d78a50
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$6.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$7.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$7.class
new file mode 100644
index 0000000..ab18dd9
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$7.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$8.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$8.class
new file mode 100644
index 0000000..d5b6670
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$8.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$9.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$9.class
new file mode 100644
index 0000000..b211c5e
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage$9.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage.class
new file mode 100644
index 0000000..c581797
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgPackage.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgView$Events.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgView$Events.class
new file mode 100644
index 0000000..b2a9461
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgView$Events.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgView.class
new file mode 100644
index 0000000..e8f28af
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewManager$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewManager$1.class
new file mode 100644
index 0000000..61d229b
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewManager$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewManager.class
new file mode 100644
index 0000000..8a0a7fe
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule$1$1$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule$1$1$1.class
new file mode 100644
index 0000000..1287020
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule$1$1$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule$1$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule$1$1.class
new file mode 100644
index 0000000..43ebef0
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule$1$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule$1$2.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule$1$2.class
new file mode 100644
index 0000000..9b42150
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule$1$2.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule$1.class
new file mode 100644
index 0000000..9f00dbd
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule.class
new file mode 100644
index 0000000..38fc42f
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SvgViewModule.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SymbolView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SymbolView.class
new file mode 100644
index 0000000..97e5a1c
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/SymbolView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TSpanView$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TSpanView$1.class
new file mode 100644
index 0000000..bb18017
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TSpanView$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TSpanView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TSpanView.class
new file mode 100644
index 0000000..35372aa
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TSpanView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$1.class
new file mode 100644
index 0000000..ad9d7b6
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$1CharacterPositioningResolver.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$1CharacterPositioningResolver.class
new file mode 100644
index 0000000..8836237
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$1CharacterPositioningResolver.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$1TextLengthResolver.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$1TextLengthResolver.class
new file mode 100644
index 0000000..2c49762
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$1TextLengthResolver.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$CharacterInformation.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$CharacterInformation.class
new file mode 100644
index 0000000..715d0b8
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$CharacterInformation.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$LayoutInput.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$LayoutInput.class
new file mode 100644
index 0000000..3c79802
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm$LayoutInput.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm.class
new file mode 100644
index 0000000..5c858d8
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextLayoutAlgorithm.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextPathView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextPathView.class
new file mode 100644
index 0000000..5b04299
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextPathView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$AlignmentBaseline.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$AlignmentBaseline.class
new file mode 100644
index 0000000..a8727e5
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$AlignmentBaseline.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$Direction.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$Direction.class
new file mode 100644
index 0000000..7efa48d
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$Direction.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$FontStyle.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$FontStyle.class
new file mode 100644
index 0000000..3a4298a
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$FontStyle.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$FontVariantLigatures.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$FontVariantLigatures.class
new file mode 100644
index 0000000..ecff894
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$FontVariantLigatures.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$FontWeight.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$FontWeight.class
new file mode 100644
index 0000000..4a5ed88
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$FontWeight.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextAnchor.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextAnchor.class
new file mode 100644
index 0000000..63ad8cb
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextAnchor.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextDecoration.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextDecoration.class
new file mode 100644
index 0000000..51c66ce
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextDecoration.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextLengthAdjust.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextLengthAdjust.class
new file mode 100644
index 0000000..6bec321
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextLengthAdjust.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextPathMethod.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextPathMethod.class
new file mode 100644
index 0000000..42968b4
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextPathMethod.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextPathMidLine.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextPathMidLine.class
new file mode 100644
index 0000000..b5bbf1b
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextPathMidLine.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextPathSide.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextPathSide.class
new file mode 100644
index 0000000..6a3b495
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextPathSide.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextPathSpacing.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextPathSpacing.class
new file mode 100644
index 0000000..ec3e564
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties$TextPathSpacing.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties.class
new file mode 100644
index 0000000..4025816
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextProperties.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextView.class
new file mode 100644
index 0000000..2a1045b
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/TextView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/UseView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/UseView.class
new file mode 100644
index 0000000..0415e18
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/UseView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ViewBox.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ViewBox.class
new file mode 100644
index 0000000..6d8cb72
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/ViewBox.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualView$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualView$1.class
new file mode 100644
index 0000000..e4a7e48
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualView$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualView.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualView.class
new file mode 100644
index 0000000..5cd3812
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualView.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager$1.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager$1.class
new file mode 100644
index 0000000..dd8277f
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager$1.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager$2.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager$2.class
new file mode 100644
index 0000000..a799fa0
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager$2.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager$RenderableShadowNode.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager$RenderableShadowNode.class
new file mode 100644
index 0000000..d7c80e0
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager$RenderableShadowNode.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager$SVGClass.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager$SVGClass.class
new file mode 100644
index 0000000..ddc1b11
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager$SVGClass.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager.class
new file mode 100644
index 0000000..08adced
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/VirtualViewManager.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/events/SvgLoadEvent.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/events/SvgLoadEvent.class
new file mode 100644
index 0000000..bedb28a
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/events/SvgLoadEvent.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/events/SvgOnLayoutEvent.class b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/events/SvgOnLayoutEvent.class
new file mode 100644
index 0000000..d439108
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/horcrux/svg/events/SvgOnLayoutEvent.class differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/lint_model/release/generateReleaseLintModel/module.xml b/node_modules/react-native-svg/android/build/intermediates/lint_model/release/generateReleaseLintModel/module.xml
new file mode 100644
index 0000000..f4747e0
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/lint_model/release/generateReleaseLintModel/module.xml
@@ -0,0 +1,18 @@
+<lint-module
+    format="1"
+    dir="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android"
+    name=":react-native-svg"
+    type="LIBRARY"
+    maven="TrackaExpense:react-native-svg:unspecified"
+    agpVersion="8.7.2"
+    buildFolder="build"
+    bootClassPath="/Users/dhruv/Library/Android/sdk/platforms/android-35/android.jar:/Users/dhruv/Library/Android/sdk/build-tools/34.0.0/core-lambda-stubs.jar"
+    javaSourceLevel="17"
+    compileTarget="android-35"
+    neverShrinking="true">
+  <lintOptions
+      absolutePaths="true"
+      checkReleaseBuilds="true"
+      explainIssues="true"/>
+  <variant name="release"/>
+</lint-module>
diff --git a/node_modules/react-native-svg/android/build/intermediates/lint_model/release/generateReleaseLintModel/release-artifact-dependencies.xml b/node_modules/react-native-svg/android/build/intermediates/lint_model/release/generateReleaseLintModel/release-artifact-dependencies.xml
new file mode 100644
index 0000000..6c262ba
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/lint_model/release/generateReleaseLintModel/release-artifact-dependencies.xml
@@ -0,0 +1,428 @@
+<dependencies>
+  <compile
+      roots="com.facebook.react:react-android:0.77.0:release@aar,com.facebook.fresco:fresco:3.4.0@aar,com.facebook.fresco:imagepipeline-okhttp3:3.4.0@aar,com.facebook.fresco:middleware:3.4.0@aar,androidx.appcompat:appcompat:1.6.1@aar,androidx.fragment:fragment:1.3.6@aar,androidx.activity:activity:1.6.0@aar,androidx.appcompat:appcompat-resources:1.6.1@aar,androidx.swiperefreshlayout:swiperefreshlayout:1.1.0@aar,androidx.drawerlayout:drawerlayout:1.0.0@aar,androidx.vectordrawable:vectordrawable-animated:1.1.0@aar,androidx.vectordrawable:vectordrawable:1.1.0@aar,androidx.viewpager:viewpager:1.0.0@aar,androidx.customview:customview:1.0.0@aar,androidx.loader:loader:1.0.0@aar,androidx.lifecycle:lifecycle-livedata:2.6.2@aar,androidx.lifecycle:lifecycle-common:2.6.2@jar,androidx.lifecycle:lifecycle-livedata-core:2.6.2@aar,androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar,androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar,androidx.lifecycle:lifecycle-runtime:2.6.2@aar,androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2@aar,androidx.core:core-ktx:1.13.1@aar,androidx.core:core:1.13.1@aar,androidx.core:core:1.13.1@aar,androidx.cursoradapter:cursoradapter:1.0.0@aar,androidx.savedstate:savedstate:1.2.1@aar,androidx.interpolator:interpolator:1.0.0@aar,androidx.versionedparcelable:versionedparcelable:1.1.1@aar,androidx.collection:collection:1.1.0@jar,androidx.arch.core:core-runtime:2.2.0@aar,androidx.arch.core:core-common:2.2.0@jar,androidx.annotation:annotation-jvm:1.6.0@jar,com.facebook.fresco:ui-common:3.4.0@aar,com.squareup.okhttp3:okhttp-urlconnection:4.9.2@jar,com.squareup.okhttp3:okhttp:4.9.2@jar,com.squareup.okio:okio:2.9.0@jar,com.facebook.fresco:fbcore:3.4.0@aar,com.facebook.fresco:drawee:3.4.0@aar,org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4@jar,org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4@jar,org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0@jar,com.facebook.fresco:ui-core:3.4.0@aar,com.facebook.fresco:imagepipeline:3.4.0@aar,com.facebook.fresco:imagepipeline-base:3.4.0@aar,androidx.annotation:annotation-experimental:1.4.0@aar,org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0@jar,org.jetbrains.kotlin:kotlin-stdlib:2.0.21@jar,org.jetbrains:annotations:13.0@jar,androidx.tracing:tracing:1.1.0@aar,androidx.autofill:autofill:1.1.0@aar,com.facebook.fbjni:fbjni:0.7.0@aar,com.facebook.soloader:soloader:0.12.1@aar,com.facebook.soloader:nativeloader:0.12.1@jar,com.facebook.soloader:annotation:0.12.1@jar,com.facebook.infer.annotation:infer-annotation:0.18.0@jar,com.google.code.findbugs:jsr305:3.0.2@jar,org.jetbrains.kotlin:kotlin-annotations-jvm:1.3.72@jar,com.facebook.fresco:imagepipeline-native:3.4.0@aar,com.facebook.fresco:memory-type-ashmem:3.4.0@aar,com.facebook.fresco:memory-type-native:3.4.0@aar,com.facebook.fresco:memory-type-java:3.4.0@aar,com.facebook.fresco:nativeimagefilters:3.4.0@aar,com.facebook.fresco:nativeimagetranscoder:3.4.0@aar,com.facebook.yoga:proguard-annotations:1.19.0@jar,javax.inject:javax.inject:1@jar">
+    <dependency
+        name="com.facebook.react:react-android:0.77.0:release@aar"
+        simpleName="com.facebook.react:react-android"/>
+    <dependency
+        name="com.facebook.fresco:fresco:3.4.0@aar"
+        simpleName="com.facebook.fresco:fresco"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline-okhttp3:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline-okhttp3"/>
+    <dependency
+        name="com.facebook.fresco:middleware:3.4.0@aar"
+        simpleName="com.facebook.fresco:middleware"/>
+    <dependency
+        name="androidx.appcompat:appcompat:1.6.1@aar"
+        simpleName="androidx.appcompat:appcompat"/>
+    <dependency
+        name="androidx.fragment:fragment:1.3.6@aar"
+        simpleName="androidx.fragment:fragment"/>
+    <dependency
+        name="androidx.activity:activity:1.6.0@aar"
+        simpleName="androidx.activity:activity"/>
+    <dependency
+        name="androidx.appcompat:appcompat-resources:1.6.1@aar"
+        simpleName="androidx.appcompat:appcompat-resources"/>
+    <dependency
+        name="androidx.swiperefreshlayout:swiperefreshlayout:1.1.0@aar"
+        simpleName="androidx.swiperefreshlayout:swiperefreshlayout"/>
+    <dependency
+        name="androidx.drawerlayout:drawerlayout:1.0.0@aar"
+        simpleName="androidx.drawerlayout:drawerlayout"/>
+    <dependency
+        name="androidx.vectordrawable:vectordrawable-animated:1.1.0@aar"
+        simpleName="androidx.vectordrawable:vectordrawable-animated"/>
+    <dependency
+        name="androidx.vectordrawable:vectordrawable:1.1.0@aar"
+        simpleName="androidx.vectordrawable:vectordrawable"/>
+    <dependency
+        name="androidx.viewpager:viewpager:1.0.0@aar"
+        simpleName="androidx.viewpager:viewpager"/>
+    <dependency
+        name="androidx.customview:customview:1.0.0@aar"
+        simpleName="androidx.customview:customview"/>
+    <dependency
+        name="androidx.loader:loader:1.0.0@aar"
+        simpleName="androidx.loader:loader"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-livedata:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-livedata"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-common:2.6.2@jar"
+        simpleName="androidx.lifecycle:lifecycle-common"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-livedata-core:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-livedata-core"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-viewmodel"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-runtime:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-runtime"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-viewmodel-savedstate"/>
+    <dependency
+        name="androidx.core:core-ktx:1.13.1@aar"
+        simpleName="androidx.core:core-ktx"/>
+    <dependency
+        name="androidx.core:core:1.13.1@aar"
+        simpleName="androidx.core:core"/>
+    <dependency
+        name="androidx.cursoradapter:cursoradapter:1.0.0@aar"
+        simpleName="androidx.cursoradapter:cursoradapter"/>
+    <dependency
+        name="androidx.savedstate:savedstate:1.2.1@aar"
+        simpleName="androidx.savedstate:savedstate"/>
+    <dependency
+        name="androidx.interpolator:interpolator:1.0.0@aar"
+        simpleName="androidx.interpolator:interpolator"/>
+    <dependency
+        name="androidx.versionedparcelable:versionedparcelable:1.1.1@aar"
+        simpleName="androidx.versionedparcelable:versionedparcelable"/>
+    <dependency
+        name="androidx.collection:collection:1.1.0@jar"
+        simpleName="androidx.collection:collection"/>
+    <dependency
+        name="androidx.arch.core:core-runtime:2.2.0@aar"
+        simpleName="androidx.arch.core:core-runtime"/>
+    <dependency
+        name="androidx.arch.core:core-common:2.2.0@jar"
+        simpleName="androidx.arch.core:core-common"/>
+    <dependency
+        name="androidx.annotation:annotation-jvm:1.6.0@jar"
+        simpleName="androidx.annotation:annotation-jvm"/>
+    <dependency
+        name="com.facebook.fresco:ui-common:3.4.0@aar"
+        simpleName="com.facebook.fresco:ui-common"/>
+    <dependency
+        name="com.squareup.okhttp3:okhttp-urlconnection:4.9.2@jar"
+        simpleName="com.squareup.okhttp3:okhttp-urlconnection"/>
+    <dependency
+        name="com.squareup.okhttp3:okhttp:4.9.2@jar"
+        simpleName="com.squareup.okhttp3:okhttp"/>
+    <dependency
+        name="com.squareup.okio:okio:2.9.0@jar"
+        simpleName="com.squareup.okio:okio"/>
+    <dependency
+        name="com.facebook.fresco:fbcore:3.4.0@aar"
+        simpleName="com.facebook.fresco:fbcore"/>
+    <dependency
+        name="com.facebook.fresco:drawee:3.4.0@aar"
+        simpleName="com.facebook.fresco:drawee"/>
+    <dependency
+        name="org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4@jar"
+        simpleName="org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm"/>
+    <dependency
+        name="org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4@jar"
+        simpleName="org.jetbrains.kotlinx:kotlinx-coroutines-android"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-stdlib-jdk8"/>
+    <dependency
+        name="com.facebook.fresco:ui-core:3.4.0@aar"
+        simpleName="com.facebook.fresco:ui-core"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline-base:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline-base"/>
+    <dependency
+        name="androidx.annotation:annotation-experimental:1.4.0@aar"
+        simpleName="androidx.annotation:annotation-experimental"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-stdlib-jdk7"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-stdlib:2.0.21@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-stdlib"/>
+    <dependency
+        name="org.jetbrains:annotations:13.0@jar"
+        simpleName="org.jetbrains:annotations"/>
+    <dependency
+        name="androidx.tracing:tracing:1.1.0@aar"
+        simpleName="androidx.tracing:tracing"/>
+    <dependency
+        name="androidx.autofill:autofill:1.1.0@aar"
+        simpleName="androidx.autofill:autofill"/>
+    <dependency
+        name="com.facebook.fbjni:fbjni:0.7.0@aar"
+        simpleName="com.facebook.fbjni:fbjni"/>
+    <dependency
+        name="com.facebook.soloader:soloader:0.12.1@aar"
+        simpleName="com.facebook.soloader:soloader"/>
+    <dependency
+        name="com.facebook.soloader:nativeloader:0.12.1@jar"
+        simpleName="com.facebook.soloader:nativeloader"/>
+    <dependency
+        name="com.facebook.soloader:annotation:0.12.1@jar"
+        simpleName="com.facebook.soloader:annotation"/>
+    <dependency
+        name="com.facebook.infer.annotation:infer-annotation:0.18.0@jar"
+        simpleName="com.facebook.infer.annotation:infer-annotation"/>
+    <dependency
+        name="com.google.code.findbugs:jsr305:3.0.2@jar"
+        simpleName="com.google.code.findbugs:jsr305"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-annotations-jvm:1.3.72@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-annotations-jvm"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline-native:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline-native"/>
+    <dependency
+        name="com.facebook.fresco:memory-type-ashmem:3.4.0@aar"
+        simpleName="com.facebook.fresco:memory-type-ashmem"/>
+    <dependency
+        name="com.facebook.fresco:memory-type-native:3.4.0@aar"
+        simpleName="com.facebook.fresco:memory-type-native"/>
+    <dependency
+        name="com.facebook.fresco:memory-type-java:3.4.0@aar"
+        simpleName="com.facebook.fresco:memory-type-java"/>
+    <dependency
+        name="com.facebook.fresco:nativeimagefilters:3.4.0@aar"
+        simpleName="com.facebook.fresco:nativeimagefilters"/>
+    <dependency
+        name="com.facebook.fresco:nativeimagetranscoder:3.4.0@aar"
+        simpleName="com.facebook.fresco:nativeimagetranscoder"/>
+    <dependency
+        name="com.facebook.yoga:proguard-annotations:1.19.0@jar"
+        simpleName="com.facebook.yoga:proguard-annotations"/>
+    <dependency
+        name="javax.inject:javax.inject:1@jar"
+        simpleName="javax.inject:javax.inject"/>
+  </compile>
+  <package
+      roots="com.facebook.react:react-android:0.77.0:release@aar,com.facebook.fresco:fresco:3.4.0@aar,com.facebook.fresco:imagepipeline-okhttp3:3.4.0@aar,com.facebook.fresco:drawee:3.4.0@aar,com.facebook.fresco:nativeimagefilters:3.4.0@aar,com.facebook.fresco:memory-type-native:3.4.0@aar,com.facebook.fresco:memory-type-java:3.4.0@aar,com.facebook.fresco:imagepipeline-native:3.4.0@aar,com.facebook.fresco:memory-type-ashmem:3.4.0@aar,com.facebook.fresco:imagepipeline:3.4.0@aar,com.facebook.fresco:nativeimagetranscoder:3.4.0@aar,com.facebook.fresco:imagepipeline-base:3.4.0@aar,com.facebook.fresco:urimod:3.4.0@aar,com.facebook.fresco:vito-source:3.4.0@aar,com.facebook.fresco:middleware:3.4.0@aar,androidx.appcompat:appcompat-resources:1.6.1@aar,androidx.appcompat:appcompat:1.6.1@aar,androidx.autofill:autofill:1.1.0@aar,androidx.swiperefreshlayout:swiperefreshlayout:1.1.0@aar,androidx.fragment:fragment:1.3.6@aar,androidx.activity:activity:1.6.0@aar,androidx.emoji2:emoji2-views-helper:1.2.0@aar,androidx.emoji2:emoji2:1.2.0@aar,com.facebook.fresco:ui-common:3.4.0@aar,com.facebook.fresco:soloader:3.4.0@aar,com.facebook.fresco:fbcore:3.4.0@aar,androidx.drawerlayout:drawerlayout:1.0.0@aar,androidx.vectordrawable:vectordrawable-animated:1.1.0@aar,androidx.vectordrawable:vectordrawable:1.1.0@aar,androidx.viewpager:viewpager:1.0.0@aar,androidx.customview:customview:1.0.0@aar,androidx.loader:loader:1.0.0@aar,androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar,androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar,androidx.lifecycle:lifecycle-livedata-core:2.6.2@aar,androidx.lifecycle:lifecycle-livedata:2.6.2@aar,androidx.savedstate:savedstate:1.2.1@aar,androidx.lifecycle:lifecycle-common:2.6.2@jar,androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2@aar,androidx.core:core-ktx:1.13.1@aar,androidx.core:core:1.13.1@aar,androidx.core:core:1.13.1@aar,androidx.lifecycle:lifecycle-runtime:2.6.2@aar,androidx.lifecycle:lifecycle-process:2.6.2@aar,androidx.profileinstaller:profileinstaller:1.3.0@aar,androidx.startup:startup-runtime:1.1.1@aar,androidx.tracing:tracing:1.1.0@aar,com.facebook.fbjni:fbjni:0.7.0@aar,com.facebook.infer.annotation:infer-annotation:0.18.0@jar,com.facebook.soloader:soloader:0.12.1@aar,com.facebook.yoga:proguard-annotations:1.19.0@jar,com.google.code.findbugs:jsr305:3.0.2@jar,com.squareup.okhttp3:okhttp-urlconnection:4.9.2@jar,com.squareup.okhttp3:okhttp:4.9.2@jar,com.squareup.okio:okio:2.9.0@jar,javax.inject:javax.inject:1@jar,com.facebook.fresco:ui-core:3.4.0@aar,org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4@jar,org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4@jar,org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0@jar,org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0@jar,androidx.annotation:annotation-experimental:1.4.0@aar,androidx.cursoradapter:cursoradapter:1.0.0@aar,androidx.resourceinspection:resourceinspection-annotation:1.0.1@jar,androidx.interpolator:interpolator:1.0.0@aar,androidx.versionedparcelable:versionedparcelable:1.1.1@aar,androidx.collection:collection:1.1.0@jar,androidx.arch.core:core-runtime:2.2.0@aar,androidx.arch.core:core-common:2.2.0@jar,androidx.concurrent:concurrent-futures:1.1.0@jar,androidx.annotation:annotation-jvm:1.6.0@jar,org.jetbrains.kotlin:kotlin-stdlib:2.0.21@jar,com.facebook.soloader:nativeloader:0.12.1@jar,org.jetbrains.kotlin:kotlin-annotations-jvm:1.3.72@jar,com.facebook.soloader:annotation:0.12.1@jar,org.jetbrains:annotations:13.0@jar,com.parse.bolts:bolts-tasks:1.4.0@jar,com.google.guava:listenablefuture:1.0@jar">
+    <dependency
+        name="com.facebook.react:react-android:0.77.0:release@aar"
+        simpleName="com.facebook.react:react-android"/>
+    <dependency
+        name="com.facebook.fresco:fresco:3.4.0@aar"
+        simpleName="com.facebook.fresco:fresco"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline-okhttp3:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline-okhttp3"/>
+    <dependency
+        name="com.facebook.fresco:drawee:3.4.0@aar"
+        simpleName="com.facebook.fresco:drawee"/>
+    <dependency
+        name="com.facebook.fresco:nativeimagefilters:3.4.0@aar"
+        simpleName="com.facebook.fresco:nativeimagefilters"/>
+    <dependency
+        name="com.facebook.fresco:memory-type-native:3.4.0@aar"
+        simpleName="com.facebook.fresco:memory-type-native"/>
+    <dependency
+        name="com.facebook.fresco:memory-type-java:3.4.0@aar"
+        simpleName="com.facebook.fresco:memory-type-java"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline-native:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline-native"/>
+    <dependency
+        name="com.facebook.fresco:memory-type-ashmem:3.4.0@aar"
+        simpleName="com.facebook.fresco:memory-type-ashmem"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline"/>
+    <dependency
+        name="com.facebook.fresco:nativeimagetranscoder:3.4.0@aar"
+        simpleName="com.facebook.fresco:nativeimagetranscoder"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline-base:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline-base"/>
+    <dependency
+        name="com.facebook.fresco:urimod:3.4.0@aar"
+        simpleName="com.facebook.fresco:urimod"/>
+    <dependency
+        name="com.facebook.fresco:vito-source:3.4.0@aar"
+        simpleName="com.facebook.fresco:vito-source"/>
+    <dependency
+        name="com.facebook.fresco:middleware:3.4.0@aar"
+        simpleName="com.facebook.fresco:middleware"/>
+    <dependency
+        name="androidx.appcompat:appcompat-resources:1.6.1@aar"
+        simpleName="androidx.appcompat:appcompat-resources"/>
+    <dependency
+        name="androidx.appcompat:appcompat:1.6.1@aar"
+        simpleName="androidx.appcompat:appcompat"/>
+    <dependency
+        name="androidx.autofill:autofill:1.1.0@aar"
+        simpleName="androidx.autofill:autofill"/>
+    <dependency
+        name="androidx.swiperefreshlayout:swiperefreshlayout:1.1.0@aar"
+        simpleName="androidx.swiperefreshlayout:swiperefreshlayout"/>
+    <dependency
+        name="androidx.fragment:fragment:1.3.6@aar"
+        simpleName="androidx.fragment:fragment"/>
+    <dependency
+        name="androidx.activity:activity:1.6.0@aar"
+        simpleName="androidx.activity:activity"/>
+    <dependency
+        name="androidx.emoji2:emoji2-views-helper:1.2.0@aar"
+        simpleName="androidx.emoji2:emoji2-views-helper"/>
+    <dependency
+        name="androidx.emoji2:emoji2:1.2.0@aar"
+        simpleName="androidx.emoji2:emoji2"/>
+    <dependency
+        name="com.facebook.fresco:ui-common:3.4.0@aar"
+        simpleName="com.facebook.fresco:ui-common"/>
+    <dependency
+        name="com.facebook.fresco:soloader:3.4.0@aar"
+        simpleName="com.facebook.fresco:soloader"/>
+    <dependency
+        name="com.facebook.fresco:fbcore:3.4.0@aar"
+        simpleName="com.facebook.fresco:fbcore"/>
+    <dependency
+        name="androidx.drawerlayout:drawerlayout:1.0.0@aar"
+        simpleName="androidx.drawerlayout:drawerlayout"/>
+    <dependency
+        name="androidx.vectordrawable:vectordrawable-animated:1.1.0@aar"
+        simpleName="androidx.vectordrawable:vectordrawable-animated"/>
+    <dependency
+        name="androidx.vectordrawable:vectordrawable:1.1.0@aar"
+        simpleName="androidx.vectordrawable:vectordrawable"/>
+    <dependency
+        name="androidx.viewpager:viewpager:1.0.0@aar"
+        simpleName="androidx.viewpager:viewpager"/>
+    <dependency
+        name="androidx.customview:customview:1.0.0@aar"
+        simpleName="androidx.customview:customview"/>
+    <dependency
+        name="androidx.loader:loader:1.0.0@aar"
+        simpleName="androidx.loader:loader"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-viewmodel"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-livedata-core:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-livedata-core"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-livedata:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-livedata"/>
+    <dependency
+        name="androidx.savedstate:savedstate:1.2.1@aar"
+        simpleName="androidx.savedstate:savedstate"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-common:2.6.2@jar"
+        simpleName="androidx.lifecycle:lifecycle-common"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-viewmodel-savedstate"/>
+    <dependency
+        name="androidx.core:core-ktx:1.13.1@aar"
+        simpleName="androidx.core:core-ktx"/>
+    <dependency
+        name="androidx.core:core:1.13.1@aar"
+        simpleName="androidx.core:core"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-runtime:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-runtime"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-process:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-process"/>
+    <dependency
+        name="androidx.profileinstaller:profileinstaller:1.3.0@aar"
+        simpleName="androidx.profileinstaller:profileinstaller"/>
+    <dependency
+        name="androidx.startup:startup-runtime:1.1.1@aar"
+        simpleName="androidx.startup:startup-runtime"/>
+    <dependency
+        name="androidx.tracing:tracing:1.1.0@aar"
+        simpleName="androidx.tracing:tracing"/>
+    <dependency
+        name="com.facebook.fbjni:fbjni:0.7.0@aar"
+        simpleName="com.facebook.fbjni:fbjni"/>
+    <dependency
+        name="com.facebook.infer.annotation:infer-annotation:0.18.0@jar"
+        simpleName="com.facebook.infer.annotation:infer-annotation"/>
+    <dependency
+        name="com.facebook.soloader:soloader:0.12.1@aar"
+        simpleName="com.facebook.soloader:soloader"/>
+    <dependency
+        name="com.facebook.yoga:proguard-annotations:1.19.0@jar"
+        simpleName="com.facebook.yoga:proguard-annotations"/>
+    <dependency
+        name="com.google.code.findbugs:jsr305:3.0.2@jar"
+        simpleName="com.google.code.findbugs:jsr305"/>
+    <dependency
+        name="com.squareup.okhttp3:okhttp-urlconnection:4.9.2@jar"
+        simpleName="com.squareup.okhttp3:okhttp-urlconnection"/>
+    <dependency
+        name="com.squareup.okhttp3:okhttp:4.9.2@jar"
+        simpleName="com.squareup.okhttp3:okhttp"/>
+    <dependency
+        name="com.squareup.okio:okio:2.9.0@jar"
+        simpleName="com.squareup.okio:okio"/>
+    <dependency
+        name="javax.inject:javax.inject:1@jar"
+        simpleName="javax.inject:javax.inject"/>
+    <dependency
+        name="com.facebook.fresco:ui-core:3.4.0@aar"
+        simpleName="com.facebook.fresco:ui-core"/>
+    <dependency
+        name="org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4@jar"
+        simpleName="org.jetbrains.kotlinx:kotlinx-coroutines-android"/>
+    <dependency
+        name="org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4@jar"
+        simpleName="org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-stdlib-jdk8"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-stdlib-jdk7"/>
+    <dependency
+        name="androidx.annotation:annotation-experimental:1.4.0@aar"
+        simpleName="androidx.annotation:annotation-experimental"/>
+    <dependency
+        name="androidx.cursoradapter:cursoradapter:1.0.0@aar"
+        simpleName="androidx.cursoradapter:cursoradapter"/>
+    <dependency
+        name="androidx.resourceinspection:resourceinspection-annotation:1.0.1@jar"
+        simpleName="androidx.resourceinspection:resourceinspection-annotation"/>
+    <dependency
+        name="androidx.interpolator:interpolator:1.0.0@aar"
+        simpleName="androidx.interpolator:interpolator"/>
+    <dependency
+        name="androidx.versionedparcelable:versionedparcelable:1.1.1@aar"
+        simpleName="androidx.versionedparcelable:versionedparcelable"/>
+    <dependency
+        name="androidx.collection:collection:1.1.0@jar"
+        simpleName="androidx.collection:collection"/>
+    <dependency
+        name="androidx.arch.core:core-runtime:2.2.0@aar"
+        simpleName="androidx.arch.core:core-runtime"/>
+    <dependency
+        name="androidx.arch.core:core-common:2.2.0@jar"
+        simpleName="androidx.arch.core:core-common"/>
+    <dependency
+        name="androidx.concurrent:concurrent-futures:1.1.0@jar"
+        simpleName="androidx.concurrent:concurrent-futures"/>
+    <dependency
+        name="androidx.annotation:annotation-jvm:1.6.0@jar"
+        simpleName="androidx.annotation:annotation-jvm"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-stdlib:2.0.21@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-stdlib"/>
+    <dependency
+        name="com.facebook.soloader:nativeloader:0.12.1@jar"
+        simpleName="com.facebook.soloader:nativeloader"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-annotations-jvm:1.3.72@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-annotations-jvm"/>
+    <dependency
+        name="com.facebook.soloader:annotation:0.12.1@jar"
+        simpleName="com.facebook.soloader:annotation"/>
+    <dependency
+        name="org.jetbrains:annotations:13.0@jar"
+        simpleName="org.jetbrains:annotations"/>
+    <dependency
+        name="com.parse.bolts:bolts-tasks:1.4.0@jar"
+        simpleName="com.parse.bolts:bolts-tasks"/>
+    <dependency
+        name="com.google.guava:listenablefuture:1.0@jar"
+        simpleName="com.google.guava:listenablefuture"/>
+  </package>
+</dependencies>
diff --git a/node_modules/react-native-svg/android/build/intermediates/lint_model/release/generateReleaseLintModel/release-artifact-libraries.xml b/node_modules/react-native-svg/android/build/intermediates/lint_model/release/generateReleaseLintModel/release-artifact-libraries.xml
new file mode 100644
index 0000000..f7ed25d
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/lint_model/release/generateReleaseLintModel/release-artifact-libraries.xml
@@ -0,0 +1,774 @@
+<libraries>
+  <library
+      name="com.facebook.react:react-android:0.77.0:release@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/1f2b1630d0b52078c96d5db2d53cc6fc/transformed/react-android-0.77.0-release/jars/classes.jar"
+      resolved="com.facebook.react:react-android:0.77.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/1f2b1630d0b52078c96d5db2d53cc6fc/transformed/react-android-0.77.0-release"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:fresco:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/8fa6c79e978ccd997ec9c9ae15df8a36/transformed/fresco-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:fresco:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/8fa6c79e978ccd997ec9c9ae15df8a36/transformed/fresco-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:imagepipeline-okhttp3:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/ad8cdd699937e012ceaf83ae3aea084d/transformed/imagepipeline-okhttp3-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:imagepipeline-okhttp3:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/ad8cdd699937e012ceaf83ae3aea084d/transformed/imagepipeline-okhttp3-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:middleware:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/6cdd09327166d7317823e80bc0f6d7ab/transformed/middleware-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:middleware:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/6cdd09327166d7317823e80bc0f6d7ab/transformed/middleware-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.appcompat:appcompat:1.6.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/9f5cd5fe79c22d14ad121e3e4fe7b02e/transformed/appcompat-1.6.1/jars/classes.jar"
+      resolved="androidx.appcompat:appcompat:1.6.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/9f5cd5fe79c22d14ad121e3e4fe7b02e/transformed/appcompat-1.6.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.fragment:fragment:1.3.6@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/8c957722b437a87f2f5bb8c226e9a789/transformed/fragment-1.3.6/jars/classes.jar"
+      resolved="androidx.fragment:fragment:1.3.6"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/8c957722b437a87f2f5bb8c226e9a789/transformed/fragment-1.3.6"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.activity:activity:1.6.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/f7672d6f03eee8f0872fe47b144560e4/transformed/activity-1.6.0/jars/classes.jar"
+      resolved="androidx.activity:activity:1.6.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/f7672d6f03eee8f0872fe47b144560e4/transformed/activity-1.6.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.appcompat:appcompat-resources:1.6.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/751d80835a6fd38d4fc0bbd547caabf4/transformed/appcompat-resources-1.6.1/jars/classes.jar"
+      resolved="androidx.appcompat:appcompat-resources:1.6.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/751d80835a6fd38d4fc0bbd547caabf4/transformed/appcompat-resources-1.6.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.swiperefreshlayout:swiperefreshlayout:1.1.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/2057d5b4afe792ab4a18df333709294e/transformed/swiperefreshlayout-1.1.0/jars/classes.jar"
+      resolved="androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/2057d5b4afe792ab4a18df333709294e/transformed/swiperefreshlayout-1.1.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.drawerlayout:drawerlayout:1.0.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/3a333864a86f0e868601bdc3bb35f1f9/transformed/drawerlayout-1.0.0/jars/classes.jar"
+      resolved="androidx.drawerlayout:drawerlayout:1.0.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/3a333864a86f0e868601bdc3bb35f1f9/transformed/drawerlayout-1.0.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.vectordrawable:vectordrawable-animated:1.1.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/f71796eb3c59e242491a8ecfdb205ff7/transformed/vectordrawable-animated-1.1.0/jars/classes.jar"
+      resolved="androidx.vectordrawable:vectordrawable-animated:1.1.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/f71796eb3c59e242491a8ecfdb205ff7/transformed/vectordrawable-animated-1.1.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.vectordrawable:vectordrawable:1.1.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/06914dd44dfd9ca7d8dabc6f51606ca2/transformed/vectordrawable-1.1.0/jars/classes.jar"
+      resolved="androidx.vectordrawable:vectordrawable:1.1.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/06914dd44dfd9ca7d8dabc6f51606ca2/transformed/vectordrawable-1.1.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.viewpager:viewpager:1.0.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/5a3ecf46aaaf46aad67c97e35466348d/transformed/viewpager-1.0.0/jars/classes.jar"
+      resolved="androidx.viewpager:viewpager:1.0.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/5a3ecf46aaaf46aad67c97e35466348d/transformed/viewpager-1.0.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.customview:customview:1.0.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/ea119bc580b68aa60dcba9b5c0c55c2c/transformed/customview-1.0.0/jars/classes.jar"
+      resolved="androidx.customview:customview:1.0.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/ea119bc580b68aa60dcba9b5c0c55c2c/transformed/customview-1.0.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.loader:loader:1.0.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/48880d94270f56fa494304742e07053c/transformed/loader-1.0.0/jars/classes.jar"
+      resolved="androidx.loader:loader:1.0.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/48880d94270f56fa494304742e07053c/transformed/loader-1.0.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.lifecycle:lifecycle-livedata:2.6.2@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/0831e7bb5f94d376ce7ee03208ad2a4f/transformed/lifecycle-livedata-2.6.2/jars/classes.jar"
+      resolved="androidx.lifecycle:lifecycle-livedata:2.6.2"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/0831e7bb5f94d376ce7ee03208ad2a4f/transformed/lifecycle-livedata-2.6.2"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.lifecycle:lifecycle-common:2.6.2@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-common/2.6.2/10f354fdb64868baecd67128560c5a0d6312c495/lifecycle-common-2.6.2.jar"
+      resolved="androidx.lifecycle:lifecycle-common:2.6.2"/>
+  <library
+      name="androidx.lifecycle:lifecycle-livedata-core:2.6.2@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/d71627cd633f99abadf7d011f18ef00e/transformed/lifecycle-livedata-core-2.6.2/jars/classes.jar"
+      resolved="androidx.lifecycle:lifecycle-livedata-core:2.6.2"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/d71627cd633f99abadf7d011f18ef00e/transformed/lifecycle-livedata-core-2.6.2"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/a50c0bc496378b6b758f7544d38af9ad/transformed/lifecycle-viewmodel-2.6.2/jars/classes.jar"
+      resolved="androidx.lifecycle:lifecycle-viewmodel:2.6.2"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/a50c0bc496378b6b758f7544d38af9ad/transformed/lifecycle-viewmodel-2.6.2"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.lifecycle:lifecycle-runtime:2.6.2@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/58bf892659b20379d20db6aad5dd1768/transformed/lifecycle-runtime-2.6.2/jars/classes.jar"
+      resolved="androidx.lifecycle:lifecycle-runtime:2.6.2"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/58bf892659b20379d20db6aad5dd1768/transformed/lifecycle-runtime-2.6.2"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/77bad9b81ab8c457e60798695779ef5d/transformed/lifecycle-viewmodel-savedstate-2.6.2/jars/classes.jar"
+      resolved="androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/77bad9b81ab8c457e60798695779ef5d/transformed/lifecycle-viewmodel-savedstate-2.6.2"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.core:core-ktx:1.13.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/320fc97d608c6d5e2c3e1009afaef9d1/transformed/core-ktx-1.13.1/jars/classes.jar"
+      resolved="androidx.core:core-ktx:1.13.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/320fc97d608c6d5e2c3e1009afaef9d1/transformed/core-ktx-1.13.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.core:core:1.13.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/9c8573ebf274866a9948a2c57ebeeaba/transformed/core-1.13.1/jars/classes.jar"
+      resolved="androidx.core:core:1.13.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/9c8573ebf274866a9948a2c57ebeeaba/transformed/core-1.13.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.cursoradapter:cursoradapter:1.0.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/7be93368a8b3d6fee9cad0d394ba26c8/transformed/cursoradapter-1.0.0/jars/classes.jar"
+      resolved="androidx.cursoradapter:cursoradapter:1.0.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/7be93368a8b3d6fee9cad0d394ba26c8/transformed/cursoradapter-1.0.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.savedstate:savedstate:1.2.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/7118a26a508ea980b3d44982021e025b/transformed/savedstate-1.2.1/jars/classes.jar"
+      resolved="androidx.savedstate:savedstate:1.2.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/7118a26a508ea980b3d44982021e025b/transformed/savedstate-1.2.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.interpolator:interpolator:1.0.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/cdc475d0141114ce2ef43bc809982bc3/transformed/interpolator-1.0.0/jars/classes.jar"
+      resolved="androidx.interpolator:interpolator:1.0.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/cdc475d0141114ce2ef43bc809982bc3/transformed/interpolator-1.0.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.versionedparcelable:versionedparcelable:1.1.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/1fbe4961b298419f5741849f57e50de5/transformed/versionedparcelable-1.1.1/jars/classes.jar"
+      resolved="androidx.versionedparcelable:versionedparcelable:1.1.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/1fbe4961b298419f5741849f57e50de5/transformed/versionedparcelable-1.1.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.collection:collection:1.1.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/androidx.collection/collection/1.1.0/1f27220b47669781457de0d600849a5de0e89909/collection-1.1.0.jar"
+      resolved="androidx.collection:collection:1.1.0"/>
+  <library
+      name="androidx.arch.core:core-runtime:2.2.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/2d0a37949c00e7fe7416c57e68c2b43d/transformed/core-runtime-2.2.0/jars/classes.jar"
+      resolved="androidx.arch.core:core-runtime:2.2.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/2d0a37949c00e7fe7416c57e68c2b43d/transformed/core-runtime-2.2.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.arch.core:core-common:2.2.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/androidx.arch.core/core-common/2.2.0/5e1b8b81dfd5f52c56a8d53b18ca759c19a301f3/core-common-2.2.0.jar"
+      resolved="androidx.arch.core:core-common:2.2.0"/>
+  <library
+      name="androidx.annotation:annotation-jvm:1.6.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/androidx.annotation/annotation-jvm/1.6.0/a7257339a052df0f91433cf9651231bbb802b502/annotation-jvm-1.6.0.jar"
+      resolved="androidx.annotation:annotation-jvm:1.6.0"/>
+  <library
+      name="com.facebook.fresco:ui-common:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/5cdc6f4747e32a58706e6b28feb95a0a/transformed/ui-common-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:ui-common:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/5cdc6f4747e32a58706e6b28feb95a0a/transformed/ui-common-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.squareup.okhttp3:okhttp-urlconnection:4.9.2@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp3/okhttp-urlconnection/4.9.2/3b9e64d3d56370bc7488ed8b336d17a8013cb336/okhttp-urlconnection-4.9.2.jar"
+      resolved="com.squareup.okhttp3:okhttp-urlconnection:4.9.2"/>
+  <library
+      name="com.squareup.okhttp3:okhttp:4.9.2@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp3/okhttp/4.9.2/5302714ee9320b64cf65ed865e5f65981ef9ba46/okhttp-4.9.2.jar"
+      resolved="com.squareup.okhttp3:okhttp:4.9.2"/>
+  <library
+      name="com.squareup.okio:okio:2.9.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.squareup.okio/okio/2.9.0/dcc813b08ce5933f8bdfd1dfbab4ad4bd170e7a/okio-jvm-2.9.0.jar"
+      resolved="com.squareup.okio:okio:2.9.0"/>
+  <library
+      name="com.facebook.fresco:fbcore:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/f5ec147488643a2f1912a3b978473a97/transformed/fbcore-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:fbcore:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/f5ec147488643a2f1912a3b978473a97/transformed/fbcore-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:drawee:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/9d0e1199978fc63cc62a927fef3af0bc/transformed/drawee-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:drawee:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/9d0e1199978fc63cc62a927fef3af0bc/transformed/drawee-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlinx/kotlinx-coroutines-core-jvm/1.6.4/2c997cd1c0ef33f3e751d3831929aeff1390cb30/kotlinx-coroutines-core-jvm-1.6.4.jar"
+      resolved="org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4"/>
+  <library
+      name="org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlinx/kotlinx-coroutines-android/1.6.4/f955fc8b2ad196e2f4429598440e15f7492eeb2b/kotlinx-coroutines-android-1.6.4.jar"
+      resolved="org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"/>
+  <library
+      name="org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk8/1.8.0/ed04f49e186a116753ad70d34f0ac2925d1d8020/kotlin-stdlib-jdk8-1.8.0.jar"
+      resolved="org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0"/>
+  <library
+      name="com.facebook.fresco:ui-core:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/a324e9e59d665bd75bac7d5ee5e3e7d0/transformed/ui-core-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:ui-core:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/a324e9e59d665bd75bac7d5ee5e3e7d0/transformed/ui-core-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:imagepipeline:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/24f7f6236ecf8fb5d4cea8f70b59ad02/transformed/imagepipeline-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:imagepipeline:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/24f7f6236ecf8fb5d4cea8f70b59ad02/transformed/imagepipeline-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:imagepipeline-base:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/8838176c889a4a8cdb2afe6b2ad91662/transformed/imagepipeline-base-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:imagepipeline-base:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/8838176c889a4a8cdb2afe6b2ad91662/transformed/imagepipeline-base-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.annotation:annotation-experimental:1.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/9131425a3b082fe5fdbbae49905d60e1/transformed/annotation-experimental-1.4.0/jars/classes.jar"
+      resolved="androidx.annotation:annotation-experimental:1.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/9131425a3b082fe5fdbbae49905d60e1/transformed/annotation-experimental-1.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk7/1.8.0/3c91271347f678c239607abb676d4032a7898427/kotlin-stdlib-jdk7-1.8.0.jar"
+      resolved="org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0"/>
+  <library
+      name="org.jetbrains.kotlin:kotlin-stdlib:2.0.21@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib/2.0.21/618b539767b4899b4660a83006e052b63f1db551/kotlin-stdlib-2.0.21.jar"
+      resolved="org.jetbrains.kotlin:kotlin-stdlib:2.0.21"/>
+  <library
+      name="org.jetbrains:annotations:13.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains/annotations/13.0/919f0dfe192fb4e063e7dacadee7f8bb9a2672a9/annotations-13.0.jar"
+      resolved="org.jetbrains:annotations:13.0"/>
+  <library
+      name="androidx.tracing:tracing:1.1.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/c173d3a05d8ae46f9797a61de8c24654/transformed/tracing-1.1.0/jars/classes.jar"
+      resolved="androidx.tracing:tracing:1.1.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/c173d3a05d8ae46f9797a61de8c24654/transformed/tracing-1.1.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.autofill:autofill:1.1.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/78de6eb07bdfb23e3bf33a3075baeb8e/transformed/autofill-1.1.0/jars/classes.jar"
+      resolved="androidx.autofill:autofill:1.1.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/78de6eb07bdfb23e3bf33a3075baeb8e/transformed/autofill-1.1.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fbjni:fbjni:0.7.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/ff5571f9fb43ac0a80372e2328c5ae50/transformed/fbjni-0.7.0/jars/classes.jar"
+      resolved="com.facebook.fbjni:fbjni:0.7.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/ff5571f9fb43ac0a80372e2328c5ae50/transformed/fbjni-0.7.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.soloader:soloader:0.12.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/5a8f6ac6cbd5c2257728f8f3593dbb6b/transformed/soloader-0.12.1/jars/classes.jar"
+      resolved="com.facebook.soloader:soloader:0.12.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/5a8f6ac6cbd5c2257728f8f3593dbb6b/transformed/soloader-0.12.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.soloader:nativeloader:0.12.1@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.facebook.soloader/nativeloader/0.12.1/492cc5082540e19b29328f2f56c53255cb6e7cc6/nativeloader-0.12.1.jar"
+      resolved="com.facebook.soloader:nativeloader:0.12.1"/>
+  <library
+      name="com.facebook.soloader:annotation:0.12.1@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.facebook.soloader/annotation/0.12.1/945ada76f62253ba8e72cbf755d0e85ea7362cfe/annotation-0.12.1.jar"
+      resolved="com.facebook.soloader:annotation:0.12.1"/>
+  <library
+      name="com.facebook.infer.annotation:infer-annotation:0.18.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.facebook.infer.annotation/infer-annotation/0.18.0/27539793fe93ed7d92b6376281c16cda8278ab2f/infer-annotation-0.18.0.jar"
+      resolved="com.facebook.infer.annotation:infer-annotation:0.18.0"/>
+  <library
+      name="com.google.code.findbugs:jsr305:3.0.2@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.2/25ea2e8b0c338a877313bd4672d3fe056ea78f0d/jsr305-3.0.2.jar"
+      resolved="com.google.code.findbugs:jsr305:3.0.2"/>
+  <library
+      name="org.jetbrains.kotlin:kotlin-annotations-jvm:1.3.72@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-annotations-jvm/1.3.72/7dba6c57de526588d8080317bda0c14cd88c8055/kotlin-annotations-jvm-1.3.72.jar"
+      resolved="org.jetbrains.kotlin:kotlin-annotations-jvm:1.3.72"/>
+  <library
+      name="com.facebook.fresco:imagepipeline-native:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/a84fad140bb4378719a0df49decab3ca/transformed/imagepipeline-native-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:imagepipeline-native:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/a84fad140bb4378719a0df49decab3ca/transformed/imagepipeline-native-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:memory-type-ashmem:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/39492ef62204605af942174a68a1b4c2/transformed/memory-type-ashmem-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:memory-type-ashmem:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/39492ef62204605af942174a68a1b4c2/transformed/memory-type-ashmem-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:memory-type-native:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/00d70e80496e8e00c919d63a0cfb4e03/transformed/memory-type-native-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:memory-type-native:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/00d70e80496e8e00c919d63a0cfb4e03/transformed/memory-type-native-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:memory-type-java:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/eab88c71c711e9ca5ee90c9c1ff50874/transformed/memory-type-java-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:memory-type-java:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/eab88c71c711e9ca5ee90c9c1ff50874/transformed/memory-type-java-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:nativeimagefilters:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/3ae1960b8853f8ae1c53514a2e6bd179/transformed/nativeimagefilters-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:nativeimagefilters:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/3ae1960b8853f8ae1c53514a2e6bd179/transformed/nativeimagefilters-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:nativeimagetranscoder:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/cb0c5f4d6260f4c6fd1bd226faba0c58/transformed/nativeimagetranscoder-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:nativeimagetranscoder:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/cb0c5f4d6260f4c6fd1bd226faba0c58/transformed/nativeimagetranscoder-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.yoga:proguard-annotations:1.19.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.facebook.yoga/proguard-annotations/1.19.0/fcbbb39052e6490eaaf6a6959c49c3a4fbe87c63/proguard-annotations-1.19.0.jar"
+      resolved="com.facebook.yoga:proguard-annotations:1.19.0"/>
+  <library
+      name="javax.inject:javax.inject:1@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/javax.inject/javax.inject/1/6975da39a7040257bd51d21a231b76c915872d38/javax.inject-1.jar"
+      resolved="javax.inject:javax.inject:1"/>
+  <library
+      name="com.facebook.fresco:urimod:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/5dde2af5a1791363b252b37b8da8b48b/transformed/urimod-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:urimod:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/5dde2af5a1791363b252b37b8da8b48b/transformed/urimod-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:vito-source:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/52b258a0ef5220dc5665ef5c2ecb70f3/transformed/vito-source-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:vito-source:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/52b258a0ef5220dc5665ef5c2ecb70f3/transformed/vito-source-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.emoji2:emoji2-views-helper:1.2.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/80d004c8c82aa0167a0bde157e1dd04f/transformed/emoji2-views-helper-1.2.0/jars/classes.jar"
+      resolved="androidx.emoji2:emoji2-views-helper:1.2.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/80d004c8c82aa0167a0bde157e1dd04f/transformed/emoji2-views-helper-1.2.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.emoji2:emoji2:1.2.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/3d381fd813c7ce65931eeac5163ee6f1/transformed/emoji2-1.2.0/jars/classes.jar:/Users/dhruv/.gradle/caches/8.10.2/transforms/3d381fd813c7ce65931eeac5163ee6f1/transformed/emoji2-1.2.0/jars/libs/repackaged.jar"
+      resolved="androidx.emoji2:emoji2:1.2.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/3d381fd813c7ce65931eeac5163ee6f1/transformed/emoji2-1.2.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:soloader:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/73ce9bca36677147a567806072677148/transformed/soloader-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:soloader:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/73ce9bca36677147a567806072677148/transformed/soloader-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.lifecycle:lifecycle-process:2.6.2@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/2cfaa9d077af9b22c91a3ad07ef73b49/transformed/lifecycle-process-2.6.2/jars/classes.jar"
+      resolved="androidx.lifecycle:lifecycle-process:2.6.2"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/2cfaa9d077af9b22c91a3ad07ef73b49/transformed/lifecycle-process-2.6.2"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.profileinstaller:profileinstaller:1.3.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/2580f2dd50f1d918aa6c95963535720e/transformed/profileinstaller-1.3.0/jars/classes.jar"
+      resolved="androidx.profileinstaller:profileinstaller:1.3.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/2580f2dd50f1d918aa6c95963535720e/transformed/profileinstaller-1.3.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.startup:startup-runtime:1.1.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/bfdcca55b1999c4562423c6cca101a88/transformed/startup-runtime-1.1.1/jars/classes.jar"
+      resolved="androidx.startup:startup-runtime:1.1.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/bfdcca55b1999c4562423c6cca101a88/transformed/startup-runtime-1.1.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.resourceinspection:resourceinspection-annotation:1.0.1@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/androidx.resourceinspection/resourceinspection-annotation/1.0.1/8c21f8ff5d96d5d52c948707f7e4d6ca6773feef/resourceinspection-annotation-1.0.1.jar"
+      resolved="androidx.resourceinspection:resourceinspection-annotation:1.0.1"/>
+  <library
+      name="androidx.concurrent:concurrent-futures:1.1.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/androidx.concurrent/concurrent-futures/1.1.0/50b7fb98350d5f42a4e49704b03278542293ba48/concurrent-futures-1.1.0.jar"
+      resolved="androidx.concurrent:concurrent-futures:1.1.0"/>
+  <library
+      name="com.parse.bolts:bolts-tasks:1.4.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.parse.bolts/bolts-tasks/1.4.0/d85884acf6810a3bbbecb587f239005cbc846dc4/bolts-tasks-1.4.0.jar"
+      resolved="com.parse.bolts:bolts-tasks:1.4.0"/>
+  <library
+      name="com.google.guava:listenablefuture:1.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.google.guava/listenablefuture/1.0/c949a840a6acbc5268d088e47b04177bf90b3cad/listenablefuture-1.0.jar"
+      resolved="com.google.guava:listenablefuture:1.0"/>
+</libraries>
diff --git a/node_modules/react-native-svg/android/build/intermediates/lint_model/release/generateReleaseLintModel/release.xml b/node_modules/react-native-svg/android/build/intermediates/lint_model/release/generateReleaseLintModel/release.xml
new file mode 100644
index 0000000..140e5dc
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/lint_model/release/generateReleaseLintModel/release.xml
@@ -0,0 +1,32 @@
+<variant
+    name="release"
+    package="com.horcrux.svg"
+    minSdkVersion="24"
+    targetSdkVersion="35"
+    mergedManifest="build/intermediates/merged_manifest/release/processReleaseManifest/AndroidManifest.xml"
+    manifestMergeReport="build/outputs/logs/manifest-merger-release-report.txt"
+    proguardFiles="build/intermediates/default_proguard_files/global/proguard-android.txt-8.7.2"
+    consumerProguardFiles="proguard-rules.pro"
+    partialResultsDir="build/intermediates/lint_partial_results/release/lintAnalyzeRelease/out">
+  <buildFeatures
+      namespacing="REQUIRED"/>
+  <sourceProviders>
+    <sourceProvider
+        manifests="src/main/AndroidManifest.xml"
+        javaDirectories="src/main/java:build/generated/source/codegen/java:src/release/java:src/main/kotlin:src/release/kotlin"
+        resDirectories="src/main/res:src/release/res"
+        assetsDirectories="src/main/assets:src/release/assets"/>
+  </sourceProviders>
+  <testSourceProviders>
+  </testSourceProviders>
+  <testFixturesSourceProviders>
+  </testFixturesSourceProviders>
+  <artifact
+      classOutputs="build/intermediates/javac/release/compileReleaseJavaWithJavac/classes:build/intermediates/compile_r_class_jar/release/generateReleaseRFile/R.jar"
+      type="MAIN"
+      applicationId="com.horcrux.svg"
+      generatedSourceFolders="build/generated/ap_generated_sources/release/out:build/generated/source/buildConfig/release"
+      generatedResourceFolders="build/generated/res/resValues/release"
+      desugaredMethodsFiles="/Users/dhruv/.gradle/caches/8.10.2/transforms/b13d2ac641a1f2772971f75d699200bf/transformed/D8BackportedDesugaredMethods.txt">
+  </artifact>
+</variant>
diff --git a/node_modules/react-native-svg/android/build/intermediates/lint_model_metadata/release/writeReleaseLintModelMetadata/lint-model-metadata.properties b/node_modules/react-native-svg/android/build/intermediates/lint_model_metadata/release/writeReleaseLintModelMetadata/lint-model-metadata.properties
new file mode 100644
index 0000000..96fbe16
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/lint_model_metadata/release/writeReleaseLintModelMetadata/lint-model-metadata.properties
@@ -0,0 +1,3 @@
+mavenArtifactId=react-native-svg
+mavenGroupId=TrackaExpense
+mavenVersion=unspecified
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/intermediates/lint_vital_lint_model/release/generateReleaseLintVitalModel/module.xml b/node_modules/react-native-svg/android/build/intermediates/lint_vital_lint_model/release/generateReleaseLintVitalModel/module.xml
new file mode 100644
index 0000000..f4747e0
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/lint_vital_lint_model/release/generateReleaseLintVitalModel/module.xml
@@ -0,0 +1,18 @@
+<lint-module
+    format="1"
+    dir="/Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android"
+    name=":react-native-svg"
+    type="LIBRARY"
+    maven="TrackaExpense:react-native-svg:unspecified"
+    agpVersion="8.7.2"
+    buildFolder="build"
+    bootClassPath="/Users/dhruv/Library/Android/sdk/platforms/android-35/android.jar:/Users/dhruv/Library/Android/sdk/build-tools/34.0.0/core-lambda-stubs.jar"
+    javaSourceLevel="17"
+    compileTarget="android-35"
+    neverShrinking="true">
+  <lintOptions
+      absolutePaths="true"
+      checkReleaseBuilds="true"
+      explainIssues="true"/>
+  <variant name="release"/>
+</lint-module>
diff --git a/node_modules/react-native-svg/android/build/intermediates/lint_vital_lint_model/release/generateReleaseLintVitalModel/release-artifact-dependencies.xml b/node_modules/react-native-svg/android/build/intermediates/lint_vital_lint_model/release/generateReleaseLintVitalModel/release-artifact-dependencies.xml
new file mode 100644
index 0000000..6c262ba
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/lint_vital_lint_model/release/generateReleaseLintVitalModel/release-artifact-dependencies.xml
@@ -0,0 +1,428 @@
+<dependencies>
+  <compile
+      roots="com.facebook.react:react-android:0.77.0:release@aar,com.facebook.fresco:fresco:3.4.0@aar,com.facebook.fresco:imagepipeline-okhttp3:3.4.0@aar,com.facebook.fresco:middleware:3.4.0@aar,androidx.appcompat:appcompat:1.6.1@aar,androidx.fragment:fragment:1.3.6@aar,androidx.activity:activity:1.6.0@aar,androidx.appcompat:appcompat-resources:1.6.1@aar,androidx.swiperefreshlayout:swiperefreshlayout:1.1.0@aar,androidx.drawerlayout:drawerlayout:1.0.0@aar,androidx.vectordrawable:vectordrawable-animated:1.1.0@aar,androidx.vectordrawable:vectordrawable:1.1.0@aar,androidx.viewpager:viewpager:1.0.0@aar,androidx.customview:customview:1.0.0@aar,androidx.loader:loader:1.0.0@aar,androidx.lifecycle:lifecycle-livedata:2.6.2@aar,androidx.lifecycle:lifecycle-common:2.6.2@jar,androidx.lifecycle:lifecycle-livedata-core:2.6.2@aar,androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar,androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar,androidx.lifecycle:lifecycle-runtime:2.6.2@aar,androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2@aar,androidx.core:core-ktx:1.13.1@aar,androidx.core:core:1.13.1@aar,androidx.core:core:1.13.1@aar,androidx.cursoradapter:cursoradapter:1.0.0@aar,androidx.savedstate:savedstate:1.2.1@aar,androidx.interpolator:interpolator:1.0.0@aar,androidx.versionedparcelable:versionedparcelable:1.1.1@aar,androidx.collection:collection:1.1.0@jar,androidx.arch.core:core-runtime:2.2.0@aar,androidx.arch.core:core-common:2.2.0@jar,androidx.annotation:annotation-jvm:1.6.0@jar,com.facebook.fresco:ui-common:3.4.0@aar,com.squareup.okhttp3:okhttp-urlconnection:4.9.2@jar,com.squareup.okhttp3:okhttp:4.9.2@jar,com.squareup.okio:okio:2.9.0@jar,com.facebook.fresco:fbcore:3.4.0@aar,com.facebook.fresco:drawee:3.4.0@aar,org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4@jar,org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4@jar,org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0@jar,com.facebook.fresco:ui-core:3.4.0@aar,com.facebook.fresco:imagepipeline:3.4.0@aar,com.facebook.fresco:imagepipeline-base:3.4.0@aar,androidx.annotation:annotation-experimental:1.4.0@aar,org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0@jar,org.jetbrains.kotlin:kotlin-stdlib:2.0.21@jar,org.jetbrains:annotations:13.0@jar,androidx.tracing:tracing:1.1.0@aar,androidx.autofill:autofill:1.1.0@aar,com.facebook.fbjni:fbjni:0.7.0@aar,com.facebook.soloader:soloader:0.12.1@aar,com.facebook.soloader:nativeloader:0.12.1@jar,com.facebook.soloader:annotation:0.12.1@jar,com.facebook.infer.annotation:infer-annotation:0.18.0@jar,com.google.code.findbugs:jsr305:3.0.2@jar,org.jetbrains.kotlin:kotlin-annotations-jvm:1.3.72@jar,com.facebook.fresco:imagepipeline-native:3.4.0@aar,com.facebook.fresco:memory-type-ashmem:3.4.0@aar,com.facebook.fresco:memory-type-native:3.4.0@aar,com.facebook.fresco:memory-type-java:3.4.0@aar,com.facebook.fresco:nativeimagefilters:3.4.0@aar,com.facebook.fresco:nativeimagetranscoder:3.4.0@aar,com.facebook.yoga:proguard-annotations:1.19.0@jar,javax.inject:javax.inject:1@jar">
+    <dependency
+        name="com.facebook.react:react-android:0.77.0:release@aar"
+        simpleName="com.facebook.react:react-android"/>
+    <dependency
+        name="com.facebook.fresco:fresco:3.4.0@aar"
+        simpleName="com.facebook.fresco:fresco"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline-okhttp3:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline-okhttp3"/>
+    <dependency
+        name="com.facebook.fresco:middleware:3.4.0@aar"
+        simpleName="com.facebook.fresco:middleware"/>
+    <dependency
+        name="androidx.appcompat:appcompat:1.6.1@aar"
+        simpleName="androidx.appcompat:appcompat"/>
+    <dependency
+        name="androidx.fragment:fragment:1.3.6@aar"
+        simpleName="androidx.fragment:fragment"/>
+    <dependency
+        name="androidx.activity:activity:1.6.0@aar"
+        simpleName="androidx.activity:activity"/>
+    <dependency
+        name="androidx.appcompat:appcompat-resources:1.6.1@aar"
+        simpleName="androidx.appcompat:appcompat-resources"/>
+    <dependency
+        name="androidx.swiperefreshlayout:swiperefreshlayout:1.1.0@aar"
+        simpleName="androidx.swiperefreshlayout:swiperefreshlayout"/>
+    <dependency
+        name="androidx.drawerlayout:drawerlayout:1.0.0@aar"
+        simpleName="androidx.drawerlayout:drawerlayout"/>
+    <dependency
+        name="androidx.vectordrawable:vectordrawable-animated:1.1.0@aar"
+        simpleName="androidx.vectordrawable:vectordrawable-animated"/>
+    <dependency
+        name="androidx.vectordrawable:vectordrawable:1.1.0@aar"
+        simpleName="androidx.vectordrawable:vectordrawable"/>
+    <dependency
+        name="androidx.viewpager:viewpager:1.0.0@aar"
+        simpleName="androidx.viewpager:viewpager"/>
+    <dependency
+        name="androidx.customview:customview:1.0.0@aar"
+        simpleName="androidx.customview:customview"/>
+    <dependency
+        name="androidx.loader:loader:1.0.0@aar"
+        simpleName="androidx.loader:loader"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-livedata:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-livedata"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-common:2.6.2@jar"
+        simpleName="androidx.lifecycle:lifecycle-common"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-livedata-core:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-livedata-core"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-viewmodel"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-runtime:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-runtime"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-viewmodel-savedstate"/>
+    <dependency
+        name="androidx.core:core-ktx:1.13.1@aar"
+        simpleName="androidx.core:core-ktx"/>
+    <dependency
+        name="androidx.core:core:1.13.1@aar"
+        simpleName="androidx.core:core"/>
+    <dependency
+        name="androidx.cursoradapter:cursoradapter:1.0.0@aar"
+        simpleName="androidx.cursoradapter:cursoradapter"/>
+    <dependency
+        name="androidx.savedstate:savedstate:1.2.1@aar"
+        simpleName="androidx.savedstate:savedstate"/>
+    <dependency
+        name="androidx.interpolator:interpolator:1.0.0@aar"
+        simpleName="androidx.interpolator:interpolator"/>
+    <dependency
+        name="androidx.versionedparcelable:versionedparcelable:1.1.1@aar"
+        simpleName="androidx.versionedparcelable:versionedparcelable"/>
+    <dependency
+        name="androidx.collection:collection:1.1.0@jar"
+        simpleName="androidx.collection:collection"/>
+    <dependency
+        name="androidx.arch.core:core-runtime:2.2.0@aar"
+        simpleName="androidx.arch.core:core-runtime"/>
+    <dependency
+        name="androidx.arch.core:core-common:2.2.0@jar"
+        simpleName="androidx.arch.core:core-common"/>
+    <dependency
+        name="androidx.annotation:annotation-jvm:1.6.0@jar"
+        simpleName="androidx.annotation:annotation-jvm"/>
+    <dependency
+        name="com.facebook.fresco:ui-common:3.4.0@aar"
+        simpleName="com.facebook.fresco:ui-common"/>
+    <dependency
+        name="com.squareup.okhttp3:okhttp-urlconnection:4.9.2@jar"
+        simpleName="com.squareup.okhttp3:okhttp-urlconnection"/>
+    <dependency
+        name="com.squareup.okhttp3:okhttp:4.9.2@jar"
+        simpleName="com.squareup.okhttp3:okhttp"/>
+    <dependency
+        name="com.squareup.okio:okio:2.9.0@jar"
+        simpleName="com.squareup.okio:okio"/>
+    <dependency
+        name="com.facebook.fresco:fbcore:3.4.0@aar"
+        simpleName="com.facebook.fresco:fbcore"/>
+    <dependency
+        name="com.facebook.fresco:drawee:3.4.0@aar"
+        simpleName="com.facebook.fresco:drawee"/>
+    <dependency
+        name="org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4@jar"
+        simpleName="org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm"/>
+    <dependency
+        name="org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4@jar"
+        simpleName="org.jetbrains.kotlinx:kotlinx-coroutines-android"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-stdlib-jdk8"/>
+    <dependency
+        name="com.facebook.fresco:ui-core:3.4.0@aar"
+        simpleName="com.facebook.fresco:ui-core"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline-base:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline-base"/>
+    <dependency
+        name="androidx.annotation:annotation-experimental:1.4.0@aar"
+        simpleName="androidx.annotation:annotation-experimental"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-stdlib-jdk7"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-stdlib:2.0.21@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-stdlib"/>
+    <dependency
+        name="org.jetbrains:annotations:13.0@jar"
+        simpleName="org.jetbrains:annotations"/>
+    <dependency
+        name="androidx.tracing:tracing:1.1.0@aar"
+        simpleName="androidx.tracing:tracing"/>
+    <dependency
+        name="androidx.autofill:autofill:1.1.0@aar"
+        simpleName="androidx.autofill:autofill"/>
+    <dependency
+        name="com.facebook.fbjni:fbjni:0.7.0@aar"
+        simpleName="com.facebook.fbjni:fbjni"/>
+    <dependency
+        name="com.facebook.soloader:soloader:0.12.1@aar"
+        simpleName="com.facebook.soloader:soloader"/>
+    <dependency
+        name="com.facebook.soloader:nativeloader:0.12.1@jar"
+        simpleName="com.facebook.soloader:nativeloader"/>
+    <dependency
+        name="com.facebook.soloader:annotation:0.12.1@jar"
+        simpleName="com.facebook.soloader:annotation"/>
+    <dependency
+        name="com.facebook.infer.annotation:infer-annotation:0.18.0@jar"
+        simpleName="com.facebook.infer.annotation:infer-annotation"/>
+    <dependency
+        name="com.google.code.findbugs:jsr305:3.0.2@jar"
+        simpleName="com.google.code.findbugs:jsr305"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-annotations-jvm:1.3.72@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-annotations-jvm"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline-native:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline-native"/>
+    <dependency
+        name="com.facebook.fresco:memory-type-ashmem:3.4.0@aar"
+        simpleName="com.facebook.fresco:memory-type-ashmem"/>
+    <dependency
+        name="com.facebook.fresco:memory-type-native:3.4.0@aar"
+        simpleName="com.facebook.fresco:memory-type-native"/>
+    <dependency
+        name="com.facebook.fresco:memory-type-java:3.4.0@aar"
+        simpleName="com.facebook.fresco:memory-type-java"/>
+    <dependency
+        name="com.facebook.fresco:nativeimagefilters:3.4.0@aar"
+        simpleName="com.facebook.fresco:nativeimagefilters"/>
+    <dependency
+        name="com.facebook.fresco:nativeimagetranscoder:3.4.0@aar"
+        simpleName="com.facebook.fresco:nativeimagetranscoder"/>
+    <dependency
+        name="com.facebook.yoga:proguard-annotations:1.19.0@jar"
+        simpleName="com.facebook.yoga:proguard-annotations"/>
+    <dependency
+        name="javax.inject:javax.inject:1@jar"
+        simpleName="javax.inject:javax.inject"/>
+  </compile>
+  <package
+      roots="com.facebook.react:react-android:0.77.0:release@aar,com.facebook.fresco:fresco:3.4.0@aar,com.facebook.fresco:imagepipeline-okhttp3:3.4.0@aar,com.facebook.fresco:drawee:3.4.0@aar,com.facebook.fresco:nativeimagefilters:3.4.0@aar,com.facebook.fresco:memory-type-native:3.4.0@aar,com.facebook.fresco:memory-type-java:3.4.0@aar,com.facebook.fresco:imagepipeline-native:3.4.0@aar,com.facebook.fresco:memory-type-ashmem:3.4.0@aar,com.facebook.fresco:imagepipeline:3.4.0@aar,com.facebook.fresco:nativeimagetranscoder:3.4.0@aar,com.facebook.fresco:imagepipeline-base:3.4.0@aar,com.facebook.fresco:urimod:3.4.0@aar,com.facebook.fresco:vito-source:3.4.0@aar,com.facebook.fresco:middleware:3.4.0@aar,androidx.appcompat:appcompat-resources:1.6.1@aar,androidx.appcompat:appcompat:1.6.1@aar,androidx.autofill:autofill:1.1.0@aar,androidx.swiperefreshlayout:swiperefreshlayout:1.1.0@aar,androidx.fragment:fragment:1.3.6@aar,androidx.activity:activity:1.6.0@aar,androidx.emoji2:emoji2-views-helper:1.2.0@aar,androidx.emoji2:emoji2:1.2.0@aar,com.facebook.fresco:ui-common:3.4.0@aar,com.facebook.fresco:soloader:3.4.0@aar,com.facebook.fresco:fbcore:3.4.0@aar,androidx.drawerlayout:drawerlayout:1.0.0@aar,androidx.vectordrawable:vectordrawable-animated:1.1.0@aar,androidx.vectordrawable:vectordrawable:1.1.0@aar,androidx.viewpager:viewpager:1.0.0@aar,androidx.customview:customview:1.0.0@aar,androidx.loader:loader:1.0.0@aar,androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar,androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar,androidx.lifecycle:lifecycle-livedata-core:2.6.2@aar,androidx.lifecycle:lifecycle-livedata:2.6.2@aar,androidx.savedstate:savedstate:1.2.1@aar,androidx.lifecycle:lifecycle-common:2.6.2@jar,androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2@aar,androidx.core:core-ktx:1.13.1@aar,androidx.core:core:1.13.1@aar,androidx.core:core:1.13.1@aar,androidx.lifecycle:lifecycle-runtime:2.6.2@aar,androidx.lifecycle:lifecycle-process:2.6.2@aar,androidx.profileinstaller:profileinstaller:1.3.0@aar,androidx.startup:startup-runtime:1.1.1@aar,androidx.tracing:tracing:1.1.0@aar,com.facebook.fbjni:fbjni:0.7.0@aar,com.facebook.infer.annotation:infer-annotation:0.18.0@jar,com.facebook.soloader:soloader:0.12.1@aar,com.facebook.yoga:proguard-annotations:1.19.0@jar,com.google.code.findbugs:jsr305:3.0.2@jar,com.squareup.okhttp3:okhttp-urlconnection:4.9.2@jar,com.squareup.okhttp3:okhttp:4.9.2@jar,com.squareup.okio:okio:2.9.0@jar,javax.inject:javax.inject:1@jar,com.facebook.fresco:ui-core:3.4.0@aar,org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4@jar,org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4@jar,org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0@jar,org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0@jar,androidx.annotation:annotation-experimental:1.4.0@aar,androidx.cursoradapter:cursoradapter:1.0.0@aar,androidx.resourceinspection:resourceinspection-annotation:1.0.1@jar,androidx.interpolator:interpolator:1.0.0@aar,androidx.versionedparcelable:versionedparcelable:1.1.1@aar,androidx.collection:collection:1.1.0@jar,androidx.arch.core:core-runtime:2.2.0@aar,androidx.arch.core:core-common:2.2.0@jar,androidx.concurrent:concurrent-futures:1.1.0@jar,androidx.annotation:annotation-jvm:1.6.0@jar,org.jetbrains.kotlin:kotlin-stdlib:2.0.21@jar,com.facebook.soloader:nativeloader:0.12.1@jar,org.jetbrains.kotlin:kotlin-annotations-jvm:1.3.72@jar,com.facebook.soloader:annotation:0.12.1@jar,org.jetbrains:annotations:13.0@jar,com.parse.bolts:bolts-tasks:1.4.0@jar,com.google.guava:listenablefuture:1.0@jar">
+    <dependency
+        name="com.facebook.react:react-android:0.77.0:release@aar"
+        simpleName="com.facebook.react:react-android"/>
+    <dependency
+        name="com.facebook.fresco:fresco:3.4.0@aar"
+        simpleName="com.facebook.fresco:fresco"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline-okhttp3:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline-okhttp3"/>
+    <dependency
+        name="com.facebook.fresco:drawee:3.4.0@aar"
+        simpleName="com.facebook.fresco:drawee"/>
+    <dependency
+        name="com.facebook.fresco:nativeimagefilters:3.4.0@aar"
+        simpleName="com.facebook.fresco:nativeimagefilters"/>
+    <dependency
+        name="com.facebook.fresco:memory-type-native:3.4.0@aar"
+        simpleName="com.facebook.fresco:memory-type-native"/>
+    <dependency
+        name="com.facebook.fresco:memory-type-java:3.4.0@aar"
+        simpleName="com.facebook.fresco:memory-type-java"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline-native:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline-native"/>
+    <dependency
+        name="com.facebook.fresco:memory-type-ashmem:3.4.0@aar"
+        simpleName="com.facebook.fresco:memory-type-ashmem"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline"/>
+    <dependency
+        name="com.facebook.fresco:nativeimagetranscoder:3.4.0@aar"
+        simpleName="com.facebook.fresco:nativeimagetranscoder"/>
+    <dependency
+        name="com.facebook.fresco:imagepipeline-base:3.4.0@aar"
+        simpleName="com.facebook.fresco:imagepipeline-base"/>
+    <dependency
+        name="com.facebook.fresco:urimod:3.4.0@aar"
+        simpleName="com.facebook.fresco:urimod"/>
+    <dependency
+        name="com.facebook.fresco:vito-source:3.4.0@aar"
+        simpleName="com.facebook.fresco:vito-source"/>
+    <dependency
+        name="com.facebook.fresco:middleware:3.4.0@aar"
+        simpleName="com.facebook.fresco:middleware"/>
+    <dependency
+        name="androidx.appcompat:appcompat-resources:1.6.1@aar"
+        simpleName="androidx.appcompat:appcompat-resources"/>
+    <dependency
+        name="androidx.appcompat:appcompat:1.6.1@aar"
+        simpleName="androidx.appcompat:appcompat"/>
+    <dependency
+        name="androidx.autofill:autofill:1.1.0@aar"
+        simpleName="androidx.autofill:autofill"/>
+    <dependency
+        name="androidx.swiperefreshlayout:swiperefreshlayout:1.1.0@aar"
+        simpleName="androidx.swiperefreshlayout:swiperefreshlayout"/>
+    <dependency
+        name="androidx.fragment:fragment:1.3.6@aar"
+        simpleName="androidx.fragment:fragment"/>
+    <dependency
+        name="androidx.activity:activity:1.6.0@aar"
+        simpleName="androidx.activity:activity"/>
+    <dependency
+        name="androidx.emoji2:emoji2-views-helper:1.2.0@aar"
+        simpleName="androidx.emoji2:emoji2-views-helper"/>
+    <dependency
+        name="androidx.emoji2:emoji2:1.2.0@aar"
+        simpleName="androidx.emoji2:emoji2"/>
+    <dependency
+        name="com.facebook.fresco:ui-common:3.4.0@aar"
+        simpleName="com.facebook.fresco:ui-common"/>
+    <dependency
+        name="com.facebook.fresco:soloader:3.4.0@aar"
+        simpleName="com.facebook.fresco:soloader"/>
+    <dependency
+        name="com.facebook.fresco:fbcore:3.4.0@aar"
+        simpleName="com.facebook.fresco:fbcore"/>
+    <dependency
+        name="androidx.drawerlayout:drawerlayout:1.0.0@aar"
+        simpleName="androidx.drawerlayout:drawerlayout"/>
+    <dependency
+        name="androidx.vectordrawable:vectordrawable-animated:1.1.0@aar"
+        simpleName="androidx.vectordrawable:vectordrawable-animated"/>
+    <dependency
+        name="androidx.vectordrawable:vectordrawable:1.1.0@aar"
+        simpleName="androidx.vectordrawable:vectordrawable"/>
+    <dependency
+        name="androidx.viewpager:viewpager:1.0.0@aar"
+        simpleName="androidx.viewpager:viewpager"/>
+    <dependency
+        name="androidx.customview:customview:1.0.0@aar"
+        simpleName="androidx.customview:customview"/>
+    <dependency
+        name="androidx.loader:loader:1.0.0@aar"
+        simpleName="androidx.loader:loader"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-viewmodel"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-livedata-core:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-livedata-core"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-livedata:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-livedata"/>
+    <dependency
+        name="androidx.savedstate:savedstate:1.2.1@aar"
+        simpleName="androidx.savedstate:savedstate"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-common:2.6.2@jar"
+        simpleName="androidx.lifecycle:lifecycle-common"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-viewmodel-savedstate"/>
+    <dependency
+        name="androidx.core:core-ktx:1.13.1@aar"
+        simpleName="androidx.core:core-ktx"/>
+    <dependency
+        name="androidx.core:core:1.13.1@aar"
+        simpleName="androidx.core:core"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-runtime:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-runtime"/>
+    <dependency
+        name="androidx.lifecycle:lifecycle-process:2.6.2@aar"
+        simpleName="androidx.lifecycle:lifecycle-process"/>
+    <dependency
+        name="androidx.profileinstaller:profileinstaller:1.3.0@aar"
+        simpleName="androidx.profileinstaller:profileinstaller"/>
+    <dependency
+        name="androidx.startup:startup-runtime:1.1.1@aar"
+        simpleName="androidx.startup:startup-runtime"/>
+    <dependency
+        name="androidx.tracing:tracing:1.1.0@aar"
+        simpleName="androidx.tracing:tracing"/>
+    <dependency
+        name="com.facebook.fbjni:fbjni:0.7.0@aar"
+        simpleName="com.facebook.fbjni:fbjni"/>
+    <dependency
+        name="com.facebook.infer.annotation:infer-annotation:0.18.0@jar"
+        simpleName="com.facebook.infer.annotation:infer-annotation"/>
+    <dependency
+        name="com.facebook.soloader:soloader:0.12.1@aar"
+        simpleName="com.facebook.soloader:soloader"/>
+    <dependency
+        name="com.facebook.yoga:proguard-annotations:1.19.0@jar"
+        simpleName="com.facebook.yoga:proguard-annotations"/>
+    <dependency
+        name="com.google.code.findbugs:jsr305:3.0.2@jar"
+        simpleName="com.google.code.findbugs:jsr305"/>
+    <dependency
+        name="com.squareup.okhttp3:okhttp-urlconnection:4.9.2@jar"
+        simpleName="com.squareup.okhttp3:okhttp-urlconnection"/>
+    <dependency
+        name="com.squareup.okhttp3:okhttp:4.9.2@jar"
+        simpleName="com.squareup.okhttp3:okhttp"/>
+    <dependency
+        name="com.squareup.okio:okio:2.9.0@jar"
+        simpleName="com.squareup.okio:okio"/>
+    <dependency
+        name="javax.inject:javax.inject:1@jar"
+        simpleName="javax.inject:javax.inject"/>
+    <dependency
+        name="com.facebook.fresco:ui-core:3.4.0@aar"
+        simpleName="com.facebook.fresco:ui-core"/>
+    <dependency
+        name="org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4@jar"
+        simpleName="org.jetbrains.kotlinx:kotlinx-coroutines-android"/>
+    <dependency
+        name="org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4@jar"
+        simpleName="org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-stdlib-jdk8"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-stdlib-jdk7"/>
+    <dependency
+        name="androidx.annotation:annotation-experimental:1.4.0@aar"
+        simpleName="androidx.annotation:annotation-experimental"/>
+    <dependency
+        name="androidx.cursoradapter:cursoradapter:1.0.0@aar"
+        simpleName="androidx.cursoradapter:cursoradapter"/>
+    <dependency
+        name="androidx.resourceinspection:resourceinspection-annotation:1.0.1@jar"
+        simpleName="androidx.resourceinspection:resourceinspection-annotation"/>
+    <dependency
+        name="androidx.interpolator:interpolator:1.0.0@aar"
+        simpleName="androidx.interpolator:interpolator"/>
+    <dependency
+        name="androidx.versionedparcelable:versionedparcelable:1.1.1@aar"
+        simpleName="androidx.versionedparcelable:versionedparcelable"/>
+    <dependency
+        name="androidx.collection:collection:1.1.0@jar"
+        simpleName="androidx.collection:collection"/>
+    <dependency
+        name="androidx.arch.core:core-runtime:2.2.0@aar"
+        simpleName="androidx.arch.core:core-runtime"/>
+    <dependency
+        name="androidx.arch.core:core-common:2.2.0@jar"
+        simpleName="androidx.arch.core:core-common"/>
+    <dependency
+        name="androidx.concurrent:concurrent-futures:1.1.0@jar"
+        simpleName="androidx.concurrent:concurrent-futures"/>
+    <dependency
+        name="androidx.annotation:annotation-jvm:1.6.0@jar"
+        simpleName="androidx.annotation:annotation-jvm"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-stdlib:2.0.21@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-stdlib"/>
+    <dependency
+        name="com.facebook.soloader:nativeloader:0.12.1@jar"
+        simpleName="com.facebook.soloader:nativeloader"/>
+    <dependency
+        name="org.jetbrains.kotlin:kotlin-annotations-jvm:1.3.72@jar"
+        simpleName="org.jetbrains.kotlin:kotlin-annotations-jvm"/>
+    <dependency
+        name="com.facebook.soloader:annotation:0.12.1@jar"
+        simpleName="com.facebook.soloader:annotation"/>
+    <dependency
+        name="org.jetbrains:annotations:13.0@jar"
+        simpleName="org.jetbrains:annotations"/>
+    <dependency
+        name="com.parse.bolts:bolts-tasks:1.4.0@jar"
+        simpleName="com.parse.bolts:bolts-tasks"/>
+    <dependency
+        name="com.google.guava:listenablefuture:1.0@jar"
+        simpleName="com.google.guava:listenablefuture"/>
+  </package>
+</dependencies>
diff --git a/node_modules/react-native-svg/android/build/intermediates/lint_vital_lint_model/release/generateReleaseLintVitalModel/release-artifact-libraries.xml b/node_modules/react-native-svg/android/build/intermediates/lint_vital_lint_model/release/generateReleaseLintVitalModel/release-artifact-libraries.xml
new file mode 100644
index 0000000..f7ed25d
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/lint_vital_lint_model/release/generateReleaseLintVitalModel/release-artifact-libraries.xml
@@ -0,0 +1,774 @@
+<libraries>
+  <library
+      name="com.facebook.react:react-android:0.77.0:release@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/1f2b1630d0b52078c96d5db2d53cc6fc/transformed/react-android-0.77.0-release/jars/classes.jar"
+      resolved="com.facebook.react:react-android:0.77.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/1f2b1630d0b52078c96d5db2d53cc6fc/transformed/react-android-0.77.0-release"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:fresco:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/8fa6c79e978ccd997ec9c9ae15df8a36/transformed/fresco-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:fresco:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/8fa6c79e978ccd997ec9c9ae15df8a36/transformed/fresco-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:imagepipeline-okhttp3:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/ad8cdd699937e012ceaf83ae3aea084d/transformed/imagepipeline-okhttp3-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:imagepipeline-okhttp3:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/ad8cdd699937e012ceaf83ae3aea084d/transformed/imagepipeline-okhttp3-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:middleware:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/6cdd09327166d7317823e80bc0f6d7ab/transformed/middleware-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:middleware:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/6cdd09327166d7317823e80bc0f6d7ab/transformed/middleware-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.appcompat:appcompat:1.6.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/9f5cd5fe79c22d14ad121e3e4fe7b02e/transformed/appcompat-1.6.1/jars/classes.jar"
+      resolved="androidx.appcompat:appcompat:1.6.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/9f5cd5fe79c22d14ad121e3e4fe7b02e/transformed/appcompat-1.6.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.fragment:fragment:1.3.6@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/8c957722b437a87f2f5bb8c226e9a789/transformed/fragment-1.3.6/jars/classes.jar"
+      resolved="androidx.fragment:fragment:1.3.6"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/8c957722b437a87f2f5bb8c226e9a789/transformed/fragment-1.3.6"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.activity:activity:1.6.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/f7672d6f03eee8f0872fe47b144560e4/transformed/activity-1.6.0/jars/classes.jar"
+      resolved="androidx.activity:activity:1.6.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/f7672d6f03eee8f0872fe47b144560e4/transformed/activity-1.6.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.appcompat:appcompat-resources:1.6.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/751d80835a6fd38d4fc0bbd547caabf4/transformed/appcompat-resources-1.6.1/jars/classes.jar"
+      resolved="androidx.appcompat:appcompat-resources:1.6.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/751d80835a6fd38d4fc0bbd547caabf4/transformed/appcompat-resources-1.6.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.swiperefreshlayout:swiperefreshlayout:1.1.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/2057d5b4afe792ab4a18df333709294e/transformed/swiperefreshlayout-1.1.0/jars/classes.jar"
+      resolved="androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/2057d5b4afe792ab4a18df333709294e/transformed/swiperefreshlayout-1.1.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.drawerlayout:drawerlayout:1.0.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/3a333864a86f0e868601bdc3bb35f1f9/transformed/drawerlayout-1.0.0/jars/classes.jar"
+      resolved="androidx.drawerlayout:drawerlayout:1.0.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/3a333864a86f0e868601bdc3bb35f1f9/transformed/drawerlayout-1.0.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.vectordrawable:vectordrawable-animated:1.1.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/f71796eb3c59e242491a8ecfdb205ff7/transformed/vectordrawable-animated-1.1.0/jars/classes.jar"
+      resolved="androidx.vectordrawable:vectordrawable-animated:1.1.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/f71796eb3c59e242491a8ecfdb205ff7/transformed/vectordrawable-animated-1.1.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.vectordrawable:vectordrawable:1.1.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/06914dd44dfd9ca7d8dabc6f51606ca2/transformed/vectordrawable-1.1.0/jars/classes.jar"
+      resolved="androidx.vectordrawable:vectordrawable:1.1.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/06914dd44dfd9ca7d8dabc6f51606ca2/transformed/vectordrawable-1.1.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.viewpager:viewpager:1.0.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/5a3ecf46aaaf46aad67c97e35466348d/transformed/viewpager-1.0.0/jars/classes.jar"
+      resolved="androidx.viewpager:viewpager:1.0.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/5a3ecf46aaaf46aad67c97e35466348d/transformed/viewpager-1.0.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.customview:customview:1.0.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/ea119bc580b68aa60dcba9b5c0c55c2c/transformed/customview-1.0.0/jars/classes.jar"
+      resolved="androidx.customview:customview:1.0.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/ea119bc580b68aa60dcba9b5c0c55c2c/transformed/customview-1.0.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.loader:loader:1.0.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/48880d94270f56fa494304742e07053c/transformed/loader-1.0.0/jars/classes.jar"
+      resolved="androidx.loader:loader:1.0.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/48880d94270f56fa494304742e07053c/transformed/loader-1.0.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.lifecycle:lifecycle-livedata:2.6.2@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/0831e7bb5f94d376ce7ee03208ad2a4f/transformed/lifecycle-livedata-2.6.2/jars/classes.jar"
+      resolved="androidx.lifecycle:lifecycle-livedata:2.6.2"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/0831e7bb5f94d376ce7ee03208ad2a4f/transformed/lifecycle-livedata-2.6.2"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.lifecycle:lifecycle-common:2.6.2@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-common/2.6.2/10f354fdb64868baecd67128560c5a0d6312c495/lifecycle-common-2.6.2.jar"
+      resolved="androidx.lifecycle:lifecycle-common:2.6.2"/>
+  <library
+      name="androidx.lifecycle:lifecycle-livedata-core:2.6.2@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/d71627cd633f99abadf7d011f18ef00e/transformed/lifecycle-livedata-core-2.6.2/jars/classes.jar"
+      resolved="androidx.lifecycle:lifecycle-livedata-core:2.6.2"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/d71627cd633f99abadf7d011f18ef00e/transformed/lifecycle-livedata-core-2.6.2"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.lifecycle:lifecycle-viewmodel:2.6.2@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/a50c0bc496378b6b758f7544d38af9ad/transformed/lifecycle-viewmodel-2.6.2/jars/classes.jar"
+      resolved="androidx.lifecycle:lifecycle-viewmodel:2.6.2"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/a50c0bc496378b6b758f7544d38af9ad/transformed/lifecycle-viewmodel-2.6.2"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.lifecycle:lifecycle-runtime:2.6.2@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/58bf892659b20379d20db6aad5dd1768/transformed/lifecycle-runtime-2.6.2/jars/classes.jar"
+      resolved="androidx.lifecycle:lifecycle-runtime:2.6.2"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/58bf892659b20379d20db6aad5dd1768/transformed/lifecycle-runtime-2.6.2"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/77bad9b81ab8c457e60798695779ef5d/transformed/lifecycle-viewmodel-savedstate-2.6.2/jars/classes.jar"
+      resolved="androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/77bad9b81ab8c457e60798695779ef5d/transformed/lifecycle-viewmodel-savedstate-2.6.2"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.core:core-ktx:1.13.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/320fc97d608c6d5e2c3e1009afaef9d1/transformed/core-ktx-1.13.1/jars/classes.jar"
+      resolved="androidx.core:core-ktx:1.13.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/320fc97d608c6d5e2c3e1009afaef9d1/transformed/core-ktx-1.13.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.core:core:1.13.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/9c8573ebf274866a9948a2c57ebeeaba/transformed/core-1.13.1/jars/classes.jar"
+      resolved="androidx.core:core:1.13.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/9c8573ebf274866a9948a2c57ebeeaba/transformed/core-1.13.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.cursoradapter:cursoradapter:1.0.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/7be93368a8b3d6fee9cad0d394ba26c8/transformed/cursoradapter-1.0.0/jars/classes.jar"
+      resolved="androidx.cursoradapter:cursoradapter:1.0.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/7be93368a8b3d6fee9cad0d394ba26c8/transformed/cursoradapter-1.0.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.savedstate:savedstate:1.2.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/7118a26a508ea980b3d44982021e025b/transformed/savedstate-1.2.1/jars/classes.jar"
+      resolved="androidx.savedstate:savedstate:1.2.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/7118a26a508ea980b3d44982021e025b/transformed/savedstate-1.2.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.interpolator:interpolator:1.0.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/cdc475d0141114ce2ef43bc809982bc3/transformed/interpolator-1.0.0/jars/classes.jar"
+      resolved="androidx.interpolator:interpolator:1.0.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/cdc475d0141114ce2ef43bc809982bc3/transformed/interpolator-1.0.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.versionedparcelable:versionedparcelable:1.1.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/1fbe4961b298419f5741849f57e50de5/transformed/versionedparcelable-1.1.1/jars/classes.jar"
+      resolved="androidx.versionedparcelable:versionedparcelable:1.1.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/1fbe4961b298419f5741849f57e50de5/transformed/versionedparcelable-1.1.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.collection:collection:1.1.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/androidx.collection/collection/1.1.0/1f27220b47669781457de0d600849a5de0e89909/collection-1.1.0.jar"
+      resolved="androidx.collection:collection:1.1.0"/>
+  <library
+      name="androidx.arch.core:core-runtime:2.2.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/2d0a37949c00e7fe7416c57e68c2b43d/transformed/core-runtime-2.2.0/jars/classes.jar"
+      resolved="androidx.arch.core:core-runtime:2.2.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/2d0a37949c00e7fe7416c57e68c2b43d/transformed/core-runtime-2.2.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.arch.core:core-common:2.2.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/androidx.arch.core/core-common/2.2.0/5e1b8b81dfd5f52c56a8d53b18ca759c19a301f3/core-common-2.2.0.jar"
+      resolved="androidx.arch.core:core-common:2.2.0"/>
+  <library
+      name="androidx.annotation:annotation-jvm:1.6.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/androidx.annotation/annotation-jvm/1.6.0/a7257339a052df0f91433cf9651231bbb802b502/annotation-jvm-1.6.0.jar"
+      resolved="androidx.annotation:annotation-jvm:1.6.0"/>
+  <library
+      name="com.facebook.fresco:ui-common:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/5cdc6f4747e32a58706e6b28feb95a0a/transformed/ui-common-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:ui-common:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/5cdc6f4747e32a58706e6b28feb95a0a/transformed/ui-common-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.squareup.okhttp3:okhttp-urlconnection:4.9.2@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp3/okhttp-urlconnection/4.9.2/3b9e64d3d56370bc7488ed8b336d17a8013cb336/okhttp-urlconnection-4.9.2.jar"
+      resolved="com.squareup.okhttp3:okhttp-urlconnection:4.9.2"/>
+  <library
+      name="com.squareup.okhttp3:okhttp:4.9.2@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp3/okhttp/4.9.2/5302714ee9320b64cf65ed865e5f65981ef9ba46/okhttp-4.9.2.jar"
+      resolved="com.squareup.okhttp3:okhttp:4.9.2"/>
+  <library
+      name="com.squareup.okio:okio:2.9.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.squareup.okio/okio/2.9.0/dcc813b08ce5933f8bdfd1dfbab4ad4bd170e7a/okio-jvm-2.9.0.jar"
+      resolved="com.squareup.okio:okio:2.9.0"/>
+  <library
+      name="com.facebook.fresco:fbcore:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/f5ec147488643a2f1912a3b978473a97/transformed/fbcore-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:fbcore:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/f5ec147488643a2f1912a3b978473a97/transformed/fbcore-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:drawee:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/9d0e1199978fc63cc62a927fef3af0bc/transformed/drawee-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:drawee:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/9d0e1199978fc63cc62a927fef3af0bc/transformed/drawee-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlinx/kotlinx-coroutines-core-jvm/1.6.4/2c997cd1c0ef33f3e751d3831929aeff1390cb30/kotlinx-coroutines-core-jvm-1.6.4.jar"
+      resolved="org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4"/>
+  <library
+      name="org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlinx/kotlinx-coroutines-android/1.6.4/f955fc8b2ad196e2f4429598440e15f7492eeb2b/kotlinx-coroutines-android-1.6.4.jar"
+      resolved="org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"/>
+  <library
+      name="org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk8/1.8.0/ed04f49e186a116753ad70d34f0ac2925d1d8020/kotlin-stdlib-jdk8-1.8.0.jar"
+      resolved="org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0"/>
+  <library
+      name="com.facebook.fresco:ui-core:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/a324e9e59d665bd75bac7d5ee5e3e7d0/transformed/ui-core-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:ui-core:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/a324e9e59d665bd75bac7d5ee5e3e7d0/transformed/ui-core-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:imagepipeline:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/24f7f6236ecf8fb5d4cea8f70b59ad02/transformed/imagepipeline-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:imagepipeline:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/24f7f6236ecf8fb5d4cea8f70b59ad02/transformed/imagepipeline-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:imagepipeline-base:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/8838176c889a4a8cdb2afe6b2ad91662/transformed/imagepipeline-base-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:imagepipeline-base:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/8838176c889a4a8cdb2afe6b2ad91662/transformed/imagepipeline-base-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.annotation:annotation-experimental:1.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/9131425a3b082fe5fdbbae49905d60e1/transformed/annotation-experimental-1.4.0/jars/classes.jar"
+      resolved="androidx.annotation:annotation-experimental:1.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/9131425a3b082fe5fdbbae49905d60e1/transformed/annotation-experimental-1.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk7/1.8.0/3c91271347f678c239607abb676d4032a7898427/kotlin-stdlib-jdk7-1.8.0.jar"
+      resolved="org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0"/>
+  <library
+      name="org.jetbrains.kotlin:kotlin-stdlib:2.0.21@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib/2.0.21/618b539767b4899b4660a83006e052b63f1db551/kotlin-stdlib-2.0.21.jar"
+      resolved="org.jetbrains.kotlin:kotlin-stdlib:2.0.21"/>
+  <library
+      name="org.jetbrains:annotations:13.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains/annotations/13.0/919f0dfe192fb4e063e7dacadee7f8bb9a2672a9/annotations-13.0.jar"
+      resolved="org.jetbrains:annotations:13.0"/>
+  <library
+      name="androidx.tracing:tracing:1.1.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/c173d3a05d8ae46f9797a61de8c24654/transformed/tracing-1.1.0/jars/classes.jar"
+      resolved="androidx.tracing:tracing:1.1.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/c173d3a05d8ae46f9797a61de8c24654/transformed/tracing-1.1.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.autofill:autofill:1.1.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/78de6eb07bdfb23e3bf33a3075baeb8e/transformed/autofill-1.1.0/jars/classes.jar"
+      resolved="androidx.autofill:autofill:1.1.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/78de6eb07bdfb23e3bf33a3075baeb8e/transformed/autofill-1.1.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fbjni:fbjni:0.7.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/ff5571f9fb43ac0a80372e2328c5ae50/transformed/fbjni-0.7.0/jars/classes.jar"
+      resolved="com.facebook.fbjni:fbjni:0.7.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/ff5571f9fb43ac0a80372e2328c5ae50/transformed/fbjni-0.7.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.soloader:soloader:0.12.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/5a8f6ac6cbd5c2257728f8f3593dbb6b/transformed/soloader-0.12.1/jars/classes.jar"
+      resolved="com.facebook.soloader:soloader:0.12.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/5a8f6ac6cbd5c2257728f8f3593dbb6b/transformed/soloader-0.12.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.soloader:nativeloader:0.12.1@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.facebook.soloader/nativeloader/0.12.1/492cc5082540e19b29328f2f56c53255cb6e7cc6/nativeloader-0.12.1.jar"
+      resolved="com.facebook.soloader:nativeloader:0.12.1"/>
+  <library
+      name="com.facebook.soloader:annotation:0.12.1@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.facebook.soloader/annotation/0.12.1/945ada76f62253ba8e72cbf755d0e85ea7362cfe/annotation-0.12.1.jar"
+      resolved="com.facebook.soloader:annotation:0.12.1"/>
+  <library
+      name="com.facebook.infer.annotation:infer-annotation:0.18.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.facebook.infer.annotation/infer-annotation/0.18.0/27539793fe93ed7d92b6376281c16cda8278ab2f/infer-annotation-0.18.0.jar"
+      resolved="com.facebook.infer.annotation:infer-annotation:0.18.0"/>
+  <library
+      name="com.google.code.findbugs:jsr305:3.0.2@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.2/25ea2e8b0c338a877313bd4672d3fe056ea78f0d/jsr305-3.0.2.jar"
+      resolved="com.google.code.findbugs:jsr305:3.0.2"/>
+  <library
+      name="org.jetbrains.kotlin:kotlin-annotations-jvm:1.3.72@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-annotations-jvm/1.3.72/7dba6c57de526588d8080317bda0c14cd88c8055/kotlin-annotations-jvm-1.3.72.jar"
+      resolved="org.jetbrains.kotlin:kotlin-annotations-jvm:1.3.72"/>
+  <library
+      name="com.facebook.fresco:imagepipeline-native:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/a84fad140bb4378719a0df49decab3ca/transformed/imagepipeline-native-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:imagepipeline-native:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/a84fad140bb4378719a0df49decab3ca/transformed/imagepipeline-native-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:memory-type-ashmem:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/39492ef62204605af942174a68a1b4c2/transformed/memory-type-ashmem-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:memory-type-ashmem:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/39492ef62204605af942174a68a1b4c2/transformed/memory-type-ashmem-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:memory-type-native:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/00d70e80496e8e00c919d63a0cfb4e03/transformed/memory-type-native-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:memory-type-native:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/00d70e80496e8e00c919d63a0cfb4e03/transformed/memory-type-native-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:memory-type-java:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/eab88c71c711e9ca5ee90c9c1ff50874/transformed/memory-type-java-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:memory-type-java:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/eab88c71c711e9ca5ee90c9c1ff50874/transformed/memory-type-java-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:nativeimagefilters:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/3ae1960b8853f8ae1c53514a2e6bd179/transformed/nativeimagefilters-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:nativeimagefilters:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/3ae1960b8853f8ae1c53514a2e6bd179/transformed/nativeimagefilters-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:nativeimagetranscoder:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/cb0c5f4d6260f4c6fd1bd226faba0c58/transformed/nativeimagetranscoder-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:nativeimagetranscoder:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/cb0c5f4d6260f4c6fd1bd226faba0c58/transformed/nativeimagetranscoder-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.yoga:proguard-annotations:1.19.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.facebook.yoga/proguard-annotations/1.19.0/fcbbb39052e6490eaaf6a6959c49c3a4fbe87c63/proguard-annotations-1.19.0.jar"
+      resolved="com.facebook.yoga:proguard-annotations:1.19.0"/>
+  <library
+      name="javax.inject:javax.inject:1@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/javax.inject/javax.inject/1/6975da39a7040257bd51d21a231b76c915872d38/javax.inject-1.jar"
+      resolved="javax.inject:javax.inject:1"/>
+  <library
+      name="com.facebook.fresco:urimod:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/5dde2af5a1791363b252b37b8da8b48b/transformed/urimod-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:urimod:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/5dde2af5a1791363b252b37b8da8b48b/transformed/urimod-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:vito-source:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/52b258a0ef5220dc5665ef5c2ecb70f3/transformed/vito-source-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:vito-source:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/52b258a0ef5220dc5665ef5c2ecb70f3/transformed/vito-source-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.emoji2:emoji2-views-helper:1.2.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/80d004c8c82aa0167a0bde157e1dd04f/transformed/emoji2-views-helper-1.2.0/jars/classes.jar"
+      resolved="androidx.emoji2:emoji2-views-helper:1.2.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/80d004c8c82aa0167a0bde157e1dd04f/transformed/emoji2-views-helper-1.2.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.emoji2:emoji2:1.2.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/3d381fd813c7ce65931eeac5163ee6f1/transformed/emoji2-1.2.0/jars/classes.jar:/Users/dhruv/.gradle/caches/8.10.2/transforms/3d381fd813c7ce65931eeac5163ee6f1/transformed/emoji2-1.2.0/jars/libs/repackaged.jar"
+      resolved="androidx.emoji2:emoji2:1.2.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/3d381fd813c7ce65931eeac5163ee6f1/transformed/emoji2-1.2.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="com.facebook.fresco:soloader:3.4.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/73ce9bca36677147a567806072677148/transformed/soloader-3.4.0/jars/classes.jar"
+      resolved="com.facebook.fresco:soloader:3.4.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/73ce9bca36677147a567806072677148/transformed/soloader-3.4.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.lifecycle:lifecycle-process:2.6.2@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/2cfaa9d077af9b22c91a3ad07ef73b49/transformed/lifecycle-process-2.6.2/jars/classes.jar"
+      resolved="androidx.lifecycle:lifecycle-process:2.6.2"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/2cfaa9d077af9b22c91a3ad07ef73b49/transformed/lifecycle-process-2.6.2"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.profileinstaller:profileinstaller:1.3.0@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/2580f2dd50f1d918aa6c95963535720e/transformed/profileinstaller-1.3.0/jars/classes.jar"
+      resolved="androidx.profileinstaller:profileinstaller:1.3.0"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/2580f2dd50f1d918aa6c95963535720e/transformed/profileinstaller-1.3.0"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.startup:startup-runtime:1.1.1@aar"
+      jars="/Users/dhruv/.gradle/caches/8.10.2/transforms/bfdcca55b1999c4562423c6cca101a88/transformed/startup-runtime-1.1.1/jars/classes.jar"
+      resolved="androidx.startup:startup-runtime:1.1.1"
+      folder="/Users/dhruv/.gradle/caches/8.10.2/transforms/bfdcca55b1999c4562423c6cca101a88/transformed/startup-runtime-1.1.1"
+      manifest="AndroidManifest.xml"
+      resFolder="res"
+      assetsFolder="assets"
+      lintJar="lint.jar"
+      publicResources="public.txt"
+      symbolFile="R.txt"
+      externalAnnotations="annotations.zip"
+      proguardRules="proguard.txt"/>
+  <library
+      name="androidx.resourceinspection:resourceinspection-annotation:1.0.1@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/androidx.resourceinspection/resourceinspection-annotation/1.0.1/8c21f8ff5d96d5d52c948707f7e4d6ca6773feef/resourceinspection-annotation-1.0.1.jar"
+      resolved="androidx.resourceinspection:resourceinspection-annotation:1.0.1"/>
+  <library
+      name="androidx.concurrent:concurrent-futures:1.1.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/androidx.concurrent/concurrent-futures/1.1.0/50b7fb98350d5f42a4e49704b03278542293ba48/concurrent-futures-1.1.0.jar"
+      resolved="androidx.concurrent:concurrent-futures:1.1.0"/>
+  <library
+      name="com.parse.bolts:bolts-tasks:1.4.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.parse.bolts/bolts-tasks/1.4.0/d85884acf6810a3bbbecb587f239005cbc846dc4/bolts-tasks-1.4.0.jar"
+      resolved="com.parse.bolts:bolts-tasks:1.4.0"/>
+  <library
+      name="com.google.guava:listenablefuture:1.0@jar"
+      jars="/Users/dhruv/.gradle/caches/modules-2/files-2.1/com.google.guava/listenablefuture/1.0/c949a840a6acbc5268d088e47b04177bf90b3cad/listenablefuture-1.0.jar"
+      resolved="com.google.guava:listenablefuture:1.0"/>
+</libraries>
diff --git a/node_modules/react-native-svg/android/build/intermediates/lint_vital_lint_model/release/generateReleaseLintVitalModel/release.xml b/node_modules/react-native-svg/android/build/intermediates/lint_vital_lint_model/release/generateReleaseLintVitalModel/release.xml
new file mode 100644
index 0000000..4e37381
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/lint_vital_lint_model/release/generateReleaseLintVitalModel/release.xml
@@ -0,0 +1,32 @@
+<variant
+    name="release"
+    package="com.horcrux.svg"
+    minSdkVersion="24"
+    targetSdkVersion="35"
+    mergedManifest="build/intermediates/merged_manifest/release/processReleaseManifest/AndroidManifest.xml"
+    manifestMergeReport="build/outputs/logs/manifest-merger-release-report.txt"
+    proguardFiles="build/intermediates/default_proguard_files/global/proguard-android.txt-8.7.2"
+    consumerProguardFiles="proguard-rules.pro"
+    partialResultsDir="build/intermediates/lint_vital_partial_results/release/lintVitalAnalyzeRelease/out">
+  <buildFeatures
+      namespacing="REQUIRED"/>
+  <sourceProviders>
+    <sourceProvider
+        manifests="src/main/AndroidManifest.xml"
+        javaDirectories="src/main/java:build/generated/source/codegen/java:src/release/java:src/main/kotlin:src/release/kotlin"
+        resDirectories="src/main/res:src/release/res"
+        assetsDirectories="src/main/assets:src/release/assets"/>
+  </sourceProviders>
+  <testSourceProviders>
+  </testSourceProviders>
+  <testFixturesSourceProviders>
+  </testFixturesSourceProviders>
+  <artifact
+      classOutputs="build/intermediates/javac/release/compileReleaseJavaWithJavac/classes:build/intermediates/compile_r_class_jar/release/generateReleaseRFile/R.jar"
+      type="MAIN"
+      applicationId="com.horcrux.svg"
+      generatedSourceFolders="build/generated/ap_generated_sources/release/out:build/generated/source/buildConfig/release"
+      generatedResourceFolders="build/generated/res/resValues/release"
+      desugaredMethodsFiles="/Users/dhruv/.gradle/caches/8.10.2/transforms/b13d2ac641a1f2772971f75d699200bf/transformed/D8BackportedDesugaredMethods.txt">
+  </artifact>
+</variant>
diff --git a/node_modules/react-native-svg/android/build/intermediates/local_aar_for_lint/release/out.aar b/node_modules/react-native-svg/android/build/intermediates/local_aar_for_lint/release/out.aar
new file mode 100644
index 0000000..2a418c8
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/local_aar_for_lint/release/out.aar differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/local_only_symbol_list/release/parseReleaseLocalResources/R-def.txt b/node_modules/react-native-svg/android/build/intermediates/local_only_symbol_list/release/parseReleaseLocalResources/R-def.txt
new file mode 100644
index 0000000..78ac5b8
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/local_only_symbol_list/release/parseReleaseLocalResources/R-def.txt
@@ -0,0 +1,2 @@
+R_DEF: Internal format may change without notice
+local
diff --git a/node_modules/react-native-svg/android/build/intermediates/manifest_merge_blame_file/release/processReleaseManifest/manifest-merger-blame-release-report.txt b/node_modules/react-native-svg/android/build/intermediates/manifest_merge_blame_file/release/processReleaseManifest/manifest-merger-blame-release-report.txt
new file mode 100644
index 0000000..e764d9f
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/manifest_merge_blame_file/release/processReleaseManifest/manifest-merger-blame-release-report.txt
@@ -0,0 +1,7 @@
+1<?xml version="1.0" encoding="utf-8"?>
+2<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+3    package="com.horcrux.svg" >
+4
+5    <uses-sdk android:minSdkVersion="24" />
+6
+7</manifest>
diff --git a/node_modules/react-native-svg/android/build/intermediates/merged_consumer_proguard_file/release/mergeReleaseConsumerProguardFiles/proguard.txt b/node_modules/react-native-svg/android/build/intermediates/merged_consumer_proguard_file/release/mergeReleaseConsumerProguardFiles/proguard.txt
new file mode 100644
index 0000000..19f9dde
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/merged_consumer_proguard_file/release/mergeReleaseConsumerProguardFiles/proguard.txt
@@ -0,0 +1 @@
+-keep public class com.horcrux.svg.** {*;}
diff --git a/node_modules/react-native-svg/android/build/intermediates/merged_java_res/release/mergeReleaseJavaResource/feature-react-native-svg.jar b/node_modules/react-native-svg/android/build/intermediates/merged_java_res/release/mergeReleaseJavaResource/feature-react-native-svg.jar
new file mode 100644
index 0000000..15cb0ec
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/merged_java_res/release/mergeReleaseJavaResource/feature-react-native-svg.jar differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/merged_manifest/release/processReleaseManifest/AndroidManifest.xml b/node_modules/react-native-svg/android/build/intermediates/merged_manifest/release/processReleaseManifest/AndroidManifest.xml
new file mode 100644
index 0000000..037933a
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/merged_manifest/release/processReleaseManifest/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.horcrux.svg" >
+
+    <uses-sdk android:minSdkVersion="24" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/intermediates/navigation_json/release/extractDeepLinksRelease/navigation.json b/node_modules/react-native-svg/android/build/intermediates/navigation_json/release/extractDeepLinksRelease/navigation.json
new file mode 100644
index 0000000..0637a08
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/navigation_json/release/extractDeepLinksRelease/navigation.json
@@ -0,0 +1 @@
+[]
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/intermediates/nested_resources_validation_report/release/generateReleaseResources/nestedResourcesValidationReport.txt b/node_modules/react-native-svg/android/build/intermediates/nested_resources_validation_report/release/generateReleaseResources/nestedResourcesValidationReport.txt
new file mode 100644
index 0000000..08f4ebe
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/nested_resources_validation_report/release/generateReleaseResources/nestedResourcesValidationReport.txt
@@ -0,0 +1 @@
+0 Warning/Error
\ No newline at end of file
diff --git a/node_modules/react-native-svg/android/build/intermediates/runtime_library_classes_jar/release/bundleLibRuntimeToJarRelease/classes.jar b/node_modules/react-native-svg/android/build/intermediates/runtime_library_classes_jar/release/bundleLibRuntimeToJarRelease/classes.jar
new file mode 100644
index 0000000..50ec96a
Binary files /dev/null and b/node_modules/react-native-svg/android/build/intermediates/runtime_library_classes_jar/release/bundleLibRuntimeToJarRelease/classes.jar differ
diff --git a/node_modules/react-native-svg/android/build/intermediates/symbol_list_with_package_name/release/generateReleaseRFile/package-aware-r.txt b/node_modules/react-native-svg/android/build/intermediates/symbol_list_with_package_name/release/generateReleaseRFile/package-aware-r.txt
new file mode 100644
index 0000000..6ba6ea2
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/intermediates/symbol_list_with_package_name/release/generateReleaseRFile/package-aware-r.txt
@@ -0,0 +1 @@
+com.horcrux.svg
diff --git a/node_modules/react-native-svg/android/build/outputs/logs/manifest-merger-release-report.txt b/node_modules/react-native-svg/android/build/outputs/logs/manifest-merger-release-report.txt
new file mode 100644
index 0000000..6d99d61
--- /dev/null
+++ b/node_modules/react-native-svg/android/build/outputs/logs/manifest-merger-release-report.txt
@@ -0,0 +1,16 @@
+-- Merging decision tree log ---
+manifest
+ADDED from /Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/AndroidManifest.xml:1:1-71
+INJECTED from /Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/AndroidManifest.xml:1:1-71
+	package
+		INJECTED from /Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/AndroidManifest.xml
+	xmlns:android
+		ADDED from /Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/AndroidManifest.xml:1:11-69
+uses-sdk
+INJECTED from /Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from /Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/AndroidManifest.xml
+INJECTED from /Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/AndroidManifest.xml
+	android:targetSdkVersion
+		INJECTED from /Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/AndroidManifest.xml
+	android:minSdkVersion
+		INJECTED from /Users/dhruv/Projects/TrackaExpense/node_modules/react-native-svg/android/src/main/AndroidManifest.xml
diff --git a/node_modules/react-native-svg/android/build/tmp/compileReleaseJavaWithJavac/previous-compilation-data.bin b/node_modules/react-native-svg/android/build/tmp/compileReleaseJavaWithJavac/previous-compilation-data.bin
new file mode 100644
index 0000000..c5ca29d
Binary files /dev/null and b/node_modules/react-native-svg/android/build/tmp/compileReleaseJavaWithJavac/previous-compilation-data.bin differ
diff --git a/node_modules/react-native-svg/common/cpp/react/renderer/components/rnsvg/RNSVGLayoutableShadowNode.cpp b/node_modules/react-native-svg/common/cpp/react/renderer/components/rnsvg/RNSVGLayoutableShadowNode.cpp
index 11718dd..fe993b3 100644
--- a/node_modules/react-native-svg/common/cpp/react/renderer/components/rnsvg/RNSVGLayoutableShadowNode.cpp
+++ b/node_modules/react-native-svg/common/cpp/react/renderer/components/rnsvg/RNSVGLayoutableShadowNode.cpp
@@ -28,8 +28,8 @@ void RNSVGLayoutableShadowNode::setZeroDimensions() {
   // views in the layout inspector when Yoga attempts to interpret SVG
   // properties like width when viewBox scale is set.
   auto style = yogaNode_.style();
-  style.setDimension(yoga::Dimension::Width, yoga::StyleSizeLength::points(0));
-  style.setDimension(yoga::Dimension::Height, yoga::StyleSizeLength::points(0));
+  style.setDimension(yoga::Dimension::Width, yoga::StyleLength::points(0));
+  style.setDimension(yoga::Dimension::Height, yoga::StyleLength::points(0));
   yogaNode_.setStyle(style);
 }
 
